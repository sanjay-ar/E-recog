{"ast":null,"code":"var _jsxFileName = \"/Users/sanjayar/Desktop/moody-main copy 2/src/pages/meeting/FeedbackLinkButton.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, IconButton, makeStyles, Tooltip, Typography } from \"@material-ui/core\";\nimport { Feedback, FileCopy, HourglassEmpty, Security, Visibility } from \"@material-ui/icons\";\nimport { useAppDispatch, useAppSelector } from \"../../reduxHooks\";\nimport { createFeedbackLink } from \"../../meetings/meetingsSlice\";\nimport SimpleDialog from \"../../components/SimpleDialog\";\nimport { useState } from \"react\";\nimport clipboardCopy from \"clipboard-copy\";\nimport { addMinutes, differenceInMinutes, formatDistanceToNow } from \"date-fns\";\nimport { EXPIRATION_MINUTES } from \"../feedback/constants\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport { selectActiveMeeting, selectActiveMeetingFeedbackLinkId } from \"../../meetings/meetingsSelectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FeedbackLinkExpiredButton = () => /*#__PURE__*/_jsxDEV(Button, {\n  disabled: true,\n  color: \"primary\",\n  startIcon: /*#__PURE__*/_jsxDEV(HourglassEmpty, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 47\n  }, this),\n  children: \"Feedback link expired\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 3\n}, this);\n\n_c = FeedbackLinkExpiredButton;\nconst useStyles = makeStyles(() => ({\n  code: {\n    wordBreak: \"break-all\"\n  }\n}));\nexport default function FeedbackLinkButton() {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const feedbackLinkId = useAppSelector(selectActiveMeetingFeedbackLinkId);\n  const feedbackLink = !!feedbackLinkId ? `${window.location.origin}/feedback/${feedbackLinkId}` : undefined;\n  const activeMeetingStoppedAt = useAppSelector(state => {\n    var _selectActiveMeeting;\n\n    return (_selectActiveMeeting = selectActiveMeeting(state)) === null || _selectActiveMeeting === void 0 ? void 0 : _selectActiveMeeting.stoppedAt;\n  });\n  const linkExpired = !!activeMeetingStoppedAt ? Math.abs(differenceInMinutes(new Date(activeMeetingStoppedAt), new Date())) > EXPIRATION_MINUTES : false;\n  const [open, setOpen] = useState(false);\n  const classes = useStyles();\n  return !!feedbackLinkId ? linkExpired ? /*#__PURE__*/_jsxDEV(FeedbackLinkExpiredButton, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SimpleDialog, {\n      header: \"Feedback link\",\n      body: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          mb: 1,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"info\",\n            icon: /*#__PURE__*/_jsxDEV(Security, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 46\n            }, this),\n            children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n              children: \"Privacy information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: \"The meeting name and the meeting end date will be visible to the user. Your personal information and all other information related to this meeting stay private.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Share this link with your audience to gather feedback:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          border: 1,\n          borderColor: \"primary.main\",\n          p: 1,\n          my: 1,\n          borderRadius: 4,\n          display: \"flex\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(\"code\", {\n            className: classes.code,\n            children: feedbackLink\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Copy link\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => clipboardCopy(feedbackLink),\n                children: /*#__PURE__*/_jsxDEV(FileCopy, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\"The link expires in\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: formatDistanceToNow(addMinutes(new Date(activeMeetingStoppedAt), EXPIRATION_MINUTES))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true),\n      primaryAction: () => {},\n      primaryActionText: \"Close\",\n      open: open,\n      handleClose: () => setOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      startIcon: /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 22\n      }, this),\n      color: \"primary\",\n      onClick: () => setOpen(true),\n      children: \"Show feedback link\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true) : linkExpired ? /*#__PURE__*/_jsxDEV(FeedbackLinkExpiredButton, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Button, {\n    startIcon: /*#__PURE__*/_jsxDEV(Feedback, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 18\n    }, this),\n    color: \"primary\",\n    onClick: async () => {\n      await dispatch(createFeedbackLink());\n      setOpen(true);\n    },\n    children: \"Create feedback link\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FeedbackLinkButton, \"fQGIn8tJZdZ0bXu8bdkUhaeMP2U=\", false, function () {\n  return [useAppDispatch, useAppSelector, useAppSelector, useStyles];\n});\n\n_c2 = FeedbackLinkButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FeedbackLinkExpiredButton\");\n$RefreshReg$(_c2, \"FeedbackLinkButton\");","map":{"version":3,"sources":["/Users/sanjayar/Desktop/moody-main copy 2/src/pages/meeting/FeedbackLinkButton.tsx"],"names":["Box","Button","IconButton","makeStyles","Tooltip","Typography","Feedback","FileCopy","HourglassEmpty","Security","Visibility","useAppDispatch","useAppSelector","createFeedbackLink","SimpleDialog","useState","clipboardCopy","addMinutes","differenceInMinutes","formatDistanceToNow","EXPIRATION_MINUTES","Alert","AlertTitle","selectActiveMeeting","selectActiveMeetingFeedbackLinkId","FeedbackLinkExpiredButton","useStyles","code","wordBreak","FeedbackLinkButton","dispatch","feedbackLinkId","feedbackLink","window","location","origin","undefined","activeMeetingStoppedAt","state","stoppedAt","linkExpired","Math","abs","Date","open","setOpen","classes"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Button,\n  IconButton,\n  makeStyles,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\nimport {\n  Feedback,\n  FileCopy,\n  HourglassEmpty,\n  Security,\n  Visibility,\n} from \"@material-ui/icons\";\nimport { useAppDispatch, useAppSelector } from \"../../reduxHooks\";\nimport { createFeedbackLink } from \"../../meetings/meetingsSlice\";\nimport SimpleDialog from \"../../components/SimpleDialog\";\nimport { useState } from \"react\";\nimport clipboardCopy from \"clipboard-copy\";\nimport { addMinutes, differenceInMinutes, formatDistanceToNow } from \"date-fns\";\nimport { EXPIRATION_MINUTES } from \"../feedback/constants\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport {\n  selectActiveMeeting,\n  selectActiveMeetingFeedbackLinkId,\n} from \"../../meetings/meetingsSelectors\";\n\nconst FeedbackLinkExpiredButton = (): JSX.Element => (\n  <Button disabled color=\"primary\" startIcon={<HourglassEmpty />}>\n    Feedback link expired\n  </Button>\n);\n\nconst useStyles = makeStyles(() => ({\n  code: {\n    wordBreak: \"break-all\",\n  },\n}));\n\nexport default function FeedbackLinkButton(): JSX.Element {\n  const dispatch = useAppDispatch();\n  const feedbackLinkId: string | undefined = useAppSelector(\n    selectActiveMeetingFeedbackLinkId\n  );\n  const feedbackLink: string | undefined = !!feedbackLinkId\n    ? `${window.location.origin}/feedback/${feedbackLinkId}`\n    : undefined;\n  const activeMeetingStoppedAt = useAppSelector(\n    (state) => selectActiveMeeting(state)?.stoppedAt\n  );\n  const linkExpired: boolean = !!activeMeetingStoppedAt\n    ? Math.abs(\n        differenceInMinutes(new Date(activeMeetingStoppedAt), new Date())\n      ) > EXPIRATION_MINUTES\n    : false;\n\n  const [open, setOpen] = useState<boolean>(false);\n\n  const classes = useStyles();\n\n  return !!feedbackLinkId ? (\n    linkExpired ? (\n      <FeedbackLinkExpiredButton />\n    ) : (\n      <>\n        <SimpleDialog\n          header=\"Feedback link\"\n          body={\n            <>\n              <Box mb={1}>\n                <Alert severity=\"info\" icon={<Security />}>\n                  <AlertTitle>Privacy information</AlertTitle>\n                  <Typography variant=\"body1\">\n                    The meeting name and the meeting end date will be visible to\n                    the user. Your personal information and all other\n                    information related to this meeting stay private.\n                  </Typography>\n                </Alert>\n              </Box>\n              <Typography variant=\"body1\">\n                <strong>\n                  Share this link with your audience to gather feedback:\n                </strong>\n              </Typography>\n              <Box\n                border={1}\n                borderColor=\"primary.main\"\n                p={1}\n                my={1}\n                borderRadius={4}\n                display=\"flex\"\n                alignItems=\"center\"\n              >\n                <code className={classes.code}>{feedbackLink!}</code>\n                <Box>\n                  <Tooltip title=\"Copy link\">\n                    <IconButton onClick={() => clipboardCopy(feedbackLink!)}>\n                      <FileCopy />\n                    </IconButton>\n                  </Tooltip>\n                </Box>\n              </Box>\n              <Typography variant=\"body2\">\n                The link expires in{\" \"}\n                <strong>\n                  {formatDistanceToNow(\n                    addMinutes(\n                      new Date(activeMeetingStoppedAt!),\n                      EXPIRATION_MINUTES\n                    )\n                  )}\n                </strong>\n                .\n              </Typography>\n            </>\n          }\n          primaryAction={() => {}}\n          primaryActionText=\"Close\"\n          open={open}\n          handleClose={() => setOpen(false)}\n        />\n        <Button\n          startIcon={<Visibility />}\n          color=\"primary\"\n          onClick={() => setOpen(true)}\n        >\n          Show feedback link\n        </Button>\n      </>\n    )\n  ) : linkExpired ? (\n    <FeedbackLinkExpiredButton />\n  ) : (\n    <Button\n      startIcon={<Feedback />}\n      color=\"primary\"\n      onClick={async () => {\n        await dispatch(createFeedbackLink());\n        setOpen(true);\n      }}\n    >\n      Create feedback link\n    </Button>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}