{"ast":null,"code":"/*!\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { Buffer } from 'buffer';\n/** @class */\n\nvar CognitoJwtToken = /*#__PURE__*/function () {\n  /**\n   * Constructs a new CognitoJwtToken object\n   * @param {string=} token The JWT token.\n   */\n  function CognitoJwtToken(token) {\n    // Assign object\n    this.jwtToken = token || '';\n    this.payload = this.decodePayload();\n  }\n  /**\n   * @returns {string} the record's token.\n   */\n\n\n  var _proto = CognitoJwtToken.prototype;\n\n  _proto.getJwtToken = function getJwtToken() {\n    return this.jwtToken;\n  }\n  /**\n   * @returns {int} the token's expiration (exp member).\n   */\n  ;\n\n  _proto.getExpiration = function getExpiration() {\n    return this.payload.exp;\n  }\n  /**\n   * @returns {int} the token's \"issued at\" (iat member).\n   */\n  ;\n\n  _proto.getIssuedAt = function getIssuedAt() {\n    return this.payload.iat;\n  }\n  /**\n   * @returns {object} the token's payload.\n   */\n  ;\n\n  _proto.decodePayload = function decodePayload() {\n    var payload = this.jwtToken.split('.')[1];\n\n    try {\n      return JSON.parse(Buffer.from(payload, 'base64').toString('utf8'));\n    } catch (err) {\n      return {};\n    }\n  };\n\n  return CognitoJwtToken;\n}();\n\nexport { CognitoJwtToken as default };","map":{"version":3,"sources":["/Users/sanjayar/Desktop/moody-main copy 2/node_modules/amazon-cognito-identity-js/es/CognitoJwtToken.js"],"names":["Buffer","CognitoJwtToken","token","jwtToken","payload","decodePayload","_proto","prototype","getJwtToken","getExpiration","exp","getIssuedAt","iat","split","JSON","parse","from","toString","err","default"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,SAASA,MAAT,QAAuB,QAAvB;AAEA;;AACA,IAAIC,eAAe,GAAG,aAAa,YAAY;AAC7C;AACF;AACA;AACA;AACE,WAASA,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B;AACA,SAAKC,QAAL,GAAgBD,KAAK,IAAI,EAAzB;AACA,SAAKE,OAAL,GAAe,KAAKC,aAAL,EAAf;AACD;AAED;AACF;AACA;;;AACE,MAAIC,MAAM,GAAGL,eAAe,CAACM,SAA7B;;AACAD,EAAAA,MAAM,CAACE,WAAP,GAAqB,SAASA,WAAT,GAAuB;AAC1C,WAAO,KAAKL,QAAZ;AACD;AAED;AACF;AACA;AANE;;AAOAG,EAAAA,MAAM,CAACG,aAAP,GAAuB,SAASA,aAAT,GAAyB;AAC9C,WAAO,KAAKL,OAAL,CAAaM,GAApB;AACD;AAED;AACF;AACA;AANE;;AAOAJ,EAAAA,MAAM,CAACK,WAAP,GAAqB,SAASA,WAAT,GAAuB;AAC1C,WAAO,KAAKP,OAAL,CAAaQ,GAApB;AACD;AAED;AACF;AACA;AANE;;AAOAN,EAAAA,MAAM,CAACD,aAAP,GAAuB,SAASA,aAAT,GAAyB;AAC9C,QAAID,OAAO,GAAG,KAAKD,QAAL,CAAcU,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAd;;AACA,QAAI;AACF,aAAOC,IAAI,CAACC,KAAL,CAAWf,MAAM,CAACgB,IAAP,CAAYZ,OAAZ,EAAqB,QAArB,EAA+Ba,QAA/B,CAAwC,MAAxC,CAAX,CAAP;AACD,KAFD,CAEE,OAAOC,GAAP,EAAY;AACZ,aAAO,EAAP;AACD;AACF,GAPD;;AAQA,SAAOjB,eAAP;AACD,CA7CkC,EAAnC;;AA8CA,SAASA,eAAe,IAAIkB,OAA5B","sourcesContent":["/*!\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Buffer } from 'buffer';\n\n/** @class */\nvar CognitoJwtToken = /*#__PURE__*/function () {\n  /**\n   * Constructs a new CognitoJwtToken object\n   * @param {string=} token The JWT token.\n   */\n  function CognitoJwtToken(token) {\n    // Assign object\n    this.jwtToken = token || '';\n    this.payload = this.decodePayload();\n  }\n\n  /**\n   * @returns {string} the record's token.\n   */\n  var _proto = CognitoJwtToken.prototype;\n  _proto.getJwtToken = function getJwtToken() {\n    return this.jwtToken;\n  }\n\n  /**\n   * @returns {int} the token's expiration (exp member).\n   */;\n  _proto.getExpiration = function getExpiration() {\n    return this.payload.exp;\n  }\n\n  /**\n   * @returns {int} the token's \"issued at\" (iat member).\n   */;\n  _proto.getIssuedAt = function getIssuedAt() {\n    return this.payload.iat;\n  }\n\n  /**\n   * @returns {object} the token's payload.\n   */;\n  _proto.decodePayload = function decodePayload() {\n    var payload = this.jwtToken.split('.')[1];\n    try {\n      return JSON.parse(Buffer.from(payload, 'base64').toString('utf8'));\n    } catch (err) {\n      return {};\n    }\n  };\n  return CognitoJwtToken;\n}();\nexport { CognitoJwtToken as default };"]},"metadata":{},"sourceType":"module"}