{"ast":null,"code":"import { __assign, __awaiter, __generator, __read } from \"tslib\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { decorateServiceException as __decorateServiceException, expectInt32 as __expectInt32, expectNonNull as __expectNonNull, expectObject as __expectObject, expectString as __expectString, LazyJsonString as __LazyJsonString, limitedParseDouble as __limitedParseDouble, map as __map, resolvedPath as __resolvedPath, throwDefaultError } from \"@aws-sdk/smithy-client\";\nimport { LexRuntimeServiceServiceException as __BaseException } from \"../models/LexRuntimeServiceServiceException\";\nimport { BadGatewayException, BadRequestException, ConflictException, DependencyFailedException, InternalFailureException, LimitExceededException, LoopDetectedException, NotAcceptableException, NotFoundException, RequestTimeoutException, UnsupportedMediaTypeException } from \"../models/models_0\";\nexport var serializeAws_restJson1DeleteSessionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/bot/{botName}/alias/{botAlias}/user/{userId}/session\";\n          resolvedPath = __resolvedPath(resolvedPath, input, \"botName\", function () {\n            return input.botName;\n          }, \"{botName}\", false);\n          resolvedPath = __resolvedPath(resolvedPath, input, \"botAlias\", function () {\n            return input.botAlias;\n          }, \"{botAlias}\", false);\n          resolvedPath = __resolvedPath(resolvedPath, input, \"userId\", function () {\n            return input.userId;\n          }, \"{userId}\", false);\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetSessionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/bot/{botName}/alias/{botAlias}/user/{userId}/session\";\n          resolvedPath = __resolvedPath(resolvedPath, input, \"botName\", function () {\n            return input.botName;\n          }, \"{botName}\", false);\n          resolvedPath = __resolvedPath(resolvedPath, input, \"botAlias\", function () {\n            return input.botAlias;\n          }, \"{botAlias}\", false);\n          resolvedPath = __resolvedPath(resolvedPath, input, \"userId\", function () {\n            return input.userId;\n          }, \"{userId}\", false);\n          query = map({\n            checkpointLabelFilter: [, input.checkpointLabelFilter]\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PostContentCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = map({}, isSerializableHeaderValue, {\n            \"x-amz-content-sha256\": \"UNSIGNED-PAYLOAD\",\n            \"content-type\": input.contentType || \"application/octet-stream\",\n            \"x-amz-lex-session-attributes\": [function () {\n              return isSerializableHeaderValue(input.sessionAttributes);\n            }, function () {\n              return context.base64Encoder(Buffer.from(__LazyJsonString.fromObject(input.sessionAttributes)));\n            }],\n            \"x-amz-lex-request-attributes\": [function () {\n              return isSerializableHeaderValue(input.requestAttributes);\n            }, function () {\n              return context.base64Encoder(Buffer.from(__LazyJsonString.fromObject(input.requestAttributes)));\n            }],\n            accept: input.accept,\n            \"x-amz-lex-active-contexts\": [function () {\n              return isSerializableHeaderValue(input.activeContexts);\n            }, function () {\n              return context.base64Encoder(Buffer.from(__LazyJsonString.fromObject(input.activeContexts)));\n            }]\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/bot/{botName}/alias/{botAlias}/user/{userId}/content\";\n          resolvedPath = __resolvedPath(resolvedPath, input, \"botName\", function () {\n            return input.botName;\n          }, \"{botName}\", false);\n          resolvedPath = __resolvedPath(resolvedPath, input, \"botAlias\", function () {\n            return input.botAlias;\n          }, \"{botAlias}\", false);\n          resolvedPath = __resolvedPath(resolvedPath, input, \"userId\", function () {\n            return input.userId;\n          }, \"{userId}\", false);\n\n          if (input.inputStream !== undefined) {\n            body = input.inputStream;\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PostTextCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/bot/{botName}/alias/{botAlias}/user/{userId}/text\";\n          resolvedPath = __resolvedPath(resolvedPath, input, \"botName\", function () {\n            return input.botName;\n          }, \"{botName}\", false);\n          resolvedPath = __resolvedPath(resolvedPath, input, \"botAlias\", function () {\n            return input.botAlias;\n          }, \"{botAlias}\", false);\n          resolvedPath = __resolvedPath(resolvedPath, input, \"userId\", function () {\n            return input.userId;\n          }, \"{userId}\", false);\n          body = JSON.stringify(__assign(__assign(__assign(__assign({}, input.activeContexts != null && {\n            activeContexts: serializeAws_restJson1ActiveContextsList(input.activeContexts, context)\n          }), input.inputText != null && {\n            inputText: input.inputText\n          }), input.requestAttributes != null && {\n            requestAttributes: serializeAws_restJson1StringMap(input.requestAttributes, context)\n          }), input.sessionAttributes != null && {\n            sessionAttributes: serializeAws_restJson1StringMap(input.sessionAttributes, context)\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PutSessionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = map({}, isSerializableHeaderValue, {\n            \"content-type\": \"application/json\",\n            accept: input.accept\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/bot/{botName}/alias/{botAlias}/user/{userId}/session\";\n          resolvedPath = __resolvedPath(resolvedPath, input, \"botName\", function () {\n            return input.botName;\n          }, \"{botName}\", false);\n          resolvedPath = __resolvedPath(resolvedPath, input, \"botAlias\", function () {\n            return input.botAlias;\n          }, \"{botAlias}\", false);\n          resolvedPath = __resolvedPath(resolvedPath, input, \"userId\", function () {\n            return input.userId;\n          }, \"{userId}\", false);\n          body = JSON.stringify(__assign(__assign(__assign(__assign({}, input.activeContexts != null && {\n            activeContexts: serializeAws_restJson1ActiveContextsList(input.activeContexts, context)\n          }), input.dialogAction != null && {\n            dialogAction: serializeAws_restJson1DialogAction(input.dialogAction, context)\n          }), input.recentIntentSummaryView != null && {\n            recentIntentSummaryView: serializeAws_restJson1IntentSummaryList(input.recentIntentSummaryView, context)\n          }), input.sessionAttributes != null && {\n            sessionAttributes: serializeAws_restJson1StringMap(input.sessionAttributes, context)\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1DeleteSessionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1DeleteSessionCommandError(output, context)];\n          }\n\n          contents = map({\n            $metadata: deserializeMetadata(output)\n          });\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.botAlias != null) {\n            contents.botAlias = __expectString(data.botAlias);\n          }\n\n          if (data.botName != null) {\n            contents.botName = __expectString(data.botName);\n          }\n\n          if (data.sessionId != null) {\n            contents.sessionId = __expectString(data.sessionId);\n          }\n\n          if (data.userId != null) {\n            contents.userId = __expectString(data.userId);\n          }\n\n          return [2, contents];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteSessionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, errorCode, _b, parsedBody;\n\n    var _c;\n\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _c = {};\n          return [4, parseErrorBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.lexruntimeservice#BadRequestException\":\n              return [3, 2];\n\n            case \"ConflictException\":\n              return [3, 4];\n\n            case \"com.amazonaws.lexruntimeservice#ConflictException\":\n              return [3, 4];\n\n            case \"InternalFailureException\":\n              return [3, 6];\n\n            case \"com.amazonaws.lexruntimeservice#InternalFailureException\":\n              return [3, 6];\n\n            case \"LimitExceededException\":\n              return [3, 8];\n\n            case \"com.amazonaws.lexruntimeservice#LimitExceededException\":\n              return [3, 8];\n\n            case \"NotFoundException\":\n              return [3, 10];\n\n            case \"com.amazonaws.lexruntimeservice#NotFoundException\":\n              return [3, 10];\n          }\n\n          return [3, 12];\n\n        case 2:\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          throw _d.sent();\n\n        case 4:\n          return [4, deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          throw _d.sent();\n\n        case 6:\n          return [4, deserializeAws_restJson1InternalFailureExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          throw _d.sent();\n\n        case 8:\n          return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          throw _d.sent();\n\n        case 10:\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          throw _d.sent();\n\n        case 12:\n          parsedBody = parsedOutput.body;\n          throwDefaultError({\n            output: output,\n            parsedBody: parsedBody,\n            exceptionCtor: __BaseException,\n            errorCode: errorCode\n          });\n          _d.label = 13;\n\n        case 13:\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetSessionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1GetSessionCommandError(output, context)];\n          }\n\n          contents = map({\n            $metadata: deserializeMetadata(output)\n          });\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.activeContexts != null) {\n            contents.activeContexts = deserializeAws_restJson1ActiveContextsList(data.activeContexts, context);\n          }\n\n          if (data.dialogAction != null) {\n            contents.dialogAction = deserializeAws_restJson1DialogAction(data.dialogAction, context);\n          }\n\n          if (data.recentIntentSummaryView != null) {\n            contents.recentIntentSummaryView = deserializeAws_restJson1IntentSummaryList(data.recentIntentSummaryView, context);\n          }\n\n          if (data.sessionAttributes != null) {\n            contents.sessionAttributes = deserializeAws_restJson1StringMap(data.sessionAttributes, context);\n          }\n\n          if (data.sessionId != null) {\n            contents.sessionId = __expectString(data.sessionId);\n          }\n\n          return [2, contents];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetSessionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, errorCode, _b, parsedBody;\n\n    var _c;\n\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _c = {};\n          return [4, parseErrorBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.lexruntimeservice#BadRequestException\":\n              return [3, 2];\n\n            case \"InternalFailureException\":\n              return [3, 4];\n\n            case \"com.amazonaws.lexruntimeservice#InternalFailureException\":\n              return [3, 4];\n\n            case \"LimitExceededException\":\n              return [3, 6];\n\n            case \"com.amazonaws.lexruntimeservice#LimitExceededException\":\n              return [3, 6];\n\n            case \"NotFoundException\":\n              return [3, 8];\n\n            case \"com.amazonaws.lexruntimeservice#NotFoundException\":\n              return [3, 8];\n          }\n\n          return [3, 10];\n\n        case 2:\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          throw _d.sent();\n\n        case 4:\n          return [4, deserializeAws_restJson1InternalFailureExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          throw _d.sent();\n\n        case 6:\n          return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          throw _d.sent();\n\n        case 8:\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          throw _d.sent();\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          throwDefaultError({\n            output: output,\n            parsedBody: parsedBody,\n            exceptionCtor: __BaseException,\n            errorCode: errorCode\n          });\n          _d.label = 11;\n\n        case 11:\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PostContentCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return [2, deserializeAws_restJson1PostContentCommandError(output, context)];\n      }\n\n      contents = map({\n        $metadata: deserializeMetadata(output),\n        contentType: [, output.headers[\"content-type\"]],\n        intentName: [, output.headers[\"x-amz-lex-intent-name\"]],\n        nluIntentConfidence: [function () {\n          return void 0 !== output.headers[\"x-amz-lex-nlu-intent-confidence\"];\n        }, function () {\n          return new __LazyJsonString(Buffer.from(context.base64Decoder(output.headers[\"x-amz-lex-nlu-intent-confidence\"])).toString(\"utf8\"));\n        }],\n        alternativeIntents: [function () {\n          return void 0 !== output.headers[\"x-amz-lex-alternative-intents\"];\n        }, function () {\n          return new __LazyJsonString(Buffer.from(context.base64Decoder(output.headers[\"x-amz-lex-alternative-intents\"])).toString(\"utf8\"));\n        }],\n        slots: [function () {\n          return void 0 !== output.headers[\"x-amz-lex-slots\"];\n        }, function () {\n          return new __LazyJsonString(Buffer.from(context.base64Decoder(output.headers[\"x-amz-lex-slots\"])).toString(\"utf8\"));\n        }],\n        sessionAttributes: [function () {\n          return void 0 !== output.headers[\"x-amz-lex-session-attributes\"];\n        }, function () {\n          return new __LazyJsonString(Buffer.from(context.base64Decoder(output.headers[\"x-amz-lex-session-attributes\"])).toString(\"utf8\"));\n        }],\n        sentimentResponse: [, output.headers[\"x-amz-lex-sentiment\"]],\n        message: [, output.headers[\"x-amz-lex-message\"]],\n        encodedMessage: [, output.headers[\"x-amz-lex-encoded-message\"]],\n        messageFormat: [, output.headers[\"x-amz-lex-message-format\"]],\n        dialogState: [, output.headers[\"x-amz-lex-dialog-state\"]],\n        slotToElicit: [, output.headers[\"x-amz-lex-slot-to-elicit\"]],\n        inputTranscript: [, output.headers[\"x-amz-lex-input-transcript\"]],\n        encodedInputTranscript: [, output.headers[\"x-amz-lex-encoded-input-transcript\"]],\n        botVersion: [, output.headers[\"x-amz-lex-bot-version\"]],\n        sessionId: [, output.headers[\"x-amz-lex-session-id\"]],\n        activeContexts: [function () {\n          return void 0 !== output.headers[\"x-amz-lex-active-contexts\"];\n        }, function () {\n          return new __LazyJsonString(Buffer.from(context.base64Decoder(output.headers[\"x-amz-lex-active-contexts\"])).toString(\"utf8\"));\n        }]\n      });\n      data = output.body;\n      contents.audioStream = data;\n      return [2, contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1PostContentCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, errorCode, _b, parsedBody;\n\n    var _c;\n\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _c = {};\n          return [4, parseErrorBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadGatewayException\":\n              return [3, 2];\n\n            case \"com.amazonaws.lexruntimeservice#BadGatewayException\":\n              return [3, 2];\n\n            case \"BadRequestException\":\n              return [3, 4];\n\n            case \"com.amazonaws.lexruntimeservice#BadRequestException\":\n              return [3, 4];\n\n            case \"ConflictException\":\n              return [3, 6];\n\n            case \"com.amazonaws.lexruntimeservice#ConflictException\":\n              return [3, 6];\n\n            case \"DependencyFailedException\":\n              return [3, 8];\n\n            case \"com.amazonaws.lexruntimeservice#DependencyFailedException\":\n              return [3, 8];\n\n            case \"InternalFailureException\":\n              return [3, 10];\n\n            case \"com.amazonaws.lexruntimeservice#InternalFailureException\":\n              return [3, 10];\n\n            case \"LimitExceededException\":\n              return [3, 12];\n\n            case \"com.amazonaws.lexruntimeservice#LimitExceededException\":\n              return [3, 12];\n\n            case \"LoopDetectedException\":\n              return [3, 14];\n\n            case \"com.amazonaws.lexruntimeservice#LoopDetectedException\":\n              return [3, 14];\n\n            case \"NotAcceptableException\":\n              return [3, 16];\n\n            case \"com.amazonaws.lexruntimeservice#NotAcceptableException\":\n              return [3, 16];\n\n            case \"NotFoundException\":\n              return [3, 18];\n\n            case \"com.amazonaws.lexruntimeservice#NotFoundException\":\n              return [3, 18];\n\n            case \"RequestTimeoutException\":\n              return [3, 20];\n\n            case \"com.amazonaws.lexruntimeservice#RequestTimeoutException\":\n              return [3, 20];\n\n            case \"UnsupportedMediaTypeException\":\n              return [3, 22];\n\n            case \"com.amazonaws.lexruntimeservice#UnsupportedMediaTypeException\":\n              return [3, 22];\n          }\n\n          return [3, 24];\n\n        case 2:\n          return [4, deserializeAws_restJson1BadGatewayExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          throw _d.sent();\n\n        case 4:\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          throw _d.sent();\n\n        case 6:\n          return [4, deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          throw _d.sent();\n\n        case 8:\n          return [4, deserializeAws_restJson1DependencyFailedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          throw _d.sent();\n\n        case 10:\n          return [4, deserializeAws_restJson1InternalFailureExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          throw _d.sent();\n\n        case 12:\n          return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          throw _d.sent();\n\n        case 14:\n          return [4, deserializeAws_restJson1LoopDetectedExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          throw _d.sent();\n\n        case 16:\n          return [4, deserializeAws_restJson1NotAcceptableExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          throw _d.sent();\n\n        case 18:\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 19:\n          throw _d.sent();\n\n        case 20:\n          return [4, deserializeAws_restJson1RequestTimeoutExceptionResponse(parsedOutput, context)];\n\n        case 21:\n          throw _d.sent();\n\n        case 22:\n          return [4, deserializeAws_restJson1UnsupportedMediaTypeExceptionResponse(parsedOutput, context)];\n\n        case 23:\n          throw _d.sent();\n\n        case 24:\n          parsedBody = parsedOutput.body;\n          throwDefaultError({\n            output: output,\n            parsedBody: parsedBody,\n            exceptionCtor: __BaseException,\n            errorCode: errorCode\n          });\n          _d.label = 25;\n\n        case 25:\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PostTextCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1PostTextCommandError(output, context)];\n          }\n\n          contents = map({\n            $metadata: deserializeMetadata(output)\n          });\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.activeContexts != null) {\n            contents.activeContexts = deserializeAws_restJson1ActiveContextsList(data.activeContexts, context);\n          }\n\n          if (data.alternativeIntents != null) {\n            contents.alternativeIntents = deserializeAws_restJson1IntentList(data.alternativeIntents, context);\n          }\n\n          if (data.botVersion != null) {\n            contents.botVersion = __expectString(data.botVersion);\n          }\n\n          if (data.dialogState != null) {\n            contents.dialogState = __expectString(data.dialogState);\n          }\n\n          if (data.intentName != null) {\n            contents.intentName = __expectString(data.intentName);\n          }\n\n          if (data.message != null) {\n            contents.message = __expectString(data.message);\n          }\n\n          if (data.messageFormat != null) {\n            contents.messageFormat = __expectString(data.messageFormat);\n          }\n\n          if (data.nluIntentConfidence != null) {\n            contents.nluIntentConfidence = deserializeAws_restJson1IntentConfidence(data.nluIntentConfidence, context);\n          }\n\n          if (data.responseCard != null) {\n            contents.responseCard = deserializeAws_restJson1ResponseCard(data.responseCard, context);\n          }\n\n          if (data.sentimentResponse != null) {\n            contents.sentimentResponse = deserializeAws_restJson1SentimentResponse(data.sentimentResponse, context);\n          }\n\n          if (data.sessionAttributes != null) {\n            contents.sessionAttributes = deserializeAws_restJson1StringMap(data.sessionAttributes, context);\n          }\n\n          if (data.sessionId != null) {\n            contents.sessionId = __expectString(data.sessionId);\n          }\n\n          if (data.slotToElicit != null) {\n            contents.slotToElicit = __expectString(data.slotToElicit);\n          }\n\n          if (data.slots != null) {\n            contents.slots = deserializeAws_restJson1StringMap(data.slots, context);\n          }\n\n          return [2, contents];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1PostTextCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, errorCode, _b, parsedBody;\n\n    var _c;\n\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _c = {};\n          return [4, parseErrorBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadGatewayException\":\n              return [3, 2];\n\n            case \"com.amazonaws.lexruntimeservice#BadGatewayException\":\n              return [3, 2];\n\n            case \"BadRequestException\":\n              return [3, 4];\n\n            case \"com.amazonaws.lexruntimeservice#BadRequestException\":\n              return [3, 4];\n\n            case \"ConflictException\":\n              return [3, 6];\n\n            case \"com.amazonaws.lexruntimeservice#ConflictException\":\n              return [3, 6];\n\n            case \"DependencyFailedException\":\n              return [3, 8];\n\n            case \"com.amazonaws.lexruntimeservice#DependencyFailedException\":\n              return [3, 8];\n\n            case \"InternalFailureException\":\n              return [3, 10];\n\n            case \"com.amazonaws.lexruntimeservice#InternalFailureException\":\n              return [3, 10];\n\n            case \"LimitExceededException\":\n              return [3, 12];\n\n            case \"com.amazonaws.lexruntimeservice#LimitExceededException\":\n              return [3, 12];\n\n            case \"LoopDetectedException\":\n              return [3, 14];\n\n            case \"com.amazonaws.lexruntimeservice#LoopDetectedException\":\n              return [3, 14];\n\n            case \"NotFoundException\":\n              return [3, 16];\n\n            case \"com.amazonaws.lexruntimeservice#NotFoundException\":\n              return [3, 16];\n          }\n\n          return [3, 18];\n\n        case 2:\n          return [4, deserializeAws_restJson1BadGatewayExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          throw _d.sent();\n\n        case 4:\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          throw _d.sent();\n\n        case 6:\n          return [4, deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          throw _d.sent();\n\n        case 8:\n          return [4, deserializeAws_restJson1DependencyFailedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          throw _d.sent();\n\n        case 10:\n          return [4, deserializeAws_restJson1InternalFailureExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          throw _d.sent();\n\n        case 12:\n          return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          throw _d.sent();\n\n        case 14:\n          return [4, deserializeAws_restJson1LoopDetectedExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          throw _d.sent();\n\n        case 16:\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          throw _d.sent();\n\n        case 18:\n          parsedBody = parsedOutput.body;\n          throwDefaultError({\n            output: output,\n            parsedBody: parsedBody,\n            exceptionCtor: __BaseException,\n            errorCode: errorCode\n          });\n          _d.label = 19;\n\n        case 19:\n          return [2];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PutSessionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return [2, deserializeAws_restJson1PutSessionCommandError(output, context)];\n      }\n\n      contents = map({\n        $metadata: deserializeMetadata(output),\n        contentType: [, output.headers[\"content-type\"]],\n        intentName: [, output.headers[\"x-amz-lex-intent-name\"]],\n        slots: [function () {\n          return void 0 !== output.headers[\"x-amz-lex-slots\"];\n        }, function () {\n          return new __LazyJsonString(Buffer.from(context.base64Decoder(output.headers[\"x-amz-lex-slots\"])).toString(\"utf8\"));\n        }],\n        sessionAttributes: [function () {\n          return void 0 !== output.headers[\"x-amz-lex-session-attributes\"];\n        }, function () {\n          return new __LazyJsonString(Buffer.from(context.base64Decoder(output.headers[\"x-amz-lex-session-attributes\"])).toString(\"utf8\"));\n        }],\n        message: [, output.headers[\"x-amz-lex-message\"]],\n        encodedMessage: [, output.headers[\"x-amz-lex-encoded-message\"]],\n        messageFormat: [, output.headers[\"x-amz-lex-message-format\"]],\n        dialogState: [, output.headers[\"x-amz-lex-dialog-state\"]],\n        slotToElicit: [, output.headers[\"x-amz-lex-slot-to-elicit\"]],\n        sessionId: [, output.headers[\"x-amz-lex-session-id\"]],\n        activeContexts: [function () {\n          return void 0 !== output.headers[\"x-amz-lex-active-contexts\"];\n        }, function () {\n          return new __LazyJsonString(Buffer.from(context.base64Decoder(output.headers[\"x-amz-lex-active-contexts\"])).toString(\"utf8\"));\n        }]\n      });\n      data = output.body;\n      contents.audioStream = data;\n      return [2, contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1PutSessionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, errorCode, _b, parsedBody;\n\n    var _c;\n\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _c = {};\n          return [4, parseErrorBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadGatewayException\":\n              return [3, 2];\n\n            case \"com.amazonaws.lexruntimeservice#BadGatewayException\":\n              return [3, 2];\n\n            case \"BadRequestException\":\n              return [3, 4];\n\n            case \"com.amazonaws.lexruntimeservice#BadRequestException\":\n              return [3, 4];\n\n            case \"ConflictException\":\n              return [3, 6];\n\n            case \"com.amazonaws.lexruntimeservice#ConflictException\":\n              return [3, 6];\n\n            case \"DependencyFailedException\":\n              return [3, 8];\n\n            case \"com.amazonaws.lexruntimeservice#DependencyFailedException\":\n              return [3, 8];\n\n            case \"InternalFailureException\":\n              return [3, 10];\n\n            case \"com.amazonaws.lexruntimeservice#InternalFailureException\":\n              return [3, 10];\n\n            case \"LimitExceededException\":\n              return [3, 12];\n\n            case \"com.amazonaws.lexruntimeservice#LimitExceededException\":\n              return [3, 12];\n\n            case \"NotAcceptableException\":\n              return [3, 14];\n\n            case \"com.amazonaws.lexruntimeservice#NotAcceptableException\":\n              return [3, 14];\n\n            case \"NotFoundException\":\n              return [3, 16];\n\n            case \"com.amazonaws.lexruntimeservice#NotFoundException\":\n              return [3, 16];\n          }\n\n          return [3, 18];\n\n        case 2:\n          return [4, deserializeAws_restJson1BadGatewayExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          throw _d.sent();\n\n        case 4:\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          throw _d.sent();\n\n        case 6:\n          return [4, deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          throw _d.sent();\n\n        case 8:\n          return [4, deserializeAws_restJson1DependencyFailedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          throw _d.sent();\n\n        case 10:\n          return [4, deserializeAws_restJson1InternalFailureExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          throw _d.sent();\n\n        case 12:\n          return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          throw _d.sent();\n\n        case 14:\n          return [4, deserializeAws_restJson1NotAcceptableExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          throw _d.sent();\n\n        case 16:\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          throw _d.sent();\n\n        case 18:\n          parsedBody = parsedOutput.body;\n          throwDefaultError({\n            output: output,\n            parsedBody: parsedBody,\n            exceptionCtor: __BaseException,\n            errorCode: errorCode\n          });\n          _d.label = 19;\n\n        case 19:\n          return [2];\n      }\n    });\n  });\n};\n\nvar map = __map;\n\nvar deserializeAws_restJson1BadGatewayExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n      contents = map({});\n      data = parsedOutput.body;\n\n      if (data.Message != null) {\n        contents.Message = __expectString(data.Message);\n      }\n\n      exception = new BadGatewayException(__assign({\n        $metadata: deserializeMetadata(parsedOutput)\n      }, contents));\n      return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n  });\n};\n\nvar deserializeAws_restJson1BadRequestExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n      contents = map({});\n      data = parsedOutput.body;\n\n      if (data.message != null) {\n        contents.message = __expectString(data.message);\n      }\n\n      exception = new BadRequestException(__assign({\n        $metadata: deserializeMetadata(parsedOutput)\n      }, contents));\n      return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n  });\n};\n\nvar deserializeAws_restJson1ConflictExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n      contents = map({});\n      data = parsedOutput.body;\n\n      if (data.message != null) {\n        contents.message = __expectString(data.message);\n      }\n\n      exception = new ConflictException(__assign({\n        $metadata: deserializeMetadata(parsedOutput)\n      }, contents));\n      return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n  });\n};\n\nvar deserializeAws_restJson1DependencyFailedExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n      contents = map({});\n      data = parsedOutput.body;\n\n      if (data.Message != null) {\n        contents.Message = __expectString(data.Message);\n      }\n\n      exception = new DependencyFailedException(__assign({\n        $metadata: deserializeMetadata(parsedOutput)\n      }, contents));\n      return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n  });\n};\n\nvar deserializeAws_restJson1InternalFailureExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n      contents = map({});\n      data = parsedOutput.body;\n\n      if (data.message != null) {\n        contents.message = __expectString(data.message);\n      }\n\n      exception = new InternalFailureException(__assign({\n        $metadata: deserializeMetadata(parsedOutput)\n      }, contents));\n      return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n  });\n};\n\nvar deserializeAws_restJson1LimitExceededExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n      contents = map({\n        retryAfterSeconds: [, parsedOutput.headers[\"retry-after\"]]\n      });\n      data = parsedOutput.body;\n\n      if (data.message != null) {\n        contents.message = __expectString(data.message);\n      }\n\n      exception = new LimitExceededException(__assign({\n        $metadata: deserializeMetadata(parsedOutput)\n      }, contents));\n      return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n  });\n};\n\nvar deserializeAws_restJson1LoopDetectedExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n      contents = map({});\n      data = parsedOutput.body;\n\n      if (data.Message != null) {\n        contents.Message = __expectString(data.Message);\n      }\n\n      exception = new LoopDetectedException(__assign({\n        $metadata: deserializeMetadata(parsedOutput)\n      }, contents));\n      return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n  });\n};\n\nvar deserializeAws_restJson1NotAcceptableExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n      contents = map({});\n      data = parsedOutput.body;\n\n      if (data.message != null) {\n        contents.message = __expectString(data.message);\n      }\n\n      exception = new NotAcceptableException(__assign({\n        $metadata: deserializeMetadata(parsedOutput)\n      }, contents));\n      return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n  });\n};\n\nvar deserializeAws_restJson1NotFoundExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n      contents = map({});\n      data = parsedOutput.body;\n\n      if (data.message != null) {\n        contents.message = __expectString(data.message);\n      }\n\n      exception = new NotFoundException(__assign({\n        $metadata: deserializeMetadata(parsedOutput)\n      }, contents));\n      return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n  });\n};\n\nvar deserializeAws_restJson1RequestTimeoutExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n      contents = map({});\n      data = parsedOutput.body;\n\n      if (data.message != null) {\n        contents.message = __expectString(data.message);\n      }\n\n      exception = new RequestTimeoutException(__assign({\n        $metadata: deserializeMetadata(parsedOutput)\n      }, contents));\n      return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n  });\n};\n\nvar deserializeAws_restJson1UnsupportedMediaTypeExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n      contents = map({});\n      data = parsedOutput.body;\n\n      if (data.message != null) {\n        contents.message = __expectString(data.message);\n      }\n\n      exception = new UnsupportedMediaTypeException(__assign({\n        $metadata: deserializeMetadata(parsedOutput)\n      }, contents));\n      return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n  });\n};\n\nvar serializeAws_restJson1ActiveContext = function (input, context) {\n  return __assign(__assign(__assign({}, input.name != null && {\n    name: input.name\n  }), input.parameters != null && {\n    parameters: serializeAws_restJson1ActiveContextParametersMap(input.parameters, context)\n  }), input.timeToLive != null && {\n    timeToLive: serializeAws_restJson1ActiveContextTimeToLive(input.timeToLive, context)\n  });\n};\n\nvar serializeAws_restJson1ActiveContextParametersMap = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\n\nvar serializeAws_restJson1ActiveContextsList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    return serializeAws_restJson1ActiveContext(entry, context);\n  });\n};\n\nvar serializeAws_restJson1ActiveContextTimeToLive = function (input, context) {\n  return __assign(__assign({}, input.timeToLiveInSeconds != null && {\n    timeToLiveInSeconds: input.timeToLiveInSeconds\n  }), input.turnsToLive != null && {\n    turnsToLive: input.turnsToLive\n  });\n};\n\nvar serializeAws_restJson1DialogAction = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.fulfillmentState != null && {\n    fulfillmentState: input.fulfillmentState\n  }), input.intentName != null && {\n    intentName: input.intentName\n  }), input.message != null && {\n    message: input.message\n  }), input.messageFormat != null && {\n    messageFormat: input.messageFormat\n  }), input.slotToElicit != null && {\n    slotToElicit: input.slotToElicit\n  }), input.slots != null && {\n    slots: serializeAws_restJson1StringMap(input.slots, context)\n  }), input.type != null && {\n    type: input.type\n  });\n};\n\nvar serializeAws_restJson1IntentSummary = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.checkpointLabel != null && {\n    checkpointLabel: input.checkpointLabel\n  }), input.confirmationStatus != null && {\n    confirmationStatus: input.confirmationStatus\n  }), input.dialogActionType != null && {\n    dialogActionType: input.dialogActionType\n  }), input.fulfillmentState != null && {\n    fulfillmentState: input.fulfillmentState\n  }), input.intentName != null && {\n    intentName: input.intentName\n  }), input.slotToElicit != null && {\n    slotToElicit: input.slotToElicit\n  }), input.slots != null && {\n    slots: serializeAws_restJson1StringMap(input.slots, context)\n  });\n};\n\nvar serializeAws_restJson1IntentSummaryList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    return serializeAws_restJson1IntentSummary(entry, context);\n  });\n};\n\nvar serializeAws_restJson1StringMap = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1ActiveContext = function (output, context) {\n  return {\n    name: __expectString(output.name),\n    parameters: output.parameters != null ? deserializeAws_restJson1ActiveContextParametersMap(output.parameters, context) : undefined,\n    timeToLive: output.timeToLive != null ? deserializeAws_restJson1ActiveContextTimeToLive(output.timeToLive, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1ActiveContextParametersMap = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = __expectString(value), _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1ActiveContextsList = function (output, context) {\n  var retVal = (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1ActiveContext(entry, context);\n  });\n  return retVal;\n};\n\nvar deserializeAws_restJson1ActiveContextTimeToLive = function (output, context) {\n  return {\n    timeToLiveInSeconds: __expectInt32(output.timeToLiveInSeconds),\n    turnsToLive: __expectInt32(output.turnsToLive)\n  };\n};\n\nvar deserializeAws_restJson1Button = function (output, context) {\n  return {\n    text: __expectString(output.text),\n    value: __expectString(output.value)\n  };\n};\n\nvar deserializeAws_restJson1DialogAction = function (output, context) {\n  return {\n    fulfillmentState: __expectString(output.fulfillmentState),\n    intentName: __expectString(output.intentName),\n    message: __expectString(output.message),\n    messageFormat: __expectString(output.messageFormat),\n    slotToElicit: __expectString(output.slotToElicit),\n    slots: output.slots != null ? deserializeAws_restJson1StringMap(output.slots, context) : undefined,\n    type: __expectString(output.type)\n  };\n};\n\nvar deserializeAws_restJson1GenericAttachment = function (output, context) {\n  return {\n    attachmentLinkUrl: __expectString(output.attachmentLinkUrl),\n    buttons: output.buttons != null ? deserializeAws_restJson1listOfButtons(output.buttons, context) : undefined,\n    imageUrl: __expectString(output.imageUrl),\n    subTitle: __expectString(output.subTitle),\n    title: __expectString(output.title)\n  };\n};\n\nvar deserializeAws_restJson1genericAttachmentList = function (output, context) {\n  var retVal = (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1GenericAttachment(entry, context);\n  });\n  return retVal;\n};\n\nvar deserializeAws_restJson1IntentConfidence = function (output, context) {\n  return {\n    score: __limitedParseDouble(output.score)\n  };\n};\n\nvar deserializeAws_restJson1IntentList = function (output, context) {\n  var retVal = (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1PredictedIntent(entry, context);\n  });\n  return retVal;\n};\n\nvar deserializeAws_restJson1IntentSummary = function (output, context) {\n  return {\n    checkpointLabel: __expectString(output.checkpointLabel),\n    confirmationStatus: __expectString(output.confirmationStatus),\n    dialogActionType: __expectString(output.dialogActionType),\n    fulfillmentState: __expectString(output.fulfillmentState),\n    intentName: __expectString(output.intentName),\n    slotToElicit: __expectString(output.slotToElicit),\n    slots: output.slots != null ? deserializeAws_restJson1StringMap(output.slots, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1IntentSummaryList = function (output, context) {\n  var retVal = (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1IntentSummary(entry, context);\n  });\n  return retVal;\n};\n\nvar deserializeAws_restJson1listOfButtons = function (output, context) {\n  var retVal = (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1Button(entry, context);\n  });\n  return retVal;\n};\n\nvar deserializeAws_restJson1PredictedIntent = function (output, context) {\n  return {\n    intentName: __expectString(output.intentName),\n    nluIntentConfidence: output.nluIntentConfidence != null ? deserializeAws_restJson1IntentConfidence(output.nluIntentConfidence, context) : undefined,\n    slots: output.slots != null ? deserializeAws_restJson1StringMap(output.slots, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1ResponseCard = function (output, context) {\n  return {\n    contentType: __expectString(output.contentType),\n    genericAttachments: output.genericAttachments != null ? deserializeAws_restJson1genericAttachmentList(output.genericAttachments, context) : undefined,\n    version: __expectString(output.version)\n  };\n};\n\nvar deserializeAws_restJson1SentimentResponse = function (output, context) {\n  return {\n    sentimentLabel: __expectString(output.sentimentLabel),\n    sentimentScore: __expectString(output.sentimentScore)\n  };\n};\n\nvar deserializeAws_restJson1StringMap = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = __expectString(value), _b));\n  }, {});\n};\n\nvar deserializeMetadata = function (output) {\n  var _a, _b;\n\n  return {\n    httpStatusCode: output.statusCode,\n    requestId: (_b = (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"]) !== null && _b !== void 0 ? _b : output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"]\n  };\n};\n\nvar collectBody = function (streamBody, context) {\n  if (streamBody === void 0) {\n    streamBody = new Uint8Array();\n  }\n\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n\nvar collectBodyString = function (streamBody, context) {\n  return collectBody(streamBody, context).then(function (body) {\n    return context.utf8Encoder(body);\n  });\n};\n\nvar isSerializableHeaderValue = function (value) {\n  return value !== undefined && value !== null && value !== \"\" && (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) && (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\n};\n\nvar parseBody = function (streamBody, context) {\n  return collectBodyString(streamBody, context).then(function (encoded) {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n\n    return {};\n  });\n};\n\nvar parseErrorBody = function (errorBody, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var value;\n\n    var _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          return [4, parseBody(errorBody, context)];\n\n        case 1:\n          value = _b.sent();\n          value.message = (_a = value.message) !== null && _a !== void 0 ? _a : value.Message;\n          return [2, value];\n      }\n    });\n  });\n};\n\nvar loadRestJsonErrorCode = function (output, data) {\n  var findKey = function (object, key) {\n    return Object.keys(object).find(function (k) {\n      return k.toLowerCase() === key.toLowerCase();\n    });\n  };\n\n  var sanitizeErrorCode = function (rawValue) {\n    var cleanValue = rawValue;\n\n    if (typeof cleanValue === \"number\") {\n      cleanValue = cleanValue.toString();\n    }\n\n    if (cleanValue.indexOf(\",\") >= 0) {\n      cleanValue = cleanValue.split(\",\")[0];\n    }\n\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n\n    return cleanValue;\n  };\n\n  var headerKey = findKey(output.headers, \"x-amzn-errortype\");\n\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n};","map":{"version":3,"sources":["/Users/sanjayar/Desktop/moody-main copy 2/node_modules/@aws-sdk/client-lex-runtime-service/dist-es/protocols/Aws_restJson1.js"],"names":["__assign","__awaiter","__generator","__read","HttpRequest","__HttpRequest","decorateServiceException","__decorateServiceException","expectInt32","__expectInt32","expectNonNull","__expectNonNull","expectObject","__expectObject","expectString","__expectString","LazyJsonString","__LazyJsonString","limitedParseDouble","__limitedParseDouble","map","__map","resolvedPath","__resolvedPath","throwDefaultError","LexRuntimeServiceServiceException","__BaseException","BadGatewayException","BadRequestException","ConflictException","DependencyFailedException","InternalFailureException","LimitExceededException","LoopDetectedException","NotAcceptableException","NotFoundException","RequestTimeoutException","UnsupportedMediaTypeException","serializeAws_restJson1DeleteSessionCommand","input","context","_a","hostname","_b","protocol","port","basePath","headers","body","_c","label","endpoint","sent","path","concat","endsWith","slice","botName","botAlias","userId","method","serializeAws_restJson1GetSessionCommand","query","checkpointLabelFilter","serializeAws_restJson1PostContentCommand","isSerializableHeaderValue","contentType","sessionAttributes","base64Encoder","Buffer","from","fromObject","requestAttributes","accept","activeContexts","inputStream","undefined","serializeAws_restJson1PostTextCommand","JSON","stringify","serializeAws_restJson1ActiveContextsList","inputText","serializeAws_restJson1StringMap","serializeAws_restJson1PutSessionCommand","dialogAction","serializeAws_restJson1DialogAction","recentIntentSummaryView","serializeAws_restJson1IntentSummaryList","deserializeAws_restJson1DeleteSessionCommand","output","contents","data","statusCode","deserializeAws_restJson1DeleteSessionCommandError","$metadata","deserializeMetadata","parseBody","apply","sessionId","parsedOutput","errorCode","parsedBody","_d","parseErrorBody","loadRestJsonErrorCode","deserializeAws_restJson1BadRequestExceptionResponse","deserializeAws_restJson1ConflictExceptionResponse","deserializeAws_restJson1InternalFailureExceptionResponse","deserializeAws_restJson1LimitExceededExceptionResponse","deserializeAws_restJson1NotFoundExceptionResponse","exceptionCtor","deserializeAws_restJson1GetSessionCommand","deserializeAws_restJson1GetSessionCommandError","deserializeAws_restJson1ActiveContextsList","deserializeAws_restJson1DialogAction","deserializeAws_restJson1IntentSummaryList","deserializeAws_restJson1StringMap","deserializeAws_restJson1PostContentCommand","deserializeAws_restJson1PostContentCommandError","intentName","nluIntentConfidence","base64Decoder","toString","alternativeIntents","slots","sentimentResponse","message","encodedMessage","messageFormat","dialogState","slotToElicit","inputTranscript","encodedInputTranscript","botVersion","audioStream","deserializeAws_restJson1BadGatewayExceptionResponse","deserializeAws_restJson1DependencyFailedExceptionResponse","deserializeAws_restJson1LoopDetectedExceptionResponse","deserializeAws_restJson1NotAcceptableExceptionResponse","deserializeAws_restJson1RequestTimeoutExceptionResponse","deserializeAws_restJson1UnsupportedMediaTypeExceptionResponse","deserializeAws_restJson1PostTextCommand","deserializeAws_restJson1PostTextCommandError","deserializeAws_restJson1IntentList","deserializeAws_restJson1IntentConfidence","responseCard","deserializeAws_restJson1ResponseCard","deserializeAws_restJson1SentimentResponse","deserializeAws_restJson1PutSessionCommand","deserializeAws_restJson1PutSessionCommandError","exception","Message","retryAfterSeconds","serializeAws_restJson1ActiveContext","name","parameters","serializeAws_restJson1ActiveContextParametersMap","timeToLive","serializeAws_restJson1ActiveContextTimeToLive","Object","entries","reduce","acc","key","value","filter","e","entry","timeToLiveInSeconds","turnsToLive","fulfillmentState","type","serializeAws_restJson1IntentSummary","checkpointLabel","confirmationStatus","dialogActionType","deserializeAws_restJson1ActiveContext","deserializeAws_restJson1ActiveContextParametersMap","deserializeAws_restJson1ActiveContextTimeToLive","retVal","deserializeAws_restJson1Button","text","deserializeAws_restJson1GenericAttachment","attachmentLinkUrl","buttons","deserializeAws_restJson1listOfButtons","imageUrl","subTitle","title","deserializeAws_restJson1genericAttachmentList","score","deserializeAws_restJson1PredictedIntent","deserializeAws_restJson1IntentSummary","genericAttachments","version","sentimentLabel","sentimentScore","httpStatusCode","requestId","extendedRequestId","cfId","collectBody","streamBody","Uint8Array","Promise","resolve","streamCollector","collectBodyString","then","utf8Encoder","getOwnPropertyNames","includes","length","size","encoded","parse","errorBody","findKey","object","keys","find","k","toLowerCase","sanitizeErrorCode","rawValue","cleanValue","indexOf","split","headerKey","code"],"mappings":"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","sourcesContent":["import { __assign, __awaiter, __generator, __read } from \"tslib\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { decorateServiceException as __decorateServiceException, expectInt32 as __expectInt32, expectNonNull as __expectNonNull, expectObject as __expectObject, expectString as __expectString, LazyJsonString as __LazyJsonString, limitedParseDouble as __limitedParseDouble, map as __map, resolvedPath as __resolvedPath, throwDefaultError, } from \"@aws-sdk/smithy-client\";\nimport { LexRuntimeServiceServiceException as __BaseException } from \"../models/LexRuntimeServiceServiceException\";\nimport { BadGatewayException, BadRequestException, ConflictException, DependencyFailedException, InternalFailureException, LimitExceededException, LoopDetectedException, NotAcceptableException, NotFoundException, RequestTimeoutException, UnsupportedMediaTypeException, } from \"../models/models_0\";\nexport var serializeAws_restJson1DeleteSessionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/bot/{botName}/alias/{botAlias}/user/{userId}/session\";\n                resolvedPath = __resolvedPath(resolvedPath, input, \"botName\", function () { return input.botName; }, \"{botName}\", false);\n                resolvedPath = __resolvedPath(resolvedPath, input, \"botAlias\", function () { return input.botAlias; }, \"{botAlias}\", false);\n                resolvedPath = __resolvedPath(resolvedPath, input, \"userId\", function () { return input.userId; }, \"{userId}\", false);\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1GetSessionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/bot/{botName}/alias/{botAlias}/user/{userId}/session\";\n                resolvedPath = __resolvedPath(resolvedPath, input, \"botName\", function () { return input.botName; }, \"{botName}\", false);\n                resolvedPath = __resolvedPath(resolvedPath, input, \"botAlias\", function () { return input.botAlias; }, \"{botAlias}\", false);\n                resolvedPath = __resolvedPath(resolvedPath, input, \"userId\", function () { return input.userId; }, \"{userId}\", false);\n                query = map({\n                    checkpointLabelFilter: [, input.checkpointLabelFilter],\n                });\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1PostContentCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = map({}, isSerializableHeaderValue, {\n                    \"x-amz-content-sha256\": \"UNSIGNED-PAYLOAD\",\n                    \"content-type\": input.contentType || \"application/octet-stream\",\n                    \"x-amz-lex-session-attributes\": [\n                        function () { return isSerializableHeaderValue(input.sessionAttributes); },\n                        function () { return context.base64Encoder(Buffer.from(__LazyJsonString.fromObject(input.sessionAttributes))); },\n                    ],\n                    \"x-amz-lex-request-attributes\": [\n                        function () { return isSerializableHeaderValue(input.requestAttributes); },\n                        function () { return context.base64Encoder(Buffer.from(__LazyJsonString.fromObject(input.requestAttributes))); },\n                    ],\n                    accept: input.accept,\n                    \"x-amz-lex-active-contexts\": [\n                        function () { return isSerializableHeaderValue(input.activeContexts); },\n                        function () { return context.base64Encoder(Buffer.from(__LazyJsonString.fromObject(input.activeContexts))); },\n                    ],\n                });\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/bot/{botName}/alias/{botAlias}/user/{userId}/content\";\n                resolvedPath = __resolvedPath(resolvedPath, input, \"botName\", function () { return input.botName; }, \"{botName}\", false);\n                resolvedPath = __resolvedPath(resolvedPath, input, \"botAlias\", function () { return input.botAlias; }, \"{botAlias}\", false);\n                resolvedPath = __resolvedPath(resolvedPath, input, \"userId\", function () { return input.userId; }, \"{userId}\", false);\n                if (input.inputStream !== undefined) {\n                    body = input.inputStream;\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1PostTextCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/bot/{botName}/alias/{botAlias}/user/{userId}/text\";\n                resolvedPath = __resolvedPath(resolvedPath, input, \"botName\", function () { return input.botName; }, \"{botName}\", false);\n                resolvedPath = __resolvedPath(resolvedPath, input, \"botAlias\", function () { return input.botAlias; }, \"{botAlias}\", false);\n                resolvedPath = __resolvedPath(resolvedPath, input, \"userId\", function () { return input.userId; }, \"{userId}\", false);\n                body = JSON.stringify(__assign(__assign(__assign(__assign({}, (input.activeContexts != null && {\n                    activeContexts: serializeAws_restJson1ActiveContextsList(input.activeContexts, context),\n                })), (input.inputText != null && { inputText: input.inputText })), (input.requestAttributes != null && {\n                    requestAttributes: serializeAws_restJson1StringMap(input.requestAttributes, context),\n                })), (input.sessionAttributes != null && {\n                    sessionAttributes: serializeAws_restJson1StringMap(input.sessionAttributes, context),\n                })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1PutSessionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = map({}, isSerializableHeaderValue, {\n                    \"content-type\": \"application/json\",\n                    accept: input.accept,\n                });\n                resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/bot/{botName}/alias/{botAlias}/user/{userId}/session\";\n                resolvedPath = __resolvedPath(resolvedPath, input, \"botName\", function () { return input.botName; }, \"{botName}\", false);\n                resolvedPath = __resolvedPath(resolvedPath, input, \"botAlias\", function () { return input.botAlias; }, \"{botAlias}\", false);\n                resolvedPath = __resolvedPath(resolvedPath, input, \"userId\", function () { return input.userId; }, \"{userId}\", false);\n                body = JSON.stringify(__assign(__assign(__assign(__assign({}, (input.activeContexts != null && {\n                    activeContexts: serializeAws_restJson1ActiveContextsList(input.activeContexts, context),\n                })), (input.dialogAction != null && {\n                    dialogAction: serializeAws_restJson1DialogAction(input.dialogAction, context),\n                })), (input.recentIntentSummaryView != null && {\n                    recentIntentSummaryView: serializeAws_restJson1IntentSummaryList(input.recentIntentSummaryView, context),\n                })), (input.sessionAttributes != null && {\n                    sessionAttributes: serializeAws_restJson1StringMap(input.sessionAttributes, context),\n                })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1DeleteSessionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1DeleteSessionCommandError(output, context)];\n                }\n                contents = map({\n                    $metadata: deserializeMetadata(output),\n                });\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.botAlias != null) {\n                    contents.botAlias = __expectString(data.botAlias);\n                }\n                if (data.botName != null) {\n                    contents.botName = __expectString(data.botName);\n                }\n                if (data.sessionId != null) {\n                    contents.sessionId = __expectString(data.sessionId);\n                }\n                if (data.userId != null) {\n                    contents.userId = __expectString(data.userId);\n                }\n                return [2, contents];\n        }\n    });\n}); };\nvar deserializeAws_restJson1DeleteSessionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, errorCode, _b, parsedBody;\n    var _c;\n    return __generator(this, function (_d) {\n        switch (_d.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _c = {};\n                return [4, parseErrorBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.lexruntimeservice#BadRequestException\": return [3, 2];\n                    case \"ConflictException\": return [3, 4];\n                    case \"com.amazonaws.lexruntimeservice#ConflictException\": return [3, 4];\n                    case \"InternalFailureException\": return [3, 6];\n                    case \"com.amazonaws.lexruntimeservice#InternalFailureException\": return [3, 6];\n                    case \"LimitExceededException\": return [3, 8];\n                    case \"com.amazonaws.lexruntimeservice#LimitExceededException\": return [3, 8];\n                    case \"NotFoundException\": return [3, 10];\n                    case \"com.amazonaws.lexruntimeservice#NotFoundException\": return [3, 10];\n                }\n                return [3, 12];\n            case 2: return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3: throw _d.sent();\n            case 4: return [4, deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n            case 5: throw _d.sent();\n            case 6: return [4, deserializeAws_restJson1InternalFailureExceptionResponse(parsedOutput, context)];\n            case 7: throw _d.sent();\n            case 8: return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 9: throw _d.sent();\n            case 10: return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 11: throw _d.sent();\n            case 12:\n                parsedBody = parsedOutput.body;\n                throwDefaultError({\n                    output: output,\n                    parsedBody: parsedBody,\n                    exceptionCtor: __BaseException,\n                    errorCode: errorCode,\n                });\n                _d.label = 13;\n            case 13: return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1GetSessionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1GetSessionCommandError(output, context)];\n                }\n                contents = map({\n                    $metadata: deserializeMetadata(output),\n                });\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.activeContexts != null) {\n                    contents.activeContexts = deserializeAws_restJson1ActiveContextsList(data.activeContexts, context);\n                }\n                if (data.dialogAction != null) {\n                    contents.dialogAction = deserializeAws_restJson1DialogAction(data.dialogAction, context);\n                }\n                if (data.recentIntentSummaryView != null) {\n                    contents.recentIntentSummaryView = deserializeAws_restJson1IntentSummaryList(data.recentIntentSummaryView, context);\n                }\n                if (data.sessionAttributes != null) {\n                    contents.sessionAttributes = deserializeAws_restJson1StringMap(data.sessionAttributes, context);\n                }\n                if (data.sessionId != null) {\n                    contents.sessionId = __expectString(data.sessionId);\n                }\n                return [2, contents];\n        }\n    });\n}); };\nvar deserializeAws_restJson1GetSessionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, errorCode, _b, parsedBody;\n    var _c;\n    return __generator(this, function (_d) {\n        switch (_d.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _c = {};\n                return [4, parseErrorBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.lexruntimeservice#BadRequestException\": return [3, 2];\n                    case \"InternalFailureException\": return [3, 4];\n                    case \"com.amazonaws.lexruntimeservice#InternalFailureException\": return [3, 4];\n                    case \"LimitExceededException\": return [3, 6];\n                    case \"com.amazonaws.lexruntimeservice#LimitExceededException\": return [3, 6];\n                    case \"NotFoundException\": return [3, 8];\n                    case \"com.amazonaws.lexruntimeservice#NotFoundException\": return [3, 8];\n                }\n                return [3, 10];\n            case 2: return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3: throw _d.sent();\n            case 4: return [4, deserializeAws_restJson1InternalFailureExceptionResponse(parsedOutput, context)];\n            case 5: throw _d.sent();\n            case 6: return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 7: throw _d.sent();\n            case 8: return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 9: throw _d.sent();\n            case 10:\n                parsedBody = parsedOutput.body;\n                throwDefaultError({\n                    output: output,\n                    parsedBody: parsedBody,\n                    exceptionCtor: __BaseException,\n                    errorCode: errorCode,\n                });\n                _d.label = 11;\n            case 11: return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1PostContentCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1PostContentCommandError(output, context)];\n        }\n        contents = map({\n            $metadata: deserializeMetadata(output),\n            contentType: [, output.headers[\"content-type\"]],\n            intentName: [, output.headers[\"x-amz-lex-intent-name\"]],\n            nluIntentConfidence: [\n                function () { return void 0 !== output.headers[\"x-amz-lex-nlu-intent-confidence\"]; },\n                function () {\n                    return new __LazyJsonString(Buffer.from(context.base64Decoder(output.headers[\"x-amz-lex-nlu-intent-confidence\"])).toString(\"utf8\"));\n                },\n            ],\n            alternativeIntents: [\n                function () { return void 0 !== output.headers[\"x-amz-lex-alternative-intents\"]; },\n                function () {\n                    return new __LazyJsonString(Buffer.from(context.base64Decoder(output.headers[\"x-amz-lex-alternative-intents\"])).toString(\"utf8\"));\n                },\n            ],\n            slots: [\n                function () { return void 0 !== output.headers[\"x-amz-lex-slots\"]; },\n                function () {\n                    return new __LazyJsonString(Buffer.from(context.base64Decoder(output.headers[\"x-amz-lex-slots\"])).toString(\"utf8\"));\n                },\n            ],\n            sessionAttributes: [\n                function () { return void 0 !== output.headers[\"x-amz-lex-session-attributes\"]; },\n                function () {\n                    return new __LazyJsonString(Buffer.from(context.base64Decoder(output.headers[\"x-amz-lex-session-attributes\"])).toString(\"utf8\"));\n                },\n            ],\n            sentimentResponse: [, output.headers[\"x-amz-lex-sentiment\"]],\n            message: [, output.headers[\"x-amz-lex-message\"]],\n            encodedMessage: [, output.headers[\"x-amz-lex-encoded-message\"]],\n            messageFormat: [, output.headers[\"x-amz-lex-message-format\"]],\n            dialogState: [, output.headers[\"x-amz-lex-dialog-state\"]],\n            slotToElicit: [, output.headers[\"x-amz-lex-slot-to-elicit\"]],\n            inputTranscript: [, output.headers[\"x-amz-lex-input-transcript\"]],\n            encodedInputTranscript: [, output.headers[\"x-amz-lex-encoded-input-transcript\"]],\n            botVersion: [, output.headers[\"x-amz-lex-bot-version\"]],\n            sessionId: [, output.headers[\"x-amz-lex-session-id\"]],\n            activeContexts: [\n                function () { return void 0 !== output.headers[\"x-amz-lex-active-contexts\"]; },\n                function () {\n                    return new __LazyJsonString(Buffer.from(context.base64Decoder(output.headers[\"x-amz-lex-active-contexts\"])).toString(\"utf8\"));\n                },\n            ],\n        });\n        data = output.body;\n        contents.audioStream = data;\n        return [2, contents];\n    });\n}); };\nvar deserializeAws_restJson1PostContentCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, errorCode, _b, parsedBody;\n    var _c;\n    return __generator(this, function (_d) {\n        switch (_d.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _c = {};\n                return [4, parseErrorBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadGatewayException\": return [3, 2];\n                    case \"com.amazonaws.lexruntimeservice#BadGatewayException\": return [3, 2];\n                    case \"BadRequestException\": return [3, 4];\n                    case \"com.amazonaws.lexruntimeservice#BadRequestException\": return [3, 4];\n                    case \"ConflictException\": return [3, 6];\n                    case \"com.amazonaws.lexruntimeservice#ConflictException\": return [3, 6];\n                    case \"DependencyFailedException\": return [3, 8];\n                    case \"com.amazonaws.lexruntimeservice#DependencyFailedException\": return [3, 8];\n                    case \"InternalFailureException\": return [3, 10];\n                    case \"com.amazonaws.lexruntimeservice#InternalFailureException\": return [3, 10];\n                    case \"LimitExceededException\": return [3, 12];\n                    case \"com.amazonaws.lexruntimeservice#LimitExceededException\": return [3, 12];\n                    case \"LoopDetectedException\": return [3, 14];\n                    case \"com.amazonaws.lexruntimeservice#LoopDetectedException\": return [3, 14];\n                    case \"NotAcceptableException\": return [3, 16];\n                    case \"com.amazonaws.lexruntimeservice#NotAcceptableException\": return [3, 16];\n                    case \"NotFoundException\": return [3, 18];\n                    case \"com.amazonaws.lexruntimeservice#NotFoundException\": return [3, 18];\n                    case \"RequestTimeoutException\": return [3, 20];\n                    case \"com.amazonaws.lexruntimeservice#RequestTimeoutException\": return [3, 20];\n                    case \"UnsupportedMediaTypeException\": return [3, 22];\n                    case \"com.amazonaws.lexruntimeservice#UnsupportedMediaTypeException\": return [3, 22];\n                }\n                return [3, 24];\n            case 2: return [4, deserializeAws_restJson1BadGatewayExceptionResponse(parsedOutput, context)];\n            case 3: throw _d.sent();\n            case 4: return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 5: throw _d.sent();\n            case 6: return [4, deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n            case 7: throw _d.sent();\n            case 8: return [4, deserializeAws_restJson1DependencyFailedExceptionResponse(parsedOutput, context)];\n            case 9: throw _d.sent();\n            case 10: return [4, deserializeAws_restJson1InternalFailureExceptionResponse(parsedOutput, context)];\n            case 11: throw _d.sent();\n            case 12: return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 13: throw _d.sent();\n            case 14: return [4, deserializeAws_restJson1LoopDetectedExceptionResponse(parsedOutput, context)];\n            case 15: throw _d.sent();\n            case 16: return [4, deserializeAws_restJson1NotAcceptableExceptionResponse(parsedOutput, context)];\n            case 17: throw _d.sent();\n            case 18: return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 19: throw _d.sent();\n            case 20: return [4, deserializeAws_restJson1RequestTimeoutExceptionResponse(parsedOutput, context)];\n            case 21: throw _d.sent();\n            case 22: return [4, deserializeAws_restJson1UnsupportedMediaTypeExceptionResponse(parsedOutput, context)];\n            case 23: throw _d.sent();\n            case 24:\n                parsedBody = parsedOutput.body;\n                throwDefaultError({\n                    output: output,\n                    parsedBody: parsedBody,\n                    exceptionCtor: __BaseException,\n                    errorCode: errorCode,\n                });\n                _d.label = 25;\n            case 25: return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1PostTextCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1PostTextCommandError(output, context)];\n                }\n                contents = map({\n                    $metadata: deserializeMetadata(output),\n                });\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.activeContexts != null) {\n                    contents.activeContexts = deserializeAws_restJson1ActiveContextsList(data.activeContexts, context);\n                }\n                if (data.alternativeIntents != null) {\n                    contents.alternativeIntents = deserializeAws_restJson1IntentList(data.alternativeIntents, context);\n                }\n                if (data.botVersion != null) {\n                    contents.botVersion = __expectString(data.botVersion);\n                }\n                if (data.dialogState != null) {\n                    contents.dialogState = __expectString(data.dialogState);\n                }\n                if (data.intentName != null) {\n                    contents.intentName = __expectString(data.intentName);\n                }\n                if (data.message != null) {\n                    contents.message = __expectString(data.message);\n                }\n                if (data.messageFormat != null) {\n                    contents.messageFormat = __expectString(data.messageFormat);\n                }\n                if (data.nluIntentConfidence != null) {\n                    contents.nluIntentConfidence = deserializeAws_restJson1IntentConfidence(data.nluIntentConfidence, context);\n                }\n                if (data.responseCard != null) {\n                    contents.responseCard = deserializeAws_restJson1ResponseCard(data.responseCard, context);\n                }\n                if (data.sentimentResponse != null) {\n                    contents.sentimentResponse = deserializeAws_restJson1SentimentResponse(data.sentimentResponse, context);\n                }\n                if (data.sessionAttributes != null) {\n                    contents.sessionAttributes = deserializeAws_restJson1StringMap(data.sessionAttributes, context);\n                }\n                if (data.sessionId != null) {\n                    contents.sessionId = __expectString(data.sessionId);\n                }\n                if (data.slotToElicit != null) {\n                    contents.slotToElicit = __expectString(data.slotToElicit);\n                }\n                if (data.slots != null) {\n                    contents.slots = deserializeAws_restJson1StringMap(data.slots, context);\n                }\n                return [2, contents];\n        }\n    });\n}); };\nvar deserializeAws_restJson1PostTextCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, errorCode, _b, parsedBody;\n    var _c;\n    return __generator(this, function (_d) {\n        switch (_d.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _c = {};\n                return [4, parseErrorBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadGatewayException\": return [3, 2];\n                    case \"com.amazonaws.lexruntimeservice#BadGatewayException\": return [3, 2];\n                    case \"BadRequestException\": return [3, 4];\n                    case \"com.amazonaws.lexruntimeservice#BadRequestException\": return [3, 4];\n                    case \"ConflictException\": return [3, 6];\n                    case \"com.amazonaws.lexruntimeservice#ConflictException\": return [3, 6];\n                    case \"DependencyFailedException\": return [3, 8];\n                    case \"com.amazonaws.lexruntimeservice#DependencyFailedException\": return [3, 8];\n                    case \"InternalFailureException\": return [3, 10];\n                    case \"com.amazonaws.lexruntimeservice#InternalFailureException\": return [3, 10];\n                    case \"LimitExceededException\": return [3, 12];\n                    case \"com.amazonaws.lexruntimeservice#LimitExceededException\": return [3, 12];\n                    case \"LoopDetectedException\": return [3, 14];\n                    case \"com.amazonaws.lexruntimeservice#LoopDetectedException\": return [3, 14];\n                    case \"NotFoundException\": return [3, 16];\n                    case \"com.amazonaws.lexruntimeservice#NotFoundException\": return [3, 16];\n                }\n                return [3, 18];\n            case 2: return [4, deserializeAws_restJson1BadGatewayExceptionResponse(parsedOutput, context)];\n            case 3: throw _d.sent();\n            case 4: return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 5: throw _d.sent();\n            case 6: return [4, deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n            case 7: throw _d.sent();\n            case 8: return [4, deserializeAws_restJson1DependencyFailedExceptionResponse(parsedOutput, context)];\n            case 9: throw _d.sent();\n            case 10: return [4, deserializeAws_restJson1InternalFailureExceptionResponse(parsedOutput, context)];\n            case 11: throw _d.sent();\n            case 12: return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 13: throw _d.sent();\n            case 14: return [4, deserializeAws_restJson1LoopDetectedExceptionResponse(parsedOutput, context)];\n            case 15: throw _d.sent();\n            case 16: return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 17: throw _d.sent();\n            case 18:\n                parsedBody = parsedOutput.body;\n                throwDefaultError({\n                    output: output,\n                    parsedBody: parsedBody,\n                    exceptionCtor: __BaseException,\n                    errorCode: errorCode,\n                });\n                _d.label = 19;\n            case 19: return [2];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1PutSessionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1PutSessionCommandError(output, context)];\n        }\n        contents = map({\n            $metadata: deserializeMetadata(output),\n            contentType: [, output.headers[\"content-type\"]],\n            intentName: [, output.headers[\"x-amz-lex-intent-name\"]],\n            slots: [\n                function () { return void 0 !== output.headers[\"x-amz-lex-slots\"]; },\n                function () {\n                    return new __LazyJsonString(Buffer.from(context.base64Decoder(output.headers[\"x-amz-lex-slots\"])).toString(\"utf8\"));\n                },\n            ],\n            sessionAttributes: [\n                function () { return void 0 !== output.headers[\"x-amz-lex-session-attributes\"]; },\n                function () {\n                    return new __LazyJsonString(Buffer.from(context.base64Decoder(output.headers[\"x-amz-lex-session-attributes\"])).toString(\"utf8\"));\n                },\n            ],\n            message: [, output.headers[\"x-amz-lex-message\"]],\n            encodedMessage: [, output.headers[\"x-amz-lex-encoded-message\"]],\n            messageFormat: [, output.headers[\"x-amz-lex-message-format\"]],\n            dialogState: [, output.headers[\"x-amz-lex-dialog-state\"]],\n            slotToElicit: [, output.headers[\"x-amz-lex-slot-to-elicit\"]],\n            sessionId: [, output.headers[\"x-amz-lex-session-id\"]],\n            activeContexts: [\n                function () { return void 0 !== output.headers[\"x-amz-lex-active-contexts\"]; },\n                function () {\n                    return new __LazyJsonString(Buffer.from(context.base64Decoder(output.headers[\"x-amz-lex-active-contexts\"])).toString(\"utf8\"));\n                },\n            ],\n        });\n        data = output.body;\n        contents.audioStream = data;\n        return [2, contents];\n    });\n}); };\nvar deserializeAws_restJson1PutSessionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, errorCode, _b, parsedBody;\n    var _c;\n    return __generator(this, function (_d) {\n        switch (_d.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _c = {};\n                return [4, parseErrorBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadGatewayException\": return [3, 2];\n                    case \"com.amazonaws.lexruntimeservice#BadGatewayException\": return [3, 2];\n                    case \"BadRequestException\": return [3, 4];\n                    case \"com.amazonaws.lexruntimeservice#BadRequestException\": return [3, 4];\n                    case \"ConflictException\": return [3, 6];\n                    case \"com.amazonaws.lexruntimeservice#ConflictException\": return [3, 6];\n                    case \"DependencyFailedException\": return [3, 8];\n                    case \"com.amazonaws.lexruntimeservice#DependencyFailedException\": return [3, 8];\n                    case \"InternalFailureException\": return [3, 10];\n                    case \"com.amazonaws.lexruntimeservice#InternalFailureException\": return [3, 10];\n                    case \"LimitExceededException\": return [3, 12];\n                    case \"com.amazonaws.lexruntimeservice#LimitExceededException\": return [3, 12];\n                    case \"NotAcceptableException\": return [3, 14];\n                    case \"com.amazonaws.lexruntimeservice#NotAcceptableException\": return [3, 14];\n                    case \"NotFoundException\": return [3, 16];\n                    case \"com.amazonaws.lexruntimeservice#NotFoundException\": return [3, 16];\n                }\n                return [3, 18];\n            case 2: return [4, deserializeAws_restJson1BadGatewayExceptionResponse(parsedOutput, context)];\n            case 3: throw _d.sent();\n            case 4: return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 5: throw _d.sent();\n            case 6: return [4, deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n            case 7: throw _d.sent();\n            case 8: return [4, deserializeAws_restJson1DependencyFailedExceptionResponse(parsedOutput, context)];\n            case 9: throw _d.sent();\n            case 10: return [4, deserializeAws_restJson1InternalFailureExceptionResponse(parsedOutput, context)];\n            case 11: throw _d.sent();\n            case 12: return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 13: throw _d.sent();\n            case 14: return [4, deserializeAws_restJson1NotAcceptableExceptionResponse(parsedOutput, context)];\n            case 15: throw _d.sent();\n            case 16: return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 17: throw _d.sent();\n            case 18:\n                parsedBody = parsedOutput.body;\n                throwDefaultError({\n                    output: output,\n                    parsedBody: parsedBody,\n                    exceptionCtor: __BaseException,\n                    errorCode: errorCode,\n                });\n                _d.label = 19;\n            case 19: return [2];\n        }\n    });\n}); };\nvar map = __map;\nvar deserializeAws_restJson1BadGatewayExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n        contents = map({});\n        data = parsedOutput.body;\n        if (data.Message != null) {\n            contents.Message = __expectString(data.Message);\n        }\n        exception = new BadGatewayException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, contents));\n        return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n}); };\nvar deserializeAws_restJson1BadRequestExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n        contents = map({});\n        data = parsedOutput.body;\n        if (data.message != null) {\n            contents.message = __expectString(data.message);\n        }\n        exception = new BadRequestException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, contents));\n        return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n}); };\nvar deserializeAws_restJson1ConflictExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n        contents = map({});\n        data = parsedOutput.body;\n        if (data.message != null) {\n            contents.message = __expectString(data.message);\n        }\n        exception = new ConflictException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, contents));\n        return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n}); };\nvar deserializeAws_restJson1DependencyFailedExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n        contents = map({});\n        data = parsedOutput.body;\n        if (data.Message != null) {\n            contents.Message = __expectString(data.Message);\n        }\n        exception = new DependencyFailedException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, contents));\n        return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n}); };\nvar deserializeAws_restJson1InternalFailureExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n        contents = map({});\n        data = parsedOutput.body;\n        if (data.message != null) {\n            contents.message = __expectString(data.message);\n        }\n        exception = new InternalFailureException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, contents));\n        return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n}); };\nvar deserializeAws_restJson1LimitExceededExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n        contents = map({\n            retryAfterSeconds: [, parsedOutput.headers[\"retry-after\"]],\n        });\n        data = parsedOutput.body;\n        if (data.message != null) {\n            contents.message = __expectString(data.message);\n        }\n        exception = new LimitExceededException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, contents));\n        return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n}); };\nvar deserializeAws_restJson1LoopDetectedExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n        contents = map({});\n        data = parsedOutput.body;\n        if (data.Message != null) {\n            contents.Message = __expectString(data.Message);\n        }\n        exception = new LoopDetectedException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, contents));\n        return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n}); };\nvar deserializeAws_restJson1NotAcceptableExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n        contents = map({});\n        data = parsedOutput.body;\n        if (data.message != null) {\n            contents.message = __expectString(data.message);\n        }\n        exception = new NotAcceptableException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, contents));\n        return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n}); };\nvar deserializeAws_restJson1NotFoundExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n        contents = map({});\n        data = parsedOutput.body;\n        if (data.message != null) {\n            contents.message = __expectString(data.message);\n        }\n        exception = new NotFoundException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, contents));\n        return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n}); };\nvar deserializeAws_restJson1RequestTimeoutExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n        contents = map({});\n        data = parsedOutput.body;\n        if (data.message != null) {\n            contents.message = __expectString(data.message);\n        }\n        exception = new RequestTimeoutException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, contents));\n        return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n}); };\nvar deserializeAws_restJson1UnsupportedMediaTypeExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n        contents = map({});\n        data = parsedOutput.body;\n        if (data.message != null) {\n            contents.message = __expectString(data.message);\n        }\n        exception = new UnsupportedMediaTypeException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, contents));\n        return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n}); };\nvar serializeAws_restJson1ActiveContext = function (input, context) {\n    return __assign(__assign(__assign({}, (input.name != null && { name: input.name })), (input.parameters != null && {\n        parameters: serializeAws_restJson1ActiveContextParametersMap(input.parameters, context),\n    })), (input.timeToLive != null && {\n        timeToLive: serializeAws_restJson1ActiveContextTimeToLive(input.timeToLive, context),\n    }));\n};\nvar serializeAws_restJson1ActiveContextParametersMap = function (input, context) {\n    return Object.entries(input).reduce(function (acc, _a) {\n        var _b;\n        var _c = __read(_a, 2), key = _c[0], value = _c[1];\n        if (value === null) {\n            return acc;\n        }\n        return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n    }, {});\n};\nvar serializeAws_restJson1ActiveContextsList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        return serializeAws_restJson1ActiveContext(entry, context);\n    });\n};\nvar serializeAws_restJson1ActiveContextTimeToLive = function (input, context) {\n    return __assign(__assign({}, (input.timeToLiveInSeconds != null && { timeToLiveInSeconds: input.timeToLiveInSeconds })), (input.turnsToLive != null && { turnsToLive: input.turnsToLive }));\n};\nvar serializeAws_restJson1DialogAction = function (input, context) {\n    return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, (input.fulfillmentState != null && { fulfillmentState: input.fulfillmentState })), (input.intentName != null && { intentName: input.intentName })), (input.message != null && { message: input.message })), (input.messageFormat != null && { messageFormat: input.messageFormat })), (input.slotToElicit != null && { slotToElicit: input.slotToElicit })), (input.slots != null && { slots: serializeAws_restJson1StringMap(input.slots, context) })), (input.type != null && { type: input.type }));\n};\nvar serializeAws_restJson1IntentSummary = function (input, context) {\n    return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, (input.checkpointLabel != null && { checkpointLabel: input.checkpointLabel })), (input.confirmationStatus != null && { confirmationStatus: input.confirmationStatus })), (input.dialogActionType != null && { dialogActionType: input.dialogActionType })), (input.fulfillmentState != null && { fulfillmentState: input.fulfillmentState })), (input.intentName != null && { intentName: input.intentName })), (input.slotToElicit != null && { slotToElicit: input.slotToElicit })), (input.slots != null && { slots: serializeAws_restJson1StringMap(input.slots, context) }));\n};\nvar serializeAws_restJson1IntentSummaryList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        return serializeAws_restJson1IntentSummary(entry, context);\n    });\n};\nvar serializeAws_restJson1StringMap = function (input, context) {\n    return Object.entries(input).reduce(function (acc, _a) {\n        var _b;\n        var _c = __read(_a, 2), key = _c[0], value = _c[1];\n        if (value === null) {\n            return acc;\n        }\n        return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n    }, {});\n};\nvar deserializeAws_restJson1ActiveContext = function (output, context) {\n    return {\n        name: __expectString(output.name),\n        parameters: output.parameters != null\n            ? deserializeAws_restJson1ActiveContextParametersMap(output.parameters, context)\n            : undefined,\n        timeToLive: output.timeToLive != null\n            ? deserializeAws_restJson1ActiveContextTimeToLive(output.timeToLive, context)\n            : undefined,\n    };\n};\nvar deserializeAws_restJson1ActiveContextParametersMap = function (output, context) {\n    return Object.entries(output).reduce(function (acc, _a) {\n        var _b;\n        var _c = __read(_a, 2), key = _c[0], value = _c[1];\n        if (value === null) {\n            return acc;\n        }\n        return __assign(__assign({}, acc), (_b = {}, _b[key] = __expectString(value), _b));\n    }, {});\n};\nvar deserializeAws_restJson1ActiveContextsList = function (output, context) {\n    var retVal = (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1ActiveContext(entry, context);\n    });\n    return retVal;\n};\nvar deserializeAws_restJson1ActiveContextTimeToLive = function (output, context) {\n    return {\n        timeToLiveInSeconds: __expectInt32(output.timeToLiveInSeconds),\n        turnsToLive: __expectInt32(output.turnsToLive),\n    };\n};\nvar deserializeAws_restJson1Button = function (output, context) {\n    return {\n        text: __expectString(output.text),\n        value: __expectString(output.value),\n    };\n};\nvar deserializeAws_restJson1DialogAction = function (output, context) {\n    return {\n        fulfillmentState: __expectString(output.fulfillmentState),\n        intentName: __expectString(output.intentName),\n        message: __expectString(output.message),\n        messageFormat: __expectString(output.messageFormat),\n        slotToElicit: __expectString(output.slotToElicit),\n        slots: output.slots != null ? deserializeAws_restJson1StringMap(output.slots, context) : undefined,\n        type: __expectString(output.type),\n    };\n};\nvar deserializeAws_restJson1GenericAttachment = function (output, context) {\n    return {\n        attachmentLinkUrl: __expectString(output.attachmentLinkUrl),\n        buttons: output.buttons != null ? deserializeAws_restJson1listOfButtons(output.buttons, context) : undefined,\n        imageUrl: __expectString(output.imageUrl),\n        subTitle: __expectString(output.subTitle),\n        title: __expectString(output.title),\n    };\n};\nvar deserializeAws_restJson1genericAttachmentList = function (output, context) {\n    var retVal = (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1GenericAttachment(entry, context);\n    });\n    return retVal;\n};\nvar deserializeAws_restJson1IntentConfidence = function (output, context) {\n    return {\n        score: __limitedParseDouble(output.score),\n    };\n};\nvar deserializeAws_restJson1IntentList = function (output, context) {\n    var retVal = (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1PredictedIntent(entry, context);\n    });\n    return retVal;\n};\nvar deserializeAws_restJson1IntentSummary = function (output, context) {\n    return {\n        checkpointLabel: __expectString(output.checkpointLabel),\n        confirmationStatus: __expectString(output.confirmationStatus),\n        dialogActionType: __expectString(output.dialogActionType),\n        fulfillmentState: __expectString(output.fulfillmentState),\n        intentName: __expectString(output.intentName),\n        slotToElicit: __expectString(output.slotToElicit),\n        slots: output.slots != null ? deserializeAws_restJson1StringMap(output.slots, context) : undefined,\n    };\n};\nvar deserializeAws_restJson1IntentSummaryList = function (output, context) {\n    var retVal = (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1IntentSummary(entry, context);\n    });\n    return retVal;\n};\nvar deserializeAws_restJson1listOfButtons = function (output, context) {\n    var retVal = (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1Button(entry, context);\n    });\n    return retVal;\n};\nvar deserializeAws_restJson1PredictedIntent = function (output, context) {\n    return {\n        intentName: __expectString(output.intentName),\n        nluIntentConfidence: output.nluIntentConfidence != null\n            ? deserializeAws_restJson1IntentConfidence(output.nluIntentConfidence, context)\n            : undefined,\n        slots: output.slots != null ? deserializeAws_restJson1StringMap(output.slots, context) : undefined,\n    };\n};\nvar deserializeAws_restJson1ResponseCard = function (output, context) {\n    return {\n        contentType: __expectString(output.contentType),\n        genericAttachments: output.genericAttachments != null\n            ? deserializeAws_restJson1genericAttachmentList(output.genericAttachments, context)\n            : undefined,\n        version: __expectString(output.version),\n    };\n};\nvar deserializeAws_restJson1SentimentResponse = function (output, context) {\n    return {\n        sentimentLabel: __expectString(output.sentimentLabel),\n        sentimentScore: __expectString(output.sentimentScore),\n    };\n};\nvar deserializeAws_restJson1StringMap = function (output, context) {\n    return Object.entries(output).reduce(function (acc, _a) {\n        var _b;\n        var _c = __read(_a, 2), key = _c[0], value = _c[1];\n        if (value === null) {\n            return acc;\n        }\n        return __assign(__assign({}, acc), (_b = {}, _b[key] = __expectString(value), _b));\n    }, {});\n};\nvar deserializeMetadata = function (output) {\n    var _a, _b;\n    return ({\n        httpStatusCode: output.statusCode,\n        requestId: (_b = (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"]) !== null && _b !== void 0 ? _b : output.headers[\"x-amz-request-id\"],\n        extendedRequestId: output.headers[\"x-amz-id-2\"],\n        cfId: output.headers[\"x-amz-cf-id\"],\n    });\n};\nvar collectBody = function (streamBody, context) {\n    if (streamBody === void 0) { streamBody = new Uint8Array(); }\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nvar collectBodyString = function (streamBody, context) {\n    return collectBody(streamBody, context).then(function (body) { return context.utf8Encoder(body); });\n};\nvar isSerializableHeaderValue = function (value) {\n    return value !== undefined &&\n        value !== null &&\n        value !== \"\" &&\n        (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\n        (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\n};\nvar parseBody = function (streamBody, context) {\n    return collectBodyString(streamBody, context).then(function (encoded) {\n        if (encoded.length) {\n            return JSON.parse(encoded);\n        }\n        return {};\n    });\n};\nvar parseErrorBody = function (errorBody, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var value;\n    var _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0: return [4, parseBody(errorBody, context)];\n            case 1:\n                value = _b.sent();\n                value.message = (_a = value.message) !== null && _a !== void 0 ? _a : value.Message;\n                return [2, value];\n        }\n    });\n}); };\nvar loadRestJsonErrorCode = function (output, data) {\n    var findKey = function (object, key) { return Object.keys(object).find(function (k) { return k.toLowerCase() === key.toLowerCase(); }); };\n    var sanitizeErrorCode = function (rawValue) {\n        var cleanValue = rawValue;\n        if (typeof cleanValue === \"number\") {\n            cleanValue = cleanValue.toString();\n        }\n        if (cleanValue.indexOf(\",\") >= 0) {\n            cleanValue = cleanValue.split(\",\")[0];\n        }\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    var headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== undefined) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n};\n"]},"metadata":{},"sourceType":"module"}