{"ast":null,"code":"// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\n\nvar wk = function (c, id, msg, transfer, cb) {\n  var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([c + ';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'], {\n    type: 'text/javascript'\n  }))));\n\n  w.onmessage = function (e) {\n    var d = e.data,\n        ed = d.$e$;\n\n    if (ed) {\n      var err = new Error(ed[0]);\n      err['code'] = ed[1];\n      err.stack = ed[2];\n      cb(err, null);\n    } else cb(null, d);\n  };\n\n  w.postMessage(msg, transfer);\n  return w;\n}; // aliases for shorter compressed code (most minifers don't do this)\n\n\nvar u8 = Uint8Array,\n    u16 = Uint16Array,\n    u32 = Uint32Array; // fixed length extra bits\n\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0,\n/* unused */\n0, 0,\n/* impossible */\n0]); // fixed distance extra bits\n// see fleb note\n\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13,\n/* unused */\n0, 0]); // code length index map\n\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]); // get base, reverse index map from extra bits\n\nvar freb = function (eb, start) {\n  var b = new u16(31);\n\n  for (var i = 0; i < 31; ++i) {\n    b[i] = start += 1 << eb[i - 1];\n  } // numbers here are at max 18 bits\n\n\n  var r = new u32(b[30]);\n\n  for (var i = 1; i < 30; ++i) {\n    for (var j = b[i]; j < b[i + 1]; ++j) {\n      r[j] = j - b[i] << 5 | i;\n    }\n  }\n\n  return [b, r];\n};\n\nvar _a = freb(fleb, 2),\n    fl = _a[0],\n    revfl = _a[1]; // we can ignore the fact that the other numbers are wrong; they never happen anyway\n\n\nfl[28] = 258, revfl[258] = 28;\n\nvar _b = freb(fdeb, 0),\n    fd = _b[0],\n    revfd = _b[1]; // map of value to reverse (assuming 16 bits)\n\n\nvar rev = new u16(32768);\n\nfor (var i = 0; i < 32768; ++i) {\n  // reverse table algorithm from SO\n  var x = (i & 0xAAAA) >>> 1 | (i & 0x5555) << 1;\n  x = (x & 0xCCCC) >>> 2 | (x & 0x3333) << 2;\n  x = (x & 0xF0F0) >>> 4 | (x & 0x0F0F) << 4;\n  rev[i] = ((x & 0xFF00) >>> 8 | (x & 0x00FF) << 8) >>> 1;\n} // create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\n\n\nvar hMap = function (cd, mb, r) {\n  var s = cd.length; // index\n\n  var i = 0; // u16 \"map\": index -> # of codes with bit length = index\n\n  var l = new u16(mb); // length of cd must be 288 (total # of codes)\n\n  for (; i < s; ++i) {\n    if (cd[i]) ++l[cd[i] - 1];\n  } // u16 \"map\": index -> minimum code for bit length = index\n\n\n  var le = new u16(mb);\n\n  for (i = 0; i < mb; ++i) {\n    le[i] = le[i - 1] + l[i - 1] << 1;\n  }\n\n  var co;\n\n  if (r) {\n    // u16 \"map\": index -> number of actual bits, symbol for code\n    co = new u16(1 << mb); // bits to remove for reverser\n\n    var rvb = 15 - mb;\n\n    for (i = 0; i < s; ++i) {\n      // ignore 0 lengths\n      if (cd[i]) {\n        // num encoding both symbol and bits read\n        var sv = i << 4 | cd[i]; // free bits\n\n        var r_1 = mb - cd[i]; // start value\n\n        var v = le[cd[i] - 1]++ << r_1; // m is end value\n\n        for (var m = v | (1 << r_1) - 1; v <= m; ++v) {\n          // every 16 bit value starting with the code yields the same result\n          co[rev[v] >>> rvb] = sv;\n        }\n      }\n    }\n  } else {\n    co = new u16(s);\n\n    for (i = 0; i < s; ++i) {\n      if (cd[i]) {\n        co[i] = rev[le[cd[i] - 1]++] >>> 15 - cd[i];\n      }\n    }\n  }\n\n  return co;\n}; // fixed length tree\n\n\nvar flt = new u8(288);\n\nfor (var i = 0; i < 144; ++i) flt[i] = 8;\n\nfor (var i = 144; i < 256; ++i) flt[i] = 9;\n\nfor (var i = 256; i < 280; ++i) flt[i] = 7;\n\nfor (var i = 280; i < 288; ++i) flt[i] = 8; // fixed distance tree\n\n\nvar fdt = new u8(32);\n\nfor (var i = 0; i < 32; ++i) fdt[i] = 5; // fixed length map\n\n\nvar flm = /*#__PURE__*/hMap(flt, 9, 0),\n    flrm = /*#__PURE__*/hMap(flt, 9, 1); // fixed distance map\n\nvar fdm = /*#__PURE__*/hMap(fdt, 5, 0),\n    fdrm = /*#__PURE__*/hMap(fdt, 5, 1); // find max of array\n\nvar max = function (a) {\n  var m = a[0];\n\n  for (var i = 1; i < a.length; ++i) {\n    if (a[i] > m) m = a[i];\n  }\n\n  return m;\n}; // read d, starting at bit p and mask with m\n\n\nvar bits = function (d, p, m) {\n  var o = p / 8 | 0;\n  return (d[o] | d[o + 1] << 8) >> (p & 7) & m;\n}; // read d, starting at bit p continuing for at least 16 bits\n\n\nvar bits16 = function (d, p) {\n  var o = p / 8 | 0;\n  return (d[o] | d[o + 1] << 8 | d[o + 2] << 16) >> (p & 7);\n}; // get end of byte\n\n\nvar shft = function (p) {\n  return (p + 7) / 8 | 0;\n}; // typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\n\n\nvar slc = function (v, s, e) {\n  if (s == null || s < 0) s = 0;\n  if (e == null || e > v.length) e = v.length; // can't use .constructor in case user-supplied\n\n  var n = new (v.BYTES_PER_ELEMENT == 2 ? u16 : v.BYTES_PER_ELEMENT == 4 ? u32 : u8)(e - s);\n  n.set(v.subarray(s, e));\n  return n;\n};\n/**\n * Codes for errors generated within this library\n */\n\n\nexport var FlateErrorCode = {\n  UnexpectedEOF: 0,\n  InvalidBlockType: 1,\n  InvalidLengthLiteral: 2,\n  InvalidDistance: 3,\n  StreamFinished: 4,\n  NoStreamHandler: 5,\n  InvalidHeader: 6,\n  NoCallback: 7,\n  InvalidUTF8: 8,\n  ExtraFieldTooLong: 9,\n  InvalidDate: 10,\n  FilenameTooLong: 11,\n  StreamFinishing: 12,\n  InvalidZipData: 13,\n  UnknownCompressionMethod: 14\n}; // error codes\n\nvar ec = ['unexpected EOF', 'invalid block type', 'invalid length/literal', 'invalid distance', 'stream finished', 'no stream handler',, 'no callback', 'invalid UTF-8 data', 'extra field too long', 'date not in range 1980-2099', 'filename too long', 'stream finishing', 'invalid zip data' // determined by unknown compression method\n];\n;\n\nvar err = function (ind, msg, nt) {\n  var e = new Error(msg || ec[ind]);\n  e.code = ind;\n  if (Error.captureStackTrace) Error.captureStackTrace(e, err);\n  if (!nt) throw e;\n  return e;\n}; // expands raw DEFLATE data\n\n\nvar inflt = function (dat, buf, st) {\n  // source length\n  var sl = dat.length;\n  if (!sl || st && st.f && !st.l) return buf || new u8(0); // have to estimate size\n\n  var noBuf = !buf || st; // no state\n\n  var noSt = !st || st.i;\n  if (!st) st = {}; // Assumes roughly 33% compression ratio average\n\n  if (!buf) buf = new u8(sl * 3); // ensure buffer can fit at least l elements\n\n  var cbuf = function (l) {\n    var bl = buf.length; // need to increase size to fit\n\n    if (l > bl) {\n      // Double or set to necessary, whichever is greater\n      var nbuf = new u8(Math.max(bl * 2, l));\n      nbuf.set(buf);\n      buf = nbuf;\n    }\n  }; //  last chunk         bitpos           bytes\n\n\n  var final = st.f || 0,\n      pos = st.p || 0,\n      bt = st.b || 0,\n      lm = st.l,\n      dm = st.d,\n      lbt = st.m,\n      dbt = st.n; // total bits\n\n  var tbts = sl * 8;\n\n  do {\n    if (!lm) {\n      // BFINAL - this is only 1 when last chunk is next\n      final = bits(dat, pos, 1); // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n\n      var type = bits(dat, pos + 1, 3);\n      pos += 3;\n\n      if (!type) {\n        // go to end of byte boundary\n        var s = shft(pos) + 4,\n            l = dat[s - 4] | dat[s - 3] << 8,\n            t = s + l;\n\n        if (t > sl) {\n          if (noSt) err(0);\n          break;\n        } // ensure size\n\n\n        if (noBuf) cbuf(bt + l); // Copy over uncompressed data\n\n        buf.set(dat.subarray(s, t), bt); // Get new bitpos, update byte count\n\n        st.b = bt += l, st.p = pos = t * 8, st.f = final;\n        continue;\n      } else if (type == 1) lm = flrm, dm = fdrm, lbt = 9, dbt = 5;else if (type == 2) {\n        //  literal                            lengths\n        var hLit = bits(dat, pos, 31) + 257,\n            hcLen = bits(dat, pos + 10, 15) + 4;\n        var tl = hLit + bits(dat, pos + 5, 31) + 1;\n        pos += 14; // length+distance tree\n\n        var ldt = new u8(tl); // code length tree\n\n        var clt = new u8(19);\n\n        for (var i = 0; i < hcLen; ++i) {\n          // use index map to get real code\n          clt[clim[i]] = bits(dat, pos + i * 3, 7);\n        }\n\n        pos += hcLen * 3; // code lengths bits\n\n        var clb = max(clt),\n            clbmsk = (1 << clb) - 1; // code lengths map\n\n        var clm = hMap(clt, clb, 1);\n\n        for (var i = 0; i < tl;) {\n          var r = clm[bits(dat, pos, clbmsk)]; // bits read\n\n          pos += r & 15; // symbol\n\n          var s = r >>> 4; // code length to copy\n\n          if (s < 16) {\n            ldt[i++] = s;\n          } else {\n            //  copy   count\n            var c = 0,\n                n = 0;\n            if (s == 16) n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];else if (s == 17) n = 3 + bits(dat, pos, 7), pos += 3;else if (s == 18) n = 11 + bits(dat, pos, 127), pos += 7;\n\n            while (n--) ldt[i++] = c;\n          }\n        } //    length tree                 distance tree\n\n\n        var lt = ldt.subarray(0, hLit),\n            dt = ldt.subarray(hLit); // max length bits\n\n        lbt = max(lt); // max dist bits\n\n        dbt = max(dt);\n        lm = hMap(lt, lbt, 1);\n        dm = hMap(dt, dbt, 1);\n      } else err(1);\n\n      if (pos > tbts) {\n        if (noSt) err(0);\n        break;\n      }\n    } // Make sure the buffer can hold this + the largest possible addition\n    // Maximum chunk size (practically, theoretically infinite) is 2^17;\n\n\n    if (noBuf) cbuf(bt + 131072);\n    var lms = (1 << lbt) - 1,\n        dms = (1 << dbt) - 1;\n    var lpos = pos;\n\n    for (;; lpos = pos) {\n      // bits read, code\n      var c = lm[bits16(dat, pos) & lms],\n          sym = c >>> 4;\n      pos += c & 15;\n\n      if (pos > tbts) {\n        if (noSt) err(0);\n        break;\n      }\n\n      if (!c) err(2);\n      if (sym < 256) buf[bt++] = sym;else if (sym == 256) {\n        lpos = pos, lm = null;\n        break;\n      } else {\n        var add = sym - 254; // no extra bits needed if less\n\n        if (sym > 264) {\n          // index\n          var i = sym - 257,\n              b = fleb[i];\n          add = bits(dat, pos, (1 << b) - 1) + fl[i];\n          pos += b;\n        } // dist\n\n\n        var d = dm[bits16(dat, pos) & dms],\n            dsym = d >>> 4;\n        if (!d) err(3);\n        pos += d & 15;\n        var dt = fd[dsym];\n\n        if (dsym > 3) {\n          var b = fdeb[dsym];\n          dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n        }\n\n        if (pos > tbts) {\n          if (noSt) err(0);\n          break;\n        }\n\n        if (noBuf) cbuf(bt + 131072);\n        var end = bt + add;\n\n        for (; bt < end; bt += 4) {\n          buf[bt] = buf[bt - dt];\n          buf[bt + 1] = buf[bt + 1 - dt];\n          buf[bt + 2] = buf[bt + 2 - dt];\n          buf[bt + 3] = buf[bt + 3 - dt];\n        }\n\n        bt = end;\n      }\n    }\n\n    st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n    if (lm) final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n  } while (!final);\n\n  return bt == buf.length ? buf : slc(buf, 0, bt);\n}; // starting at p, write the minimum number of bits that can hold v to d\n\n\nvar wbits = function (d, p, v) {\n  v <<= p & 7;\n  var o = p / 8 | 0;\n  d[o] |= v;\n  d[o + 1] |= v >>> 8;\n}; // starting at p, write the minimum number of bits (>8) that can hold v to d\n\n\nvar wbits16 = function (d, p, v) {\n  v <<= p & 7;\n  var o = p / 8 | 0;\n  d[o] |= v;\n  d[o + 1] |= v >>> 8;\n  d[o + 2] |= v >>> 16;\n}; // creates code lengths from a frequency table\n\n\nvar hTree = function (d, mb) {\n  // Need extra info to make a tree\n  var t = [];\n\n  for (var i = 0; i < d.length; ++i) {\n    if (d[i]) t.push({\n      s: i,\n      f: d[i]\n    });\n  }\n\n  var s = t.length;\n  var t2 = t.slice();\n  if (!s) return [et, 0];\n\n  if (s == 1) {\n    var v = new u8(t[0].s + 1);\n    v[t[0].s] = 1;\n    return [v, 1];\n  }\n\n  t.sort(function (a, b) {\n    return a.f - b.f;\n  }); // after i2 reaches last ind, will be stopped\n  // freq must be greater than largest possible number of symbols\n\n  t.push({\n    s: -1,\n    f: 25001\n  });\n  var l = t[0],\n      r = t[1],\n      i0 = 0,\n      i1 = 1,\n      i2 = 2;\n  t[0] = {\n    s: -1,\n    f: l.f + r.f,\n    l: l,\n    r: r\n  }; // efficient algorithm from UZIP.js\n  // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n  // symbols that combined have high freq, will start processing i2 (high-freq,\n  // non-composite) symbols instead\n  // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n\n  while (i1 != s - 1) {\n    l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n    r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n    t[i1++] = {\n      s: -1,\n      f: l.f + r.f,\n      l: l,\n      r: r\n    };\n  }\n\n  var maxSym = t2[0].s;\n\n  for (var i = 1; i < s; ++i) {\n    if (t2[i].s > maxSym) maxSym = t2[i].s;\n  } // code lengths\n\n\n  var tr = new u16(maxSym + 1); // max bits in tree\n\n  var mbt = ln(t[i1 - 1], tr, 0);\n\n  if (mbt > mb) {\n    // more algorithms from UZIP.js\n    // TODO: find out how this code works (debt)\n    //  ind    debt\n    var i = 0,\n        dt = 0; //    left            cost\n\n    var lft = mbt - mb,\n        cst = 1 << lft;\n    t2.sort(function (a, b) {\n      return tr[b.s] - tr[a.s] || a.f - b.f;\n    });\n\n    for (; i < s; ++i) {\n      var i2_1 = t2[i].s;\n\n      if (tr[i2_1] > mb) {\n        dt += cst - (1 << mbt - tr[i2_1]);\n        tr[i2_1] = mb;\n      } else break;\n    }\n\n    dt >>>= lft;\n\n    while (dt > 0) {\n      var i2_2 = t2[i].s;\n      if (tr[i2_2] < mb) dt -= 1 << mb - tr[i2_2]++ - 1;else ++i;\n    }\n\n    for (; i >= 0 && dt; --i) {\n      var i2_3 = t2[i].s;\n\n      if (tr[i2_3] == mb) {\n        --tr[i2_3];\n        ++dt;\n      }\n    }\n\n    mbt = mb;\n  }\n\n  return [new u8(tr), mbt];\n}; // get the max length and assign length codes\n\n\nvar ln = function (n, l, d) {\n  return n.s == -1 ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1)) : l[n.s] = d;\n}; // length codes generation\n\n\nvar lc = function (c) {\n  var s = c.length; // Note that the semicolon was intentional\n\n  while (s && !c[--s]);\n\n  var cl = new u16(++s); //  ind      num         streak\n\n  var cli = 0,\n      cln = c[0],\n      cls = 1;\n\n  var w = function (v) {\n    cl[cli++] = v;\n  };\n\n  for (var i = 1; i <= s; ++i) {\n    if (c[i] == cln && i != s) ++cls;else {\n      if (!cln && cls > 2) {\n        for (; cls > 138; cls -= 138) w(32754);\n\n        if (cls > 2) {\n          w(cls > 10 ? cls - 11 << 5 | 28690 : cls - 3 << 5 | 12305);\n          cls = 0;\n        }\n      } else if (cls > 3) {\n        w(cln), --cls;\n\n        for (; cls > 6; cls -= 6) w(8304);\n\n        if (cls > 2) w(cls - 3 << 5 | 8208), cls = 0;\n      }\n\n      while (cls--) w(cln);\n\n      cls = 1;\n      cln = c[i];\n    }\n  }\n\n  return [cl.subarray(0, cli), s];\n}; // calculate the length of output from tree, code lengths\n\n\nvar clen = function (cf, cl) {\n  var l = 0;\n\n  for (var i = 0; i < cl.length; ++i) l += cf[i] * cl[i];\n\n  return l;\n}; // writes a fixed block\n// returns the new bit pos\n\n\nvar wfblk = function (out, pos, dat) {\n  // no need to write 00 as type: TypedArray defaults to 0\n  var s = dat.length;\n  var o = shft(pos + 2);\n  out[o] = s & 255;\n  out[o + 1] = s >>> 8;\n  out[o + 2] = out[o] ^ 255;\n  out[o + 3] = out[o + 1] ^ 255;\n\n  for (var i = 0; i < s; ++i) out[o + i + 4] = dat[i];\n\n  return (o + 4 + s) * 8;\n}; // writes a block\n\n\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n  wbits(out, p++, final);\n  ++lf[256];\n\n  var _a = hTree(lf, 15),\n      dlt = _a[0],\n      mlb = _a[1];\n\n  var _b = hTree(df, 15),\n      ddt = _b[0],\n      mdb = _b[1];\n\n  var _c = lc(dlt),\n      lclt = _c[0],\n      nlc = _c[1];\n\n  var _d = lc(ddt),\n      lcdt = _d[0],\n      ndc = _d[1];\n\n  var lcfreq = new u16(19);\n\n  for (var i = 0; i < lclt.length; ++i) lcfreq[lclt[i] & 31]++;\n\n  for (var i = 0; i < lcdt.length; ++i) lcfreq[lcdt[i] & 31]++;\n\n  var _e = hTree(lcfreq, 7),\n      lct = _e[0],\n      mlcb = _e[1];\n\n  var nlcc = 19;\n\n  for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc);\n\n  var flen = bl + 5 << 3;\n  var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n  var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + (2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18]);\n  if (flen <= ftlen && flen <= dtlen) return wfblk(out, p, dat.subarray(bs, bs + bl));\n  var lm, ll, dm, dl;\n  wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n\n  if (dtlen < ftlen) {\n    lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n    var llm = hMap(lct, mlcb, 0);\n    wbits(out, p, nlc - 257);\n    wbits(out, p + 5, ndc - 1);\n    wbits(out, p + 10, nlcc - 4);\n    p += 14;\n\n    for (var i = 0; i < nlcc; ++i) wbits(out, p + 3 * i, lct[clim[i]]);\n\n    p += 3 * nlcc;\n    var lcts = [lclt, lcdt];\n\n    for (var it = 0; it < 2; ++it) {\n      var clct = lcts[it];\n\n      for (var i = 0; i < clct.length; ++i) {\n        var len = clct[i] & 31;\n        wbits(out, p, llm[len]), p += lct[len];\n        if (len > 15) wbits(out, p, clct[i] >>> 5 & 127), p += clct[i] >>> 12;\n      }\n    }\n  } else {\n    lm = flm, ll = flt, dm = fdm, dl = fdt;\n  }\n\n  for (var i = 0; i < li; ++i) {\n    if (syms[i] > 255) {\n      var len = syms[i] >>> 18 & 31;\n      wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n      if (len > 7) wbits(out, p, syms[i] >>> 23 & 31), p += fleb[len];\n      var dst = syms[i] & 31;\n      wbits16(out, p, dm[dst]), p += dl[dst];\n      if (dst > 3) wbits16(out, p, syms[i] >>> 5 & 8191), p += fdeb[dst];\n    } else {\n      wbits16(out, p, lm[syms[i]]), p += ll[syms[i]];\n    }\n  }\n\n  wbits16(out, p, lm[256]);\n  return p + ll[256];\n}; // deflate options (nice << 13) | chain\n\n\nvar deo = /*#__PURE__*/new u32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]); // empty\n\nvar et = /*#__PURE__*/new u8(0); // compresses data into a raw DEFLATE buffer\n\nvar dflt = function (dat, lvl, plvl, pre, post, lst) {\n  var s = dat.length;\n  var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post); // writing to this writes to the output buffer\n\n  var w = o.subarray(pre, o.length - post);\n  var pos = 0;\n\n  if (!lvl || s < 8) {\n    for (var i = 0; i <= s; i += 65535) {\n      // end\n      var e = i + 65535;\n\n      if (e >= s) {\n        // write final block\n        w[pos >> 3] = lst;\n      }\n\n      pos = wfblk(w, pos + 1, dat.subarray(i, e));\n    }\n  } else {\n    var opt = deo[lvl - 1];\n    var n = opt >>> 13,\n        c = opt & 8191;\n    var msk_1 = (1 << plvl) - 1; //    prev 2-byte val map    curr 2-byte val map\n\n    var prev = new u16(32768),\n        head = new u16(msk_1 + 1);\n    var bs1_1 = Math.ceil(plvl / 3),\n        bs2_1 = 2 * bs1_1;\n\n    var hsh = function (i) {\n      return (dat[i] ^ dat[i + 1] << bs1_1 ^ dat[i + 2] << bs2_1) & msk_1;\n    }; // 24576 is an arbitrary number of maximum symbols per block\n    // 424 buffer for last block\n\n\n    var syms = new u32(25000); // length/literal freq   distance freq\n\n    var lf = new u16(288),\n        df = new u16(32); //  l/lcnt  exbits  index  l/lind  waitdx  bitpos\n\n    var lc_1 = 0,\n        eb = 0,\n        i = 0,\n        li = 0,\n        wi = 0,\n        bs = 0;\n\n    for (; i < s; ++i) {\n      // hash value\n      // deopt when i > s - 3 - at end, deopt acceptable\n      var hv = hsh(i); // index mod 32768    previous index mod\n\n      var imod = i & 32767,\n          pimod = head[hv];\n      prev[imod] = pimod;\n      head[hv] = imod; // We always should modify head and prev, but only add symbols if\n      // this data is not yet processed (\"wait\" for wait index)\n\n      if (wi <= i) {\n        // bytes remaining\n        var rem = s - i;\n\n        if ((lc_1 > 7000 || li > 24576) && rem > 423) {\n          pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n          li = lc_1 = eb = 0, bs = i;\n\n          for (var j = 0; j < 286; ++j) lf[j] = 0;\n\n          for (var j = 0; j < 30; ++j) df[j] = 0;\n        } //  len    dist   chain\n\n\n        var l = 2,\n            d = 0,\n            ch_1 = c,\n            dif = imod - pimod & 32767;\n\n        if (rem > 2 && hv == hsh(i - dif)) {\n          var maxn = Math.min(n, rem) - 1;\n          var maxd = Math.min(32767, i); // max possible length\n          // not capped at dif because decompressors implement \"rolling\" index population\n\n          var ml = Math.min(258, rem);\n\n          while (dif <= maxd && --ch_1 && imod != pimod) {\n            if (dat[i + l] == dat[i + l - dif]) {\n              var nl = 0;\n\n              for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl);\n\n              if (nl > l) {\n                l = nl, d = dif; // break out early when we reach \"nice\" (we are satisfied enough)\n\n                if (nl > maxn) break; // now, find the rarest 2-byte sequence within this\n                // length of literals and search for that instead.\n                // Much faster than just using the start\n\n                var mmd = Math.min(dif, nl - 2);\n                var md = 0;\n\n                for (var j = 0; j < mmd; ++j) {\n                  var ti = i - dif + j + 32768 & 32767;\n                  var pti = prev[ti];\n                  var cd = ti - pti + 32768 & 32767;\n                  if (cd > md) md = cd, pimod = ti;\n                }\n              }\n            } // check the previous match\n\n\n            imod = pimod, pimod = prev[imod];\n            dif += imod - pimod + 32768 & 32767;\n          }\n        } // d will be nonzero only when a match was found\n\n\n        if (d) {\n          // store both dist and len data in one Uint32\n          // Make sure this is recognized as a len/dist with 28th bit (2^28)\n          syms[li++] = 268435456 | revfl[l] << 18 | revfd[d];\n          var lin = revfl[l] & 31,\n              din = revfd[d] & 31;\n          eb += fleb[lin] + fdeb[din];\n          ++lf[257 + lin];\n          ++df[din];\n          wi = i + l;\n          ++lc_1;\n        } else {\n          syms[li++] = dat[i];\n          ++lf[dat[i]];\n        }\n      }\n    }\n\n    pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos); // this is the easiest way to avoid needing to maintain state\n\n    if (!lst && pos & 7) pos = wfblk(w, pos + 1, et);\n  }\n\n  return slc(o, 0, pre + shft(pos) + post);\n}; // CRC32 table\n\n\nvar crct = /*#__PURE__*/function () {\n  var t = new Int32Array(256);\n\n  for (var i = 0; i < 256; ++i) {\n    var c = i,\n        k = 9;\n\n    while (--k) c = (c & 1 && -306674912) ^ c >>> 1;\n\n    t[i] = c;\n  }\n\n  return t;\n}(); // CRC32\n\n\nvar crc = function () {\n  var c = -1;\n  return {\n    p: function (d) {\n      // closures have awful performance\n      var cr = c;\n\n      for (var i = 0; i < d.length; ++i) cr = crct[cr & 255 ^ d[i]] ^ cr >>> 8;\n\n      c = cr;\n    },\n    d: function () {\n      return ~c;\n    }\n  };\n}; // Alder32\n\n\nvar adler = function () {\n  var a = 1,\n      b = 0;\n  return {\n    p: function (d) {\n      // closures have awful performance\n      var n = a,\n          m = b;\n      var l = d.length | 0;\n\n      for (var i = 0; i != l;) {\n        var e = Math.min(i + 2655, l);\n\n        for (; i < e; ++i) m += n += d[i];\n\n        n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n      }\n\n      a = n, b = m;\n    },\n    d: function () {\n      a %= 65521, b %= 65521;\n      return (a & 255) << 24 | a >>> 8 << 16 | (b & 255) << 8 | b >>> 8;\n    }\n  };\n};\n\n; // deflate with opts\n\nvar dopt = function (dat, opt, pre, post, st) {\n  return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : 12 + opt.mem, pre, post, !st);\n}; // Walmart object spread\n\n\nvar mrg = function (a, b) {\n  var o = {};\n\n  for (var k in a) o[k] = a[k];\n\n  for (var k in b) o[k] = b[k];\n\n  return o;\n}; // worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\n\n\nvar wcln = function (fn, fnStr, td) {\n  var dt = fn();\n  var st = fn.toString();\n  var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n\n  for (var i = 0; i < dt.length; ++i) {\n    var v = dt[i],\n        k = ks[i];\n\n    if (typeof v == 'function') {\n      fnStr += ';' + k + '=';\n      var st_1 = v.toString();\n\n      if (v.prototype) {\n        // for global objects\n        if (st_1.indexOf('[native code]') != -1) {\n          var spInd = st_1.indexOf(' ', 8) + 1;\n          fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n        } else {\n          fnStr += st_1;\n\n          for (var t in v.prototype) fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n        }\n      } else fnStr += st_1;\n    } else td[k] = v;\n  }\n\n  return [fnStr, td];\n};\n\nvar ch = []; // clone bufs\n\nvar cbfs = function (v) {\n  var tl = [];\n\n  for (var k in v) {\n    if (v[k].buffer) {\n      tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n    }\n  }\n\n  return tl;\n}; // use a worker to execute code\n\n\nvar wrkr = function (fns, init, id, cb) {\n  var _a;\n\n  if (!ch[id]) {\n    var fnStr = '',\n        td_1 = {},\n        m = fns.length - 1;\n\n    for (var i = 0; i < m; ++i) _a = wcln(fns[i], fnStr, td_1), fnStr = _a[0], td_1 = _a[1];\n\n    ch[id] = wcln(fns[m], fnStr, td_1);\n  }\n\n  var td = mrg({}, ch[id][1]);\n  return wk(ch[id][0] + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n}; // base async inflate fn\n\n\nvar bInflt = function () {\n  return [u8, u16, u32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gu8];\n};\n\nvar bDflt = function () {\n  return [u8, u16, u32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf];\n}; // gzip extra\n\n\nvar gze = function () {\n  return [gzh, gzhl, wbytes, crc, crct];\n}; // gunzip extra\n\n\nvar guze = function () {\n  return [gzs, gzl];\n}; // zlib extra\n\n\nvar zle = function () {\n  return [zlh, wbytes, adler];\n}; // unzlib extra\n\n\nvar zule = function () {\n  return [zlv];\n}; // post buf\n\n\nvar pbf = function (msg) {\n  return postMessage(msg, [msg.buffer]);\n}; // get u8\n\n\nvar gu8 = function (o) {\n  return o && o.size && new u8(o.size);\n}; // async helper\n\n\nvar cbify = function (dat, opts, fns, init, id, cb) {\n  var w = wrkr(fns, init, id, function (err, dat) {\n    w.terminate();\n    cb(err, dat);\n  });\n  w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n  return function () {\n    w.terminate();\n  };\n}; // auto stream\n\n\nvar astrm = function (strm) {\n  strm.ondata = function (dat, final) {\n    return postMessage([dat, final], [dat.buffer]);\n  };\n\n  return function (ev) {\n    return strm.push(ev.data[0], ev.data[1]);\n  };\n}; // async stream attach\n\n\nvar astrmify = function (fns, strm, opts, init, id) {\n  var t;\n  var w = wrkr(fns, init, id, function (err, dat) {\n    if (err) w.terminate(), strm.ondata.call(strm, err);else {\n      if (dat[1]) w.terminate();\n      strm.ondata.call(strm, err, dat[0], dat[1]);\n    }\n  });\n  w.postMessage(opts);\n\n  strm.push = function (d, f) {\n    if (!strm.ondata) err(5);\n    if (t) strm.ondata(err(4, 0, 1), null, !!f);\n    w.postMessage([d, t = f], [d.buffer]);\n  };\n\n  strm.terminate = function () {\n    w.terminate();\n  };\n}; // read 2 bytes\n\n\nvar b2 = function (d, b) {\n  return d[b] | d[b + 1] << 8;\n}; // read 4 bytes\n\n\nvar b4 = function (d, b) {\n  return (d[b] | d[b + 1] << 8 | d[b + 2] << 16 | d[b + 3] << 24) >>> 0;\n};\n\nvar b8 = function (d, b) {\n  return b4(d, b) + b4(d, b + 4) * 4294967296;\n}; // write bytes\n\n\nvar wbytes = function (d, b, v) {\n  for (; v; ++b) d[b] = v, v >>>= 8;\n}; // gzip header\n\n\nvar gzh = function (c, o) {\n  var fn = o.filename;\n  c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n\n  if (o.mtime != 0) wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n\n  if (fn) {\n    c[3] = 8;\n\n    for (var i = 0; i <= fn.length; ++i) c[i + 10] = fn.charCodeAt(i);\n  }\n}; // gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\n\n\nvar gzs = function (d) {\n  if (d[0] != 31 || d[1] != 139 || d[2] != 8) err(6, 'invalid gzip data');\n  var flg = d[3];\n  var st = 10;\n  if (flg & 4) st += d[10] | (d[11] << 8) + 2;\n\n  for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++]);\n\n  return st + (flg & 2);\n}; // gzip length\n\n\nvar gzl = function (d) {\n  var l = d.length;\n  return (d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16 | d[l - 1] << 24) >>> 0;\n}; // gzip header length\n\n\nvar gzhl = function (o) {\n  return 10 + (o.filename && o.filename.length + 1 || 0);\n}; // zlib header\n\n\nvar zlh = function (c, o) {\n  var lv = o.level,\n      fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n  c[0] = 120, c[1] = fl << 6 | (fl ? 32 - 2 * fl : 1);\n}; // zlib valid\n\n\nvar zlv = function (d) {\n  if ((d[0] & 15) != 8 || d[0] >>> 4 > 7 || (d[0] << 8 | d[1]) % 31) err(6, 'invalid zlib data');\n  if (d[1] & 32) err(6, 'invalid zlib data: preset dictionaries not supported');\n};\n\nfunction AsyncCmpStrm(opts, cb) {\n  if (!cb && typeof opts == 'function') cb = opts, opts = {};\n  this.ondata = cb;\n  return opts;\n} // zlib footer: -4 to -0 is Adler32\n\n/**\n * Streaming DEFLATE compression\n */\n\n\nvar Deflate = /*#__PURE__*/function () {\n  function Deflate(opts, cb) {\n    if (!cb && typeof opts == 'function') cb = opts, opts = {};\n    this.ondata = cb;\n    this.o = opts || {};\n  }\n\n  Deflate.prototype.p = function (c, f) {\n    this.ondata(dopt(c, this.o, 0, 0, !f), f);\n  };\n  /**\n   * Pushes a chunk to be deflated\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n\n\n  Deflate.prototype.push = function (chunk, final) {\n    if (!this.ondata) err(5);\n    if (this.d) err(4);\n    this.d = final;\n    this.p(chunk, final || false);\n  };\n\n  return Deflate;\n}();\n\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\n\nvar AsyncDeflate = /*#__PURE__*/function () {\n  function AsyncDeflate(opts, cb) {\n    astrmify([bDflt, function () {\n      return [astrm, Deflate];\n    }], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n      var strm = new Deflate(ev.data);\n      onmessage = astrm(strm);\n    }, 6);\n  }\n\n  return AsyncDeflate;\n}();\n\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n  if (!cb) cb = opts, opts = {};\n  if (typeof cb != 'function') err(7);\n  return cbify(data, opts, [bDflt], function (ev) {\n    return pbf(deflateSync(ev.data[0], ev.data[1]));\n  }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\n\nexport function deflateSync(data, opts) {\n  return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\n\nvar Inflate = /*#__PURE__*/function () {\n  /**\n   * Creates an inflation stream\n   * @param cb The callback to call whenever data is inflated\n   */\n  function Inflate(cb) {\n    this.s = {};\n    this.p = new u8(0);\n    this.ondata = cb;\n  }\n\n  Inflate.prototype.e = function (c) {\n    if (!this.ondata) err(5);\n    if (this.d) err(4);\n    var l = this.p.length;\n    var n = new u8(l + c.length);\n    n.set(this.p), n.set(c, l), this.p = n;\n  };\n\n  Inflate.prototype.c = function (final) {\n    this.d = this.s.i = final || false;\n    var bts = this.s.b;\n    var dt = inflt(this.p, this.o, this.s);\n    this.ondata(slc(dt, bts, this.s.b), this.d);\n    this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n    this.p = slc(this.p, this.s.p / 8 | 0), this.s.p &= 7;\n  };\n  /**\n   * Pushes a chunk to be inflated\n   * @param chunk The chunk to push\n   * @param final Whether this is the final chunk\n   */\n\n\n  Inflate.prototype.push = function (chunk, final) {\n    this.e(chunk), this.c(final);\n  };\n\n  return Inflate;\n}();\n\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\n\nvar AsyncInflate = /*#__PURE__*/function () {\n  /**\n   * Creates an asynchronous inflation stream\n   * @param cb The callback to call whenever data is deflated\n   */\n  function AsyncInflate(cb) {\n    this.ondata = cb;\n    astrmify([bInflt, function () {\n      return [astrm, Inflate];\n    }], this, 0, function () {\n      var strm = new Inflate();\n      onmessage = astrm(strm);\n    }, 7);\n  }\n\n  return AsyncInflate;\n}();\n\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n  if (!cb) cb = opts, opts = {};\n  if (typeof cb != 'function') err(7);\n  return cbify(data, opts, [bInflt], function (ev) {\n    return pbf(inflateSync(ev.data[0], gu8(ev.data[1])));\n  }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\n\nexport function inflateSync(data, out) {\n  return inflt(data, out);\n} // before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n\n/**\n * Streaming GZIP compression\n */\n\nvar Gzip = /*#__PURE__*/function () {\n  function Gzip(opts, cb) {\n    this.c = crc();\n    this.l = 0;\n    this.v = 1;\n    Deflate.call(this, opts, cb);\n  }\n  /**\n   * Pushes a chunk to be GZIPped\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n\n\n  Gzip.prototype.push = function (chunk, final) {\n    Deflate.prototype.push.call(this, chunk, final);\n  };\n\n  Gzip.prototype.p = function (c, f) {\n    this.c.p(c);\n    this.l += c.length;\n    var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, !f);\n    if (this.v) gzh(raw, this.o), this.v = 0;\n    if (f) wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n    this.ondata(raw, f);\n  };\n\n  return Gzip;\n}();\n\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\n\nvar AsyncGzip = /*#__PURE__*/function () {\n  function AsyncGzip(opts, cb) {\n    astrmify([bDflt, gze, function () {\n      return [astrm, Deflate, Gzip];\n    }], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n      var strm = new Gzip(ev.data);\n      onmessage = astrm(strm);\n    }, 8);\n  }\n\n  return AsyncGzip;\n}();\n\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n  if (!cb) cb = opts, opts = {};\n  if (typeof cb != 'function') err(7);\n  return cbify(data, opts, [bDflt, gze, function () {\n    return [gzipSync];\n  }], function (ev) {\n    return pbf(gzipSync(ev.data[0], ev.data[1]));\n  }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\n\nexport function gzipSync(data, opts) {\n  if (!opts) opts = {};\n  var c = crc(),\n      l = data.length;\n  c.p(data);\n  var d = dopt(data, opts, gzhl(opts), 8),\n      s = d.length;\n  return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming GZIP decompression\n */\n\nvar Gunzip = /*#__PURE__*/function () {\n  /**\n   * Creates a GUNZIP stream\n   * @param cb The callback to call whenever data is inflated\n   */\n  function Gunzip(cb) {\n    this.v = 1;\n    Inflate.call(this, cb);\n  }\n  /**\n   * Pushes a chunk to be GUNZIPped\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n\n\n  Gunzip.prototype.push = function (chunk, final) {\n    Inflate.prototype.e.call(this, chunk);\n\n    if (this.v) {\n      var s = this.p.length > 3 ? gzs(this.p) : 4;\n      if (s >= this.p.length && !final) return;\n      this.p = this.p.subarray(s), this.v = 0;\n    }\n\n    if (final) {\n      if (this.p.length < 8) err(6, 'invalid gzip data');\n      this.p = this.p.subarray(0, -8);\n    } // necessary to prevent TS from using the closure value\n    // This allows for workerization to function correctly\n\n\n    Inflate.prototype.c.call(this, final);\n  };\n\n  return Gunzip;\n}();\n\nexport { Gunzip };\n/**\n * Asynchronous streaming GZIP decompression\n */\n\nvar AsyncGunzip = /*#__PURE__*/function () {\n  /**\n   * Creates an asynchronous GUNZIP stream\n   * @param cb The callback to call whenever data is deflated\n   */\n  function AsyncGunzip(cb) {\n    this.ondata = cb;\n    astrmify([bInflt, guze, function () {\n      return [astrm, Inflate, Gunzip];\n    }], this, 0, function () {\n      var strm = new Gunzip();\n      onmessage = astrm(strm);\n    }, 9);\n  }\n\n  return AsyncGunzip;\n}();\n\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n  if (!cb) cb = opts, opts = {};\n  if (typeof cb != 'function') err(7);\n  return cbify(data, opts, [bInflt, guze, function () {\n    return [gunzipSync];\n  }], function (ev) {\n    return pbf(gunzipSync(ev.data[0]));\n  }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param out Where to write the data. GZIP already encodes the output size, so providing this doesn't save memory.\n * @returns The decompressed version of the data\n */\n\nexport function gunzipSync(data, out) {\n  return inflt(data.subarray(gzs(data), -8), out || new u8(gzl(data)));\n}\n/**\n * Streaming Zlib compression\n */\n\nvar Zlib = /*#__PURE__*/function () {\n  function Zlib(opts, cb) {\n    this.c = adler();\n    this.v = 1;\n    Deflate.call(this, opts, cb);\n  }\n  /**\n   * Pushes a chunk to be zlibbed\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n\n\n  Zlib.prototype.push = function (chunk, final) {\n    Deflate.prototype.push.call(this, chunk, final);\n  };\n\n  Zlib.prototype.p = function (c, f) {\n    this.c.p(c);\n    var raw = dopt(c, this.o, this.v && 2, f && 4, !f);\n    if (this.v) zlh(raw, this.o), this.v = 0;\n    if (f) wbytes(raw, raw.length - 4, this.c.d());\n    this.ondata(raw, f);\n  };\n\n  return Zlib;\n}();\n\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\n\nvar AsyncZlib = /*#__PURE__*/function () {\n  function AsyncZlib(opts, cb) {\n    astrmify([bDflt, zle, function () {\n      return [astrm, Deflate, Zlib];\n    }], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n      var strm = new Zlib(ev.data);\n      onmessage = astrm(strm);\n    }, 10);\n  }\n\n  return AsyncZlib;\n}();\n\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n  if (!cb) cb = opts, opts = {};\n  if (typeof cb != 'function') err(7);\n  return cbify(data, opts, [bDflt, zle, function () {\n    return [zlibSync];\n  }], function (ev) {\n    return pbf(zlibSync(ev.data[0], ev.data[1]));\n  }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\n\nexport function zlibSync(data, opts) {\n  if (!opts) opts = {};\n  var a = adler();\n  a.p(data);\n  var d = dopt(data, opts, 2, 4);\n  return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\n\nvar Unzlib = /*#__PURE__*/function () {\n  /**\n   * Creates a Zlib decompression stream\n   * @param cb The callback to call whenever data is inflated\n   */\n  function Unzlib(cb) {\n    this.v = 1;\n    Inflate.call(this, cb);\n  }\n  /**\n   * Pushes a chunk to be unzlibbed\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n\n\n  Unzlib.prototype.push = function (chunk, final) {\n    Inflate.prototype.e.call(this, chunk);\n\n    if (this.v) {\n      if (this.p.length < 2 && !final) return;\n      this.p = this.p.subarray(2), this.v = 0;\n    }\n\n    if (final) {\n      if (this.p.length < 4) err(6, 'invalid zlib data');\n      this.p = this.p.subarray(0, -4);\n    } // necessary to prevent TS from using the closure value\n    // This allows for workerization to function correctly\n\n\n    Inflate.prototype.c.call(this, final);\n  };\n\n  return Unzlib;\n}();\n\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\n\nvar AsyncUnzlib = /*#__PURE__*/function () {\n  /**\n   * Creates an asynchronous Zlib decompression stream\n   * @param cb The callback to call whenever data is deflated\n   */\n  function AsyncUnzlib(cb) {\n    this.ondata = cb;\n    astrmify([bInflt, zule, function () {\n      return [astrm, Inflate, Unzlib];\n    }], this, 0, function () {\n      var strm = new Unzlib();\n      onmessage = astrm(strm);\n    }, 11);\n  }\n\n  return AsyncUnzlib;\n}();\n\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n  if (!cb) cb = opts, opts = {};\n  if (typeof cb != 'function') err(7);\n  return cbify(data, opts, [bInflt, zule, function () {\n    return [unzlibSync];\n  }], function (ev) {\n    return pbf(unzlibSync(ev.data[0], gu8(ev.data[1])));\n  }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\n\nexport function unzlibSync(data, out) {\n  return inflt((zlv(data), data.subarray(2, -4)), out);\n} // Default algorithm for compression (used because having a known output size allows faster decompression)\n\nexport { gzip as compress, AsyncGzip as AsyncCompress }; // Default algorithm for compression (used because having a known output size allows faster decompression)\n\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\n\nvar Decompress = /*#__PURE__*/function () {\n  /**\n   * Creates a decompression stream\n   * @param cb The callback to call whenever data is decompressed\n   */\n  function Decompress(cb) {\n    this.G = Gunzip;\n    this.I = Inflate;\n    this.Z = Unzlib;\n    this.ondata = cb;\n  }\n  /**\n   * Pushes a chunk to be decompressed\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n\n\n  Decompress.prototype.push = function (chunk, final) {\n    if (!this.ondata) err(5);\n\n    if (!this.s) {\n      if (this.p && this.p.length) {\n        var n = new u8(this.p.length + chunk.length);\n        n.set(this.p), n.set(chunk, this.p.length);\n      } else this.p = chunk;\n\n      if (this.p.length > 2) {\n        var _this_1 = this;\n\n        var cb = function () {\n          _this_1.ondata.apply(_this_1, arguments);\n        };\n\n        this.s = this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8 ? new this.G(cb) : (this.p[0] & 15) != 8 || this.p[0] >> 4 > 7 || (this.p[0] << 8 | this.p[1]) % 31 ? new this.I(cb) : new this.Z(cb);\n        this.s.push(this.p, final);\n        this.p = null;\n      }\n    } else this.s.push(chunk, final);\n  };\n\n  return Decompress;\n}();\n\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\n\nvar AsyncDecompress = /*#__PURE__*/function () {\n  /**\n  * Creates an asynchronous decompression stream\n  * @param cb The callback to call whenever data is decompressed\n  */\n  function AsyncDecompress(cb) {\n    this.G = AsyncGunzip;\n    this.I = AsyncInflate;\n    this.Z = AsyncUnzlib;\n    this.ondata = cb;\n  }\n  /**\n   * Pushes a chunk to be decompressed\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n\n\n  AsyncDecompress.prototype.push = function (chunk, final) {\n    Decompress.prototype.push.call(this, chunk, final);\n  };\n\n  return AsyncDecompress;\n}();\n\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n  if (!cb) cb = opts, opts = {};\n  if (typeof cb != 'function') err(7);\n  return data[0] == 31 && data[1] == 139 && data[2] == 8 ? gunzip(data, opts, cb) : (data[0] & 15) != 8 || data[0] >> 4 > 7 || (data[0] << 8 | data[1]) % 31 ? inflate(data, opts, cb) : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\n\nexport function decompressSync(data, out) {\n  return data[0] == 31 && data[1] == 139 && data[2] == 8 ? gunzipSync(data, out) : (data[0] & 15) != 8 || data[0] >> 4 > 7 || (data[0] << 8 | data[1]) % 31 ? inflateSync(data, out) : unzlibSync(data, out);\n} // flatten a directory structure\n\nvar fltn = function (d, p, t, o) {\n  for (var k in d) {\n    var val = d[k],\n        n = p + k,\n        op = o;\n    if (Array.isArray(val)) op = mrg(o, val[1]), val = val[0];\n    if (val instanceof u8) t[n] = [val, op];else {\n      t[n += '/'] = [new u8(0), op];\n      fltn(val, n, t, o);\n    }\n  }\n}; // text encoder\n\n\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/new TextEncoder(); // text decoder\n\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/new TextDecoder(); // text decoder stream\n\nvar tds = 0;\n\ntry {\n  td.decode(et, {\n    stream: true\n  });\n  tds = 1;\n} catch (e) {} // decode UTF8\n\n\nvar dutf8 = function (d) {\n  for (var r = '', i = 0;;) {\n    var c = d[i++];\n    var eb = (c > 127) + (c > 223) + (c > 239);\n    if (i + eb > d.length) return [r, slc(d, i - 1)];\n    if (!eb) r += String.fromCharCode(c);else if (eb == 3) {\n      c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | d[i++] & 63) - 65536, r += String.fromCharCode(55296 | c >> 10, 56320 | c & 1023);\n    } else if (eb & 1) r += String.fromCharCode((c & 31) << 6 | d[i++] & 63);else r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | d[i++] & 63);\n  }\n};\n/**\n * Streaming UTF-8 decoding\n */\n\n\nvar DecodeUTF8 = /*#__PURE__*/function () {\n  /**\n   * Creates a UTF-8 decoding stream\n   * @param cb The callback to call whenever data is decoded\n   */\n  function DecodeUTF8(cb) {\n    this.ondata = cb;\n    if (tds) this.t = new TextDecoder();else this.p = et;\n  }\n  /**\n   * Pushes a chunk to be decoded from UTF-8 binary\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n\n\n  DecodeUTF8.prototype.push = function (chunk, final) {\n    if (!this.ondata) err(5);\n    final = !!final;\n\n    if (this.t) {\n      this.ondata(this.t.decode(chunk, {\n        stream: true\n      }), final);\n\n      if (final) {\n        if (this.t.decode().length) err(8);\n        this.t = null;\n      }\n\n      return;\n    }\n\n    if (!this.p) err(4);\n    var dat = new u8(this.p.length + chunk.length);\n    dat.set(this.p);\n    dat.set(chunk, this.p.length);\n\n    var _a = dutf8(dat),\n        ch = _a[0],\n        np = _a[1];\n\n    if (final) {\n      if (np.length) err(8);\n      this.p = null;\n    } else this.p = np;\n\n    this.ondata(ch, final);\n  };\n\n  return DecodeUTF8;\n}();\n\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\n\nvar EncodeUTF8 = /*#__PURE__*/function () {\n  /**\n   * Creates a UTF-8 decoding stream\n   * @param cb The callback to call whenever data is encoded\n   */\n  function EncodeUTF8(cb) {\n    this.ondata = cb;\n  }\n  /**\n   * Pushes a chunk to be encoded to UTF-8\n   * @param chunk The string data to push\n   * @param final Whether this is the last chunk\n   */\n\n\n  EncodeUTF8.prototype.push = function (chunk, final) {\n    if (!this.ondata) err(5);\n    if (this.d) err(4);\n    this.ondata(strToU8(chunk), this.d = final || false);\n  };\n\n  return EncodeUTF8;\n}();\n\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\n\nexport function strToU8(str, latin1) {\n  if (latin1) {\n    var ar_1 = new u8(str.length);\n\n    for (var i = 0; i < str.length; ++i) ar_1[i] = str.charCodeAt(i);\n\n    return ar_1;\n  }\n\n  if (te) return te.encode(str);\n  var l = str.length;\n  var ar = new u8(str.length + (str.length >> 1));\n  var ai = 0;\n\n  var w = function (v) {\n    ar[ai++] = v;\n  };\n\n  for (var i = 0; i < l; ++i) {\n    if (ai + 5 > ar.length) {\n      var n = new u8(ai + 8 + (l - i << 1));\n      n.set(ar);\n      ar = n;\n    }\n\n    var c = str.charCodeAt(i);\n    if (c < 128 || latin1) w(c);else if (c < 2048) w(192 | c >> 6), w(128 | c & 63);else if (c > 55295 && c < 57344) c = 65536 + (c & 1023 << 10) | str.charCodeAt(++i) & 1023, w(240 | c >> 18), w(128 | c >> 12 & 63), w(128 | c >> 6 & 63), w(128 | c & 63);else w(224 | c >> 12), w(128 | c >> 6 & 63), w(128 | c & 63);\n  }\n\n  return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\n\nexport function strFromU8(dat, latin1) {\n  if (latin1) {\n    var r = '';\n\n    for (var i = 0; i < dat.length; i += 16384) r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n\n    return r;\n  } else if (td) return td.decode(dat);else {\n    var _a = dutf8(dat),\n        out = _a[0],\n        ext = _a[1];\n\n    if (ext.length) err(8);\n    return out;\n  }\n}\n; // deflate bit flag\n\nvar dbf = function (l) {\n  return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0;\n}; // skip local zip header\n\n\nvar slzh = function (d, b) {\n  return b + 30 + b2(d, b + 26) + b2(d, b + 28);\n}; // read zip header\n\n\nvar zh = function (d, b, z) {\n  var fnl = b2(d, b + 28),\n      fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)),\n      es = b + 46 + fnl,\n      bs = b4(d, b + 20);\n\n  var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)],\n      sc = _a[0],\n      su = _a[1],\n      off = _a[2];\n\n  return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n}; // read zip64 extra field\n\n\nvar z64e = function (d, b) {\n  for (; b2(d, b) != 1; b += 4 + b2(d, b + 2));\n\n  return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n}; // extra field length\n\n\nvar exfl = function (ex) {\n  var le = 0;\n\n  if (ex) {\n    for (var k in ex) {\n      var l = ex[k].length;\n      if (l > 65535) err(9);\n      le += l + 4;\n    }\n  }\n\n  return le;\n}; // write zip header\n\n\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n  var fl = fn.length,\n      ex = f.extra,\n      col = co && co.length;\n  var exl = exfl(ex);\n  wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n  if (ce != null) d[b++] = 20, d[b++] = f.os;\n  d[b] = 20, b += 2; // spec compliance? what's that?\n\n  d[b++] = f.flag << 1 | (c == null && 8), d[b++] = u && 8;\n  d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n  var dt = new Date(f.mtime == null ? Date.now() : f.mtime),\n      y = dt.getFullYear() - 1980;\n  if (y < 0 || y > 119) err(10);\n  wbytes(d, b, y << 25 | dt.getMonth() + 1 << 21 | dt.getDate() << 16 | dt.getHours() << 11 | dt.getMinutes() << 5 | dt.getSeconds() >>> 1), b += 4;\n\n  if (c != null) {\n    wbytes(d, b, f.crc);\n    wbytes(d, b + 4, c);\n    wbytes(d, b + 8, f.size);\n  }\n\n  wbytes(d, b + 12, fl);\n  wbytes(d, b + 14, exl), b += 16;\n\n  if (ce != null) {\n    wbytes(d, b, col);\n    wbytes(d, b + 6, f.attrs);\n    wbytes(d, b + 10, ce), b += 14;\n  }\n\n  d.set(fn, b);\n  b += fl;\n\n  if (exl) {\n    for (var k in ex) {\n      var exf = ex[k],\n          l = exf.length;\n      wbytes(d, b, +k);\n      wbytes(d, b + 2, l);\n      d.set(exf, b + 4), b += 4 + l;\n    }\n  }\n\n  if (col) d.set(co, b), b += col;\n  return b;\n}; // write zip footer (end of central directory)\n\n\nvar wzf = function (o, b, c, d, e) {\n  wbytes(o, b, 0x6054B50); // skip disk\n\n  wbytes(o, b + 8, c);\n  wbytes(o, b + 10, c);\n  wbytes(o, b + 12, d);\n  wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\n\n\nvar ZipPassThrough = /*#__PURE__*/function () {\n  /**\n   * Creates a pass-through stream that can be added to ZIP archives\n   * @param filename The filename to associate with this data stream\n   */\n  function ZipPassThrough(filename) {\n    this.filename = filename;\n    this.c = crc();\n    this.size = 0;\n    this.compression = 0;\n  }\n  /**\n   * Processes a chunk and pushes to the output stream. You can override this\n   * method in a subclass for custom behavior, but by default this passes\n   * the data through. You must call this.ondata(err, chunk, final) at some\n   * point in this method.\n   * @param chunk The chunk to process\n   * @param final Whether this is the last chunk\n   */\n\n\n  ZipPassThrough.prototype.process = function (chunk, final) {\n    this.ondata(null, chunk, final);\n  };\n  /**\n   * Pushes a chunk to be added. If you are subclassing this with a custom\n   * compression algorithm, note that you must push data from the source\n   * file only, pre-compression.\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n\n\n  ZipPassThrough.prototype.push = function (chunk, final) {\n    if (!this.ondata) err(5);\n    this.c.p(chunk);\n    this.size += chunk.length;\n    if (final) this.crc = this.c.d();\n    this.process(chunk, final || false);\n  };\n\n  return ZipPassThrough;\n}();\n\nexport { ZipPassThrough }; // I don't extend because TypeScript extension adds 1kB of runtime bloat\n\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\n\nvar ZipDeflate = /*#__PURE__*/function () {\n  /**\n   * Creates a DEFLATE stream that can be added to ZIP archives\n   * @param filename The filename to associate with this data stream\n   * @param opts The compression options\n   */\n  function ZipDeflate(filename, opts) {\n    var _this_1 = this;\n\n    if (!opts) opts = {};\n    ZipPassThrough.call(this, filename);\n    this.d = new Deflate(opts, function (dat, final) {\n      _this_1.ondata(null, dat, final);\n    });\n    this.compression = 8;\n    this.flag = dbf(opts.level);\n  }\n\n  ZipDeflate.prototype.process = function (chunk, final) {\n    try {\n      this.d.push(chunk, final);\n    } catch (e) {\n      this.ondata(e, null, final);\n    }\n  };\n  /**\n   * Pushes a chunk to be deflated\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n\n\n  ZipDeflate.prototype.push = function (chunk, final) {\n    ZipPassThrough.prototype.push.call(this, chunk, final);\n  };\n\n  return ZipDeflate;\n}();\n\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\n\nvar AsyncZipDeflate = /*#__PURE__*/function () {\n  /**\n   * Creates a DEFLATE stream that can be added to ZIP archives\n   * @param filename The filename to associate with this data stream\n   * @param opts The compression options\n   */\n  function AsyncZipDeflate(filename, opts) {\n    var _this_1 = this;\n\n    if (!opts) opts = {};\n    ZipPassThrough.call(this, filename);\n    this.d = new AsyncDeflate(opts, function (err, dat, final) {\n      _this_1.ondata(err, dat, final);\n    });\n    this.compression = 8;\n    this.flag = dbf(opts.level);\n    this.terminate = this.d.terminate;\n  }\n\n  AsyncZipDeflate.prototype.process = function (chunk, final) {\n    this.d.push(chunk, final);\n  };\n  /**\n   * Pushes a chunk to be deflated\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n\n\n  AsyncZipDeflate.prototype.push = function (chunk, final) {\n    ZipPassThrough.prototype.push.call(this, chunk, final);\n  };\n\n  return AsyncZipDeflate;\n}();\n\nexport { AsyncZipDeflate }; // TODO: Better tree shaking\n\n/**\n * A zippable archive to which files can incrementally be added\n */\n\nvar Zip = /*#__PURE__*/function () {\n  /**\n   * Creates an empty ZIP archive to which files can be added\n   * @param cb The callback to call whenever data for the generated ZIP archive\n   *           is available\n   */\n  function Zip(cb) {\n    this.ondata = cb;\n    this.u = [];\n    this.d = 1;\n  }\n  /**\n   * Adds a file to the ZIP archive\n   * @param file The file stream to add\n   */\n\n\n  Zip.prototype.add = function (file) {\n    var _this_1 = this;\n\n    if (!this.ondata) err(5); // finishing or finished\n\n    if (this.d & 2) this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);else {\n      var f = strToU8(file.filename),\n          fl_1 = f.length;\n      var com = file.comment,\n          o = com && strToU8(com);\n      var u = fl_1 != file.filename.length || o && com.length != o.length;\n      var hl_1 = fl_1 + exfl(file.extra) + 30;\n      if (fl_1 > 65535) this.ondata(err(11, 0, 1), null, false);\n      var header = new u8(hl_1);\n      wzh(header, 0, file, f, u);\n      var chks_1 = [header];\n\n      var pAll_1 = function () {\n        for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n          var chk = chks_2[_i];\n\n          _this_1.ondata(null, chk, false);\n        }\n\n        chks_1 = [];\n      };\n\n      var tr_1 = this.d;\n      this.d = 0;\n      var ind_1 = this.u.length;\n      var uf_1 = mrg(file, {\n        f: f,\n        u: u,\n        o: o,\n        t: function () {\n          if (file.terminate) file.terminate();\n        },\n        r: function () {\n          pAll_1();\n\n          if (tr_1) {\n            var nxt = _this_1.u[ind_1 + 1];\n            if (nxt) nxt.r();else _this_1.d = 1;\n          }\n\n          tr_1 = 1;\n        }\n      });\n      var cl_1 = 0;\n\n      file.ondata = function (err, dat, final) {\n        if (err) {\n          _this_1.ondata(err, dat, final);\n\n          _this_1.terminate();\n        } else {\n          cl_1 += dat.length;\n          chks_1.push(dat);\n\n          if (final) {\n            var dd = new u8(16);\n            wbytes(dd, 0, 0x8074B50);\n            wbytes(dd, 4, file.crc);\n            wbytes(dd, 8, cl_1);\n            wbytes(dd, 12, file.size);\n            chks_1.push(dd);\n            uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n            if (tr_1) uf_1.r();\n            tr_1 = 1;\n          } else if (tr_1) pAll_1();\n        }\n      };\n\n      this.u.push(uf_1);\n    }\n  };\n  /**\n   * Ends the process of adding files and prepares to emit the final chunks.\n   * This *must* be called after adding all desired files for the resulting\n   * ZIP file to work properly.\n   */\n\n\n  Zip.prototype.end = function () {\n    var _this_1 = this;\n\n    if (this.d & 2) {\n      this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n      return;\n    }\n\n    if (this.d) this.e();else this.u.push({\n      r: function () {\n        if (!(_this_1.d & 1)) return;\n\n        _this_1.u.splice(-1, 1);\n\n        _this_1.e();\n      },\n      t: function () {}\n    });\n    this.d = 3;\n  };\n\n  Zip.prototype.e = function () {\n    var bt = 0,\n        l = 0,\n        tl = 0;\n\n    for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n      var f = _a[_i];\n      tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n    }\n\n    var out = new u8(tl + 22);\n\n    for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n      var f = _c[_b];\n      wzh(out, bt, f, f.f, f.u, f.c, l, f.o);\n      bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n    }\n\n    wzf(out, bt, this.u.length, tl, l);\n    this.ondata(null, out, true);\n    this.d = 2;\n  };\n  /**\n   * A method to terminate any internal workers used by the stream. Subsequent\n   * calls to add() will fail.\n   */\n\n\n  Zip.prototype.terminate = function () {\n    for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n      var f = _a[_i];\n      f.t();\n    }\n\n    this.d = 2;\n  };\n\n  return Zip;\n}();\n\nexport { Zip };\nexport function zip(data, opts, cb) {\n  if (!cb) cb = opts, opts = {};\n  if (typeof cb != 'function') err(7);\n  var r = {};\n  fltn(data, '', r, opts);\n  var k = Object.keys(r);\n  var lft = k.length,\n      o = 0,\n      tot = 0;\n  var slft = lft,\n      files = new Array(lft);\n  var term = [];\n\n  var tAll = function () {\n    for (var i = 0; i < term.length; ++i) term[i]();\n  };\n\n  var cbd = function (a, b) {\n    mt(function () {\n      cb(a, b);\n    });\n  };\n\n  mt(function () {\n    cbd = cb;\n  });\n\n  var cbf = function () {\n    var out = new u8(tot + 22),\n        oe = o,\n        cdl = tot - o;\n    tot = 0;\n\n    for (var i = 0; i < slft; ++i) {\n      var f = files[i];\n\n      try {\n        var l = f.c.length;\n        wzh(out, tot, f, f.f, f.u, l);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        var loc = tot + badd;\n        out.set(f.c, loc);\n        wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n      } catch (e) {\n        return cbd(e, null);\n      }\n    }\n\n    wzf(out, o, files.length, cdl, oe);\n    cbd(null, out);\n  };\n\n  if (!lft) cbf();\n\n  var _loop_1 = function (i) {\n    var fn = k[i];\n    var _a = r[fn],\n        file = _a[0],\n        p = _a[1];\n    var c = crc(),\n        size = file.length;\n    c.p(file);\n    var f = strToU8(fn),\n        s = f.length;\n    var com = p.comment,\n        m = com && strToU8(com),\n        ms = m && m.length;\n    var exl = exfl(p.extra);\n    var compression = p.level == 0 ? 0 : 8;\n\n    var cbl = function (e, d) {\n      if (e) {\n        tAll();\n        cbd(e, null);\n      } else {\n        var l = d.length;\n        files[i] = mrg(p, {\n          size: size,\n          crc: c.d(),\n          c: d,\n          f: f,\n          m: m,\n          u: s != fn.length || m && com.length != ms,\n          compression: compression\n        });\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n        if (! --lft) cbf();\n      }\n    };\n\n    if (s > 65535) cbl(err(11, 0, 1), null);\n    if (!compression) cbl(null, file);else if (size < 160000) {\n      try {\n        cbl(null, deflateSync(file, p));\n      } catch (e) {\n        cbl(e, null);\n      }\n    } else term.push(deflate(file, p, cbl));\n  }; // Cannot use lft because it can decrease\n\n\n  for (var i = 0; i < slft; ++i) {\n    _loop_1(i);\n  }\n\n  return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\n\nexport function zipSync(data, opts) {\n  if (!opts) opts = {};\n  var r = {};\n  var files = [];\n  fltn(data, '', r, opts);\n  var o = 0;\n  var tot = 0;\n\n  for (var fn in r) {\n    var _a = r[fn],\n        file = _a[0],\n        p = _a[1];\n    var compression = p.level == 0 ? 0 : 8;\n    var f = strToU8(fn),\n        s = f.length;\n    var com = p.comment,\n        m = com && strToU8(com),\n        ms = m && m.length;\n    var exl = exfl(p.extra);\n    if (s > 65535) err(11);\n    var d = compression ? deflateSync(file, p) : file,\n        l = d.length;\n    var c = crc();\n    c.p(file);\n    files.push(mrg(p, {\n      size: file.length,\n      crc: c.d(),\n      c: d,\n      f: f,\n      m: m,\n      u: s != fn.length || m && com.length != ms,\n      o: o,\n      compression: compression\n    }));\n    o += 30 + s + exl + l;\n    tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n  }\n\n  var out = new u8(tot + 22),\n      oe = o,\n      cdl = tot - o;\n\n  for (var i = 0; i < files.length; ++i) {\n    var f = files[i];\n    wzh(out, f.o, f, f.f, f.u, f.c.length);\n    var badd = 30 + f.f.length + exfl(f.extra);\n    out.set(f.c, f.o + badd);\n    wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n  }\n\n  wzf(out, o, files.length, cdl, oe);\n  return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\n\nvar UnzipPassThrough = /*#__PURE__*/function () {\n  function UnzipPassThrough() {}\n\n  UnzipPassThrough.prototype.push = function (data, final) {\n    this.ondata(null, data, final);\n  };\n\n  UnzipPassThrough.compression = 0;\n  return UnzipPassThrough;\n}();\n\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\n\nvar UnzipInflate = /*#__PURE__*/function () {\n  /**\n   * Creates a DEFLATE decompression that can be used in ZIP archives\n   */\n  function UnzipInflate() {\n    var _this_1 = this;\n\n    this.i = new Inflate(function (dat, final) {\n      _this_1.ondata(null, dat, final);\n    });\n  }\n\n  UnzipInflate.prototype.push = function (data, final) {\n    try {\n      this.i.push(data, final);\n    } catch (e) {\n      this.ondata(e, null, final);\n    }\n  };\n\n  UnzipInflate.compression = 8;\n  return UnzipInflate;\n}();\n\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\n\nvar AsyncUnzipInflate = /*#__PURE__*/function () {\n  /**\n   * Creates a DEFLATE decompression that can be used in ZIP archives\n   */\n  function AsyncUnzipInflate(_, sz) {\n    var _this_1 = this;\n\n    if (sz < 320000) {\n      this.i = new Inflate(function (dat, final) {\n        _this_1.ondata(null, dat, final);\n      });\n    } else {\n      this.i = new AsyncInflate(function (err, dat, final) {\n        _this_1.ondata(err, dat, final);\n      });\n      this.terminate = this.i.terminate;\n    }\n  }\n\n  AsyncUnzipInflate.prototype.push = function (data, final) {\n    if (this.i.terminate) data = slc(data, 0);\n    this.i.push(data, final);\n  };\n\n  AsyncUnzipInflate.compression = 8;\n  return AsyncUnzipInflate;\n}();\n\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\n\nvar Unzip = /*#__PURE__*/function () {\n  /**\n   * Creates a ZIP decompression stream\n   * @param cb The callback to call whenever a file in the ZIP archive is found\n   */\n  function Unzip(cb) {\n    this.onfile = cb;\n    this.k = [];\n    this.o = {\n      0: UnzipPassThrough\n    };\n    this.p = et;\n  }\n  /**\n   * Pushes a chunk to be unzipped\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n\n\n  Unzip.prototype.push = function (chunk, final) {\n    var _this_1 = this;\n\n    if (!this.onfile) err(5);\n    if (!this.p) err(4);\n\n    if (this.c > 0) {\n      var len = Math.min(this.c, chunk.length);\n      var toAdd = chunk.subarray(0, len);\n      this.c -= len;\n      if (this.d) this.d.push(toAdd, !this.c);else this.k[0].push(toAdd);\n      chunk = chunk.subarray(len);\n      if (chunk.length) return this.push(chunk, final);\n    } else {\n      var f = 0,\n          i = 0,\n          is = void 0,\n          buf = void 0;\n      if (!this.p.length) buf = chunk;else if (!chunk.length) buf = this.p;else {\n        buf = new u8(this.p.length + chunk.length);\n        buf.set(this.p), buf.set(chunk, this.p.length);\n      }\n      var l = buf.length,\n          oc = this.c,\n          add = oc && this.d;\n\n      var _loop_2 = function () {\n        var _a;\n\n        var sig = b4(buf, i);\n\n        if (sig == 0x4034B50) {\n          f = 1, is = i;\n          this_1.d = null;\n          this_1.c = 0;\n          var bf = b2(buf, i + 6),\n              cmp_1 = b2(buf, i + 8),\n              u = bf & 2048,\n              dd = bf & 8,\n              fnl = b2(buf, i + 26),\n              es = b2(buf, i + 28);\n\n          if (l > i + 30 + fnl + es) {\n            var chks_3 = [];\n            this_1.k.unshift(chks_3);\n            f = 2;\n            var sc_1 = b4(buf, i + 18),\n                su_1 = b4(buf, i + 22);\n            var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n\n            if (sc_1 == 4294967295) {\n              _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n            } else if (dd) sc_1 = -1;\n\n            i += es;\n            this_1.c = sc_1;\n            var d_1;\n            var file_1 = {\n              name: fn_1,\n              compression: cmp_1,\n              start: function () {\n                if (!file_1.ondata) err(5);\n                if (!sc_1) file_1.ondata(null, et, true);else {\n                  var ctr = _this_1.o[cmp_1];\n                  if (!ctr) file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                  d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n\n                  d_1.ondata = function (err, dat, final) {\n                    file_1.ondata(err, dat, final);\n                  };\n\n                  for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                    var dat = chks_4[_i];\n                    d_1.push(dat, false);\n                  }\n\n                  if (_this_1.k[0] == chks_3 && _this_1.c) _this_1.d = d_1;else d_1.push(et, true);\n                }\n              },\n              terminate: function () {\n                if (d_1 && d_1.terminate) d_1.terminate();\n              }\n            };\n            if (sc_1 >= 0) file_1.size = sc_1, file_1.originalSize = su_1;\n            this_1.onfile(file_1);\n          }\n\n          return \"break\";\n        } else if (oc) {\n          if (sig == 0x8074B50) {\n            is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n            return \"break\";\n          } else if (sig == 0x2014B50) {\n            is = i -= 4, f = 3, this_1.c = 0;\n            return \"break\";\n          }\n        }\n      };\n\n      var this_1 = this;\n\n      for (; i < l - 4; ++i) {\n        var state_1 = _loop_2();\n\n        if (state_1 === \"break\") break;\n      }\n\n      this.p = et;\n\n      if (oc < 0) {\n        var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n        if (add) add.push(dat, !!f);else this.k[+(f == 2)].push(dat);\n      }\n\n      if (f & 2) return this.push(buf.subarray(i), final);\n      this.p = buf.subarray(i);\n    }\n\n    if (final) {\n      if (this.c) err(13);\n      this.p = null;\n    }\n  };\n  /**\n   * Registers a decoder with the stream, allowing for files compressed with\n   * the compression type provided to be expanded correctly\n   * @param decoder The decoder constructor\n   */\n\n\n  Unzip.prototype.register = function (decoder) {\n    this.o[decoder.compression] = decoder;\n  };\n\n  return Unzip;\n}();\n\nexport { Unzip };\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) {\n  fn();\n};\nexport function unzip(data, opts, cb) {\n  if (!cb) cb = opts, opts = {};\n  if (typeof cb != 'function') err(7);\n  var term = [];\n\n  var tAll = function () {\n    for (var i = 0; i < term.length; ++i) term[i]();\n  };\n\n  var files = {};\n\n  var cbd = function (a, b) {\n    mt(function () {\n      cb(a, b);\n    });\n  };\n\n  mt(function () {\n    cbd = cb;\n  });\n  var e = data.length - 22;\n\n  for (; b4(data, e) != 0x6054B50; --e) {\n    if (!e || data.length - e > 65558) {\n      cbd(err(13, 0, 1), null);\n      return tAll;\n    }\n  }\n\n  ;\n  var lft = b2(data, e + 8);\n\n  if (lft) {\n    var c = lft;\n    var o = b4(data, e + 16);\n    var z = o == 4294967295;\n\n    if (z) {\n      e = b4(data, e - 12);\n\n      if (b4(data, e) != 0x6064B50) {\n        cbd(err(13, 0, 1), null);\n        return tAll;\n      }\n\n      c = lft = b4(data, e + 32);\n      o = b4(data, e + 48);\n    }\n\n    var fltr = opts && opts.filter;\n\n    var _loop_3 = function (i) {\n      var _a = zh(data, o, z),\n          c_1 = _a[0],\n          sc = _a[1],\n          su = _a[2],\n          fn = _a[3],\n          no = _a[4],\n          off = _a[5],\n          b = slzh(data, off);\n\n      o = no;\n\n      var cbl = function (e, d) {\n        if (e) {\n          tAll();\n          cbd(e, null);\n        } else {\n          if (d) files[fn] = d;\n          if (! --lft) cbd(null, files);\n        }\n      };\n\n      if (!fltr || fltr({\n        name: fn,\n        size: sc,\n        originalSize: su,\n        compression: c_1\n      })) {\n        if (!c_1) cbl(null, slc(data, b, b + sc));else if (c_1 == 8) {\n          var infl = data.subarray(b, b + sc);\n\n          if (sc < 320000) {\n            try {\n              cbl(null, inflateSync(infl, new u8(su)));\n            } catch (e) {\n              cbl(e, null);\n            }\n          } else term.push(inflate(infl, {\n            size: su\n          }, cbl));\n        } else cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n      } else cbl(null, null);\n    };\n\n    for (var i = 0; i < c; ++i) {\n      _loop_3(i);\n    }\n  } else cbd(null, {});\n\n  return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\n\nexport function unzipSync(data, opts) {\n  var files = {};\n  var e = data.length - 22;\n\n  for (; b4(data, e) != 0x6054B50; --e) {\n    if (!e || data.length - e > 65558) err(13);\n  }\n\n  ;\n  var c = b2(data, e + 8);\n  if (!c) return {};\n  var o = b4(data, e + 16);\n  var z = o == 4294967295;\n\n  if (z) {\n    e = b4(data, e - 12);\n    if (b4(data, e) != 0x6064B50) err(13);\n    c = b4(data, e + 32);\n    o = b4(data, e + 48);\n  }\n\n  var fltr = opts && opts.filter;\n\n  for (var i = 0; i < c; ++i) {\n    var _a = zh(data, o, z),\n        c_2 = _a[0],\n        sc = _a[1],\n        su = _a[2],\n        fn = _a[3],\n        no = _a[4],\n        off = _a[5],\n        b = slzh(data, off);\n\n    o = no;\n\n    if (!fltr || fltr({\n      name: fn,\n      size: sc,\n      originalSize: su,\n      compression: c_2\n    })) {\n      if (!c_2) files[fn] = slc(data, b, b + sc);else if (c_2 == 8) files[fn] = inflateSync(data.subarray(b, b + sc), new u8(su));else err(14, 'unknown compression type ' + c_2);\n    }\n  }\n\n  return files;\n}","map":{"version":3,"sources":["/Users/sanjayar/Desktop/moody-main copy 2/node_modules/fflate/esm/browser.js"],"names":["ch2","wk","c","id","msg","transfer","cb","w","Worker","URL","createObjectURL","Blob","type","onmessage","e","d","data","ed","$e$","err","Error","stack","postMessage","u8","Uint8Array","u16","Uint16Array","u32","Uint32Array","fleb","fdeb","clim","freb","eb","start","b","i","r","j","_a","fl","revfl","_b","fd","revfd","rev","x","hMap","cd","mb","s","length","l","le","co","rvb","sv","r_1","v","m","flt","fdt","flm","flrm","fdm","fdrm","max","a","bits","p","o","bits16","shft","slc","n","BYTES_PER_ELEMENT","set","subarray","FlateErrorCode","UnexpectedEOF","InvalidBlockType","InvalidLengthLiteral","InvalidDistance","StreamFinished","NoStreamHandler","InvalidHeader","NoCallback","InvalidUTF8","ExtraFieldTooLong","InvalidDate","FilenameTooLong","StreamFinishing","InvalidZipData","UnknownCompressionMethod","ec","ind","nt","code","captureStackTrace","inflt","dat","buf","st","sl","f","noBuf","noSt","cbuf","bl","nbuf","Math","final","pos","bt","lm","dm","lbt","dbt","tbts","t","hLit","hcLen","tl","ldt","clt","clb","clbmsk","clm","lt","dt","lms","dms","lpos","sym","add","dsym","end","wbits","wbits16","hTree","push","t2","slice","et","sort","i0","i1","i2","maxSym","tr","mbt","ln","lft","cst","i2_1","i2_2","i2_3","lc","cl","cli","cln","cls","clen","cf","wfblk","out","wblk","syms","lf","df","li","bs","dlt","mlb","ddt","mdb","_c","lclt","nlc","_d","lcdt","ndc","lcfreq","_e","lct","mlcb","nlcc","flen","ftlen","dtlen","ll","dl","llm","lcts","it","clct","len","dst","deo","dflt","lvl","plvl","pre","post","lst","ceil","opt","msk_1","prev","head","bs1_1","bs2_1","hsh","lc_1","wi","hv","imod","pimod","rem","ch_1","dif","maxn","min","maxd","ml","nl","mmd","md","ti","pti","lin","din","crct","Int32Array","k","crc","cr","adler","dopt","level","mem","log","mrg","wcln","fn","fnStr","td","toString","ks","indexOf","lastIndexOf","replace","split","st_1","prototype","spInd","ch","cbfs","buffer","constructor","wrkr","fns","init","td_1","bInflt","inflateSync","pbf","gu8","bDflt","deflateSync","gze","gzh","gzhl","wbytes","guze","gzs","gzl","zle","zlh","zule","zlv","size","cbify","opts","terminate","consume","astrm","strm","ondata","ev","astrmify","call","b2","b4","b8","filename","mtime","floor","Date","now","charCodeAt","flg","zs","lv","AsyncCmpStrm","Deflate","chunk","AsyncDeflate","deflate","Inflate","bts","AsyncInflate","inflate","Gzip","raw","AsyncGzip","gzip","gzipSync","Gunzip","AsyncGunzip","gunzip","gunzipSync","Zlib","AsyncZlib","zlib","zlibSync","Unzlib","AsyncUnzlib","unzlib","unzlibSync","compress","AsyncCompress","compressSync","Compress","Decompress","G","I","Z","_this_1","apply","arguments","AsyncDecompress","decompress","decompressSync","fltn","val","op","Array","isArray","te","TextEncoder","TextDecoder","tds","decode","stream","dutf8","String","fromCharCode","DecodeUTF8","np","EncodeUTF8","strToU8","str","latin1","ar_1","encode","ar","ai","strFromU8","ext","dbf","slzh","zh","z","fnl","es","z64e","sc","su","off","exfl","ex","wzh","u","ce","extra","col","exl","os","flag","compression","y","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","attrs","exf","wzf","ZipPassThrough","process","ZipDeflate","AsyncZipDeflate","Zip","file","fl_1","com","comment","hl_1","header","chks_1","pAll_1","_i","chks_2","chk","tr_1","ind_1","uf_1","nxt","cl_1","dd","splice","zip","Object","keys","tot","slft","files","term","tAll","cbd","mt","cbf","oe","cdl","badd","loc","_loop_1","ms","cbl","zipSync","UnzipPassThrough","UnzipInflate","AsyncUnzipInflate","_","sz","Unzip","onfile","toAdd","is","oc","_loop_2","sig","this_1","bf","cmp_1","chks_3","unshift","sc_1","su_1","fn_1","d_1","file_1","name","ctr","chks_4","originalSize","state_1","register","decoder","queueMicrotask","setTimeout","unzip","fltr","filter","_loop_3","c_1","no","infl","unzipSync","c_2"],"mappings":"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","sourcesContent":["// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar wk = (function (c, id, msg, transfer, cb) {\n    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([\n        c + ';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'\n    ], { type: 'text/javascript' }))));\n    w.onmessage = function (e) {\n        var d = e.data, ed = d.$e$;\n        if (ed) {\n            var err = new Error(ed[0]);\n            err['code'] = ed[1];\n            err.stack = ed[2];\n            cb(err, null);\n        }\n        else\n            cb(null, d);\n    };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, u32 = Uint32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\n// see fleb note\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new u32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return [b, r];\n};\nvar _a = freb(fleb, 2), fl = _a[0], revfl = _a[1];\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b[0], revfd = _b[1];\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >>> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >>> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >>> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >>> 8) | ((x & 0x00FF) << 8)) >>> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 0; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >>> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >>> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    var n = new (v.BYTES_PER_ELEMENT == 2 ? u16 : v.BYTES_PER_ELEMENT == 4 ? u32 : u8)(e - s);\n    n.set(v.subarray(s, e));\n    return n;\n};\n/**\n * Codes for errors generated within this library\n */\nexport var FlateErrorCode = {\n    UnexpectedEOF: 0,\n    InvalidBlockType: 1,\n    InvalidLengthLiteral: 2,\n    InvalidDistance: 3,\n    StreamFinished: 4,\n    NoStreamHandler: 5,\n    InvalidHeader: 6,\n    NoCallback: 7,\n    InvalidUTF8: 8,\n    ExtraFieldTooLong: 9,\n    InvalidDate: 10,\n    FilenameTooLong: 11,\n    StreamFinishing: 12,\n    InvalidZipData: 13,\n    UnknownCompressionMethod: 14\n};\n// error codes\nvar ec = [\n    'unexpected EOF',\n    'invalid block type',\n    'invalid length/literal',\n    'invalid distance',\n    'stream finished',\n    'no stream handler',\n    ,\n    'no callback',\n    'invalid UTF-8 data',\n    'extra field too long',\n    'date not in range 1980-2099',\n    'filename too long',\n    'stream finishing',\n    'invalid zip data'\n    // determined by unknown compression method\n];\n;\nvar err = function (ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n        Error.captureStackTrace(e, err);\n    if (!nt)\n        throw e;\n    return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, buf, st) {\n    // source length\n    var sl = dat.length;\n    if (!sl || (st && st.f && !st.l))\n        return buf || new u8(0);\n    // have to estimate size\n    var noBuf = !buf || st;\n    // no state\n    var noSt = !st || st.i;\n    if (!st)\n        st = {};\n    // Assumes roughly 33% compression ratio average\n    if (!buf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                // ensure size\n                if (noBuf)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >>> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                err(1);\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17;\n        if (noBuf)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >>> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n            if (!c)\n                err(2);\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >>> 4;\n                if (!d)\n                    err(3);\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & ((1 << b) - 1), pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                if (noBuf)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                for (; bt < end; bt += 4) {\n                    buf[bt] = buf[bt - dt];\n                    buf[bt + 1] = buf[bt + 1 - dt];\n                    buf[bt + 2] = buf[bt + 2 - dt];\n                    buf[bt + 3] = buf[bt + 3 - dt];\n                }\n                bt = end;\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    return bt == buf.length ? buf : slc(buf, 0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n    d[o + 2] |= v >>> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return [et, 0];\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return [v, 1];\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return [new u8(tr), mbt];\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return [cl.subarray(0, cli), s];\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >>> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a[0], mlb = _a[1];\n    var _b = hTree(df, 15), ddt = _b[0], mdb = _b[1];\n    var _c = lc(dlt), lclt = _c[0], nlc = _c[1];\n    var _d = lc(ddt), lcdt = _d[0], ndc = _d[1];\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        lcfreq[lclt[i] & 31]++;\n    for (var i = 0; i < lcdt.length; ++i)\n        lcfreq[lcdt[i] & 31]++;\n    var _e = hTree(lcfreq, 7), lct = _e[0], mlcb = _e[1];\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + (2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18]);\n    if (flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >>> 5) & 127), p += clct[i] >>> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        if (syms[i] > 255) {\n            var len = (syms[i] >>> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (syms[i] >>> 23) & 31), p += fleb[len];\n            var dst = syms[i] & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (syms[i] >>> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[syms[i]]), p += ll[syms[i]];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new u32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, lst) {\n    var s = dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var pos = 0;\n    if (!lvl || s < 8) {\n        for (var i = 0; i <= s; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e >= s) {\n                // write final block\n                w[pos >> 3] = lst;\n            }\n            pos = wfblk(w, pos + 1, dat.subarray(i, e));\n        }\n    }\n    else {\n        var opt = deo[lvl - 1];\n        var n = opt >>> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = new u16(32768), head = new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new u32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index  l/lind  waitdx  bitpos\n        var lc_1 = 0, eb = 0, i = 0, li = 0, wi = 0, bs = 0;\n        for (; i < s; ++i) {\n            // hash value\n            // deopt when i > s - 3 - at end, deopt acceptable\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && rem > 423) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = (imod - pimod) & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = (i - dif + j + 32768) & 32767;\n                                    var pti = prev[ti];\n                                    var cd = (ti - pti + 32768) & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += (imod - pimod + 32768) & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one Uint32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        // this is the easiest way to avoid needing to maintain state\n        if (!lst && pos & 7)\n            pos = wfblk(w, pos + 1, et);\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new Int32Array(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && -306674912) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Alder32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length | 0;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a >>> 8) << 16 | (b & 255) << 8 | (b >>> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : (12 + opt.mem), pre, post, !st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return [fnStr, td];\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k].buffer) {\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n        }\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    var _a;\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            _a = wcln(fns[i], fnStr, td_1), fnStr = _a[0], td_1 = _a[1];\n        ch[id] = wcln(fns[m], fnStr, td_1);\n    }\n    var td = mrg({}, ch[id][1]);\n    return wk(ch[id][0] + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, u32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gu8]; };\nvar bDflt = function () { return [u8, u16, u32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zlv]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get u8\nvar gu8 = function (o) { return o && o.size && new u8(o.size); };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) { return strm.push(ev.data[0], ev.data[1]); };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.push = function (d, f) {\n        if (!strm.ondata)\n            err(5);\n        if (t)\n            strm.ondata(err(4, 0, 1), null, !!f);\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        err(6, 'invalid gzip data');\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += d[10] | (d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return ((d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16) | (d[l - 1] << 24)) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + ((o.filename && (o.filename.length + 1)) || 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (fl ? (32 - 2 * fl) : 1);\n};\n// zlib valid\nvar zlv = function (d) {\n    if ((d[0] & 15) != 8 || (d[0] >>> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        err(6, 'invalid zlib data');\n    if (d[1] & 32)\n        err(6, 'invalid zlib data: preset dictionaries not supported');\n};\nfunction AsyncCmpStrm(opts, cb) {\n    if (!cb && typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n// zlib footer: -4 to -0 is Adler32\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (!cb && typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, !f), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.d = final;\n        this.p(chunk, final || false);\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an inflation stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Inflate(cb) {\n        this.s = {};\n        this.p = new u8(0);\n        this.ondata = cb;\n    }\n    Inflate.prototype.e = function (c) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        var l = this.p.length;\n        var n = new u8(l + c.length);\n        n.set(this.p), n.set(c, l), this.p = n;\n    };\n    Inflate.prototype.c = function (final) {\n        this.d = this.s.i = final || false;\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.o, this.s);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous inflation stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncInflate(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, 0, function () {\n            var strm = new Inflate();\n            onmessage = astrm(strm);\n        }, 7);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gu8(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, out) {\n    return inflt(data, out);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        this.c.p(c);\n        this.l += c.length;\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, !f);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a GUNZIP stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Gunzip(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            var s = this.p.length > 3 ? gzs(this.p) : 4;\n            if (s >= this.p.length && !final)\n                return;\n            this.p = this.p.subarray(s), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 8)\n                err(6, 'invalid gzip data');\n            this.p = this.p.subarray(0, -8);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous GUNZIP stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncGunzip(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, 0, function () {\n            var strm = new Gunzip();\n            onmessage = astrm(strm);\n        }, 9);\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param out Where to write the data. GZIP already encodes the output size, so providing this doesn't save memory.\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, out) {\n    return inflt(data.subarray(gzs(data), -8), out || new u8(gzl(data)));\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        this.c.p(c);\n        var raw = dopt(c, this.o, this.v && 2, f && 4, !f);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates a Zlib decompression stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Unzlib(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 2 && !final)\n                return;\n            this.p = this.p.subarray(2), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                err(6, 'invalid zlib data');\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous Zlib decompression stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncUnzlib(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, 0, function () {\n            var strm = new Unzlib();\n            onmessage = astrm(strm);\n        }, 11);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gu8(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, out) {\n    return inflt((zlv(data), data.subarray(2, -4)), out);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    /**\n     * Creates a decompression stream\n     * @param cb The callback to call whenever data is decompressed\n     */\n    function Decompress(cb) {\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                var _this_1 = this;\n                var cb = function () { _this_1.ondata.apply(_this_1, arguments); };\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(cb)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(cb)\n                        : new this.Z(cb);\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    /**\n   * Creates an asynchronous decompression stream\n   * @param cb The callback to call whenever data is decompressed\n   */\n    function AsyncDecompress(cb) {\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, out) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, out)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, out)\n            : unzlibSync(data, out);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k, op = o;\n        if (Array.isArray(val))\n            op = mrg(o, val[1]), val = val[0];\n        if (val instanceof u8)\n            t[n] = [val, op];\n        else {\n            t[n += '/'] = [new u8(0), op];\n            fltn(val, n, t, o);\n        }\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return [r, slc(d, i - 1)];\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    err(8);\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            err(4);\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), ch = _a[0], np = _a[1];\n        if (final) {\n            if (np.length)\n                err(8);\n            this.p = null;\n        }\n        else\n            this.p = np;\n        this.ondata(ch, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td)\n        return td.decode(dat);\n    else {\n        var _a = dutf8(dat), out = _a[0], ext = _a[1];\n        if (ext.length)\n            err(8);\n        return out;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                err(9);\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c == null && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        err(10);\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >>> 1)), b += 4;\n    if (c != null) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this_1.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this_1 = this;\n        if (!this.ondata)\n            err(5);\n        // finishing or finished\n        if (this.d & 2)\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);\n        else {\n            var f = strToU8(file.filename), fl_1 = f.length;\n            var com = file.comment, o = com && strToU8(com);\n            var u = fl_1 != file.filename.length || (o && (com.length != o.length));\n            var hl_1 = fl_1 + exfl(file.extra) + 30;\n            if (fl_1 > 65535)\n                this.ondata(err(11, 0, 1), null, false);\n            var header = new u8(hl_1);\n            wzh(header, 0, file, f, u);\n            var chks_1 = [header];\n            var pAll_1 = function () {\n                for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n                    var chk = chks_2[_i];\n                    _this_1.ondata(null, chk, false);\n                }\n                chks_1 = [];\n            };\n            var tr_1 = this.d;\n            this.d = 0;\n            var ind_1 = this.u.length;\n            var uf_1 = mrg(file, {\n                f: f,\n                u: u,\n                o: o,\n                t: function () {\n                    if (file.terminate)\n                        file.terminate();\n                },\n                r: function () {\n                    pAll_1();\n                    if (tr_1) {\n                        var nxt = _this_1.u[ind_1 + 1];\n                        if (nxt)\n                            nxt.r();\n                        else\n                            _this_1.d = 1;\n                    }\n                    tr_1 = 1;\n                }\n            });\n            var cl_1 = 0;\n            file.ondata = function (err, dat, final) {\n                if (err) {\n                    _this_1.ondata(err, dat, final);\n                    _this_1.terminate();\n                }\n                else {\n                    cl_1 += dat.length;\n                    chks_1.push(dat);\n                    if (final) {\n                        var dd = new u8(16);\n                        wbytes(dd, 0, 0x8074B50);\n                        wbytes(dd, 4, file.crc);\n                        wbytes(dd, 8, cl_1);\n                        wbytes(dd, 12, file.size);\n                        chks_1.push(dd);\n                        uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n                        if (tr_1)\n                            uf_1.r();\n                        tr_1 = 1;\n                    }\n                    else if (tr_1)\n                        pAll_1();\n                }\n            };\n            this.u.push(uf_1);\n        }\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this_1 = this;\n        if (this.d & 2) {\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n            return;\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this_1.d & 1))\n                        return;\n                    _this_1.u.splice(-1, 1);\n                    _this_1.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, f.c, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cbd(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cbd(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cbd(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl(err(11, 0, 1), null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            err(11);\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this_1 = this;\n        this.i = new Inflate(function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this_1 = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this_1.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this_1.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this_1 = this;\n        if (!this.onfile)\n            err(5);\n        if (!this.p)\n            err(4);\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_3 = [];\n                        this_1.k.unshift(chks_3);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    err(5);\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this_1.o[cmp_1];\n                                    if (!ctr)\n                                        file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                                        var dat = chks_4[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this_1.k[0] == chks_3 && _this_1.c)\n                                        _this_1.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                err(13);\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) { fn(); };\nexport function unzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cbd(err(13, 0, 1), null);\n            return tAll;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (lft) {\n        var c = lft;\n        var o = b4(data, e + 16);\n        var z = o == 4294967295;\n        if (z) {\n            e = b4(data, e - 12);\n            if (b4(data, e) != 0x6064B50) {\n                cbd(err(13, 0, 1), null);\n                return tAll;\n            }\n            c = lft = b4(data, e + 32);\n            o = b4(data, e + 48);\n        }\n        var fltr = opts && opts.filter;\n        var _loop_3 = function (i) {\n            var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n            o = no;\n            var cbl = function (e, d) {\n                if (e) {\n                    tAll();\n                    cbd(e, null);\n                }\n                else {\n                    if (d)\n                        files[fn] = d;\n                    if (!--lft)\n                        cbd(null, files);\n                }\n            };\n            if (!fltr || fltr({\n                name: fn,\n                size: sc,\n                originalSize: su,\n                compression: c_1\n            })) {\n                if (!c_1)\n                    cbl(null, slc(data, b, b + sc));\n                else if (c_1 == 8) {\n                    var infl = data.subarray(b, b + sc);\n                    if (sc < 320000) {\n                        try {\n                            cbl(null, inflateSync(infl, new u8(su)));\n                        }\n                        catch (e) {\n                            cbl(e, null);\n                        }\n                    }\n                    else\n                        term.push(inflate(infl, { size: su }, cbl));\n                }\n                else\n                    cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n            }\n            else\n                cbl(null, null);\n        };\n        for (var i = 0; i < c; ++i) {\n            _loop_3(i);\n        }\n    }\n    else\n        cbd(null, {});\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\nexport function unzipSync(data, opts) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            err(13);\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295;\n    if (z) {\n        e = b4(data, e - 12);\n        if (b4(data, e) != 0x6064B50)\n            err(13);\n        c = b4(data, e + 32);\n        o = b4(data, e + 48);\n    }\n    var fltr = opts && opts.filter;\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!fltr || fltr({\n            name: fn,\n            size: sc,\n            originalSize: su,\n            compression: c_2\n        })) {\n            if (!c_2)\n                files[fn] = slc(data, b, b + sc);\n            else if (c_2 == 8)\n                files[fn] = inflateSync(data.subarray(b, b + sc), new u8(su));\n            else\n                err(14, 'unknown compression type ' + c_2);\n        }\n    }\n    return files;\n}\n"]},"metadata":{},"sourceType":"module"}