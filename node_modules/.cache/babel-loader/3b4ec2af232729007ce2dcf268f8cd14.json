{"ast":null,"code":"import { createAsyncThunk, createEntityAdapter, createSelector, createSlice } from \"@reduxjs/toolkit\";\nimport { Rating } from \"../models\";\nimport { DataStore } from \"aws-amplify\";\nexport const fetchActiveMeetingRatings = createAsyncThunk(\"ratings/fetchActiveMeetingRatings\", async (_, {\n  getState\n}) => {\n  const state = getState();\n\n  if (!!state.meetings.activeMeeting) {\n    var _activeMeeting$Public;\n\n    const activeMeeting = state.meetings.entities[state.meetings.activeMeeting];\n\n    if (activeMeeting && ((_activeMeeting$Public = activeMeeting.PublicMeetingInfo) === null || _activeMeeting$Public === void 0 ? void 0 : _activeMeeting$Public.id)) {\n      return await DataStore.query(Rating, r => r.publicmeetinginfoID(\"eq\", activeMeeting.PublicMeetingInfo.id));\n    }\n  }\n\n  return [];\n});\nexport const subscribeToActiveMeetingRatings = createAsyncThunk(\"ratings/subscribeToActiveMeetingRatings\", async (_, {\n  getState,\n  dispatch\n}) => {\n  const state = getState();\n\n  if (!!state.meetings.activeMeeting) {\n    const activeMeeting = state.meetings.entities[state.meetings.activeMeeting];\n\n    if (activeMeeting) {\n      const subscription = DataStore.observe(Rating).subscribe(msg => {\n        var _activeMeeting$Public2;\n\n        if (msg.element && msg.element.publicmeetinginfoID === ((_activeMeeting$Public2 = activeMeeting.PublicMeetingInfo) === null || _activeMeeting$Public2 === void 0 ? void 0 : _activeMeeting$Public2.id)) {\n          dispatch(fetchActiveMeetingRatings());\n        }\n      });\n      return () => {\n        subscription.unsubscribe();\n      };\n    }\n  }\n\n  return () => {};\n});\nconst ratingsAdapter = createEntityAdapter();\nconst initialState = ratingsAdapter.getInitialState({\n  loading: true\n});\nexport const ratingsSlice = createSlice({\n  name: \"ratings\",\n  initialState,\n  reducers: {\n    deleteRatings: ratingsAdapter.removeMany\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchActiveMeetingRatings.pending, state => {\n      state.loading = true;\n    }).addCase(fetchActiveMeetingRatings.fulfilled, (state, {\n      payload\n    }) => {\n      ratingsAdapter.upsertMany(state, payload);\n      state.loading = false;\n    }).addCase(fetchActiveMeetingRatings.rejected, state => {\n      state.loading = false;\n    });\n  }\n});\nexport const {\n  deleteRatings\n} = ratingsSlice.actions;\nexport const {\n  selectAll: selectAllRatings\n} = ratingsAdapter.getSelectors(state => state.ratings);\nexport const selectActiveMeetingRatings = createSelector([state => !!state.meetings.activeMeeting ? state.meetings.entities[state.meetings.activeMeeting] : undefined, selectAllRatings], (activeMeeting, ratings) => (ratings === null || ratings === void 0 ? void 0 : ratings.filter(r => {\n  var _activeMeeting$Public3;\n\n  return r.publicmeetinginfoID === (activeMeeting === null || activeMeeting === void 0 ? void 0 : (_activeMeeting$Public3 = activeMeeting.PublicMeetingInfo) === null || _activeMeeting$Public3 === void 0 ? void 0 : _activeMeeting$Public3.id);\n})) || []);\nexport default ratingsSlice.reducer;","map":{"version":3,"sources":["/Users/sanjayar/Desktop/moody-main copy/src/meetings/ratingsSlice.ts"],"names":["createAsyncThunk","createEntityAdapter","createSelector","createSlice","Rating","DataStore","fetchActiveMeetingRatings","_","getState","state","meetings","activeMeeting","entities","PublicMeetingInfo","id","query","r","publicmeetinginfoID","subscribeToActiveMeetingRatings","dispatch","subscription","observe","subscribe","msg","element","unsubscribe","ratingsAdapter","initialState","getInitialState","loading","ratingsSlice","name","reducers","deleteRatings","removeMany","extraReducers","builder","addCase","pending","fulfilled","payload","upsertMany","rejected","actions","selectAll","selectAllRatings","getSelectors","ratings","selectActiveMeetingRatings","undefined","filter","reducer"],"mappings":"AAAA,SACEA,gBADF,EAEEC,mBAFF,EAGEC,cAHF,EAIEC,WAJF,QAKO,kBALP;AAMA,SAAkBC,MAAlB,QAAgC,WAAhC;AAEA,SAASC,SAAT,QAA0B,aAA1B;AAGA,OAAO,MAAMC,yBAAyB,GAAGN,gBAAgB,CACvD,mCADuD,EAEvD,OAAOO,CAAP,EAAU;AAAEC,EAAAA;AAAF,CAAV,KAA8C;AAC5C,QAAMC,KAAK,GAAGD,QAAQ,EAAtB;;AACA,MAAI,CAAC,CAACC,KAAK,CAACC,QAAN,CAAeC,aAArB,EAAoC;AAAA;;AAClC,UAAMA,aAAkC,GACtCF,KAAK,CAACC,QAAN,CAAeE,QAAf,CAAwBH,KAAK,CAACC,QAAN,CAAeC,aAAvC,CADF;;AAGA,QAAIA,aAAa,8BAAIA,aAAa,CAACE,iBAAlB,0DAAI,sBAAiCC,EAArC,CAAjB,EAA0D;AACxD,aAAO,MAAMT,SAAS,CAACU,KAAV,CAAgBX,MAAhB,EAAyBY,CAAD,IACnCA,CAAC,CAACC,mBAAF,CAAsB,IAAtB,EAA4BN,aAAa,CAACE,iBAAd,CAAiCC,EAA7D,CADW,CAAb;AAGD;AACF;;AAED,SAAO,EAAP;AACD,CAhBsD,CAAlD;AAmBP,OAAO,MAAMI,+BAA+B,GAAGlB,gBAAgB,CAC7D,yCAD6D,EAE7D,OAAOO,CAAP,EAAU;AAAEC,EAAAA,QAAF;AAAYW,EAAAA;AAAZ,CAAV,KAA0D;AACxD,QAAMV,KAAK,GAAGD,QAAQ,EAAtB;;AAEA,MAAI,CAAC,CAACC,KAAK,CAACC,QAAN,CAAeC,aAArB,EAAoC;AAClC,UAAMA,aAAkC,GACtCF,KAAK,CAACC,QAAN,CAAeE,QAAf,CAAwBH,KAAK,CAACC,QAAN,CAAeC,aAAvC,CADF;;AAGA,QAAIA,aAAJ,EAAmB;AACjB,YAAMS,YAAwC,GAAGf,SAAS,CAACgB,OAAV,CAC/CjB,MAD+C,EAE/CkB,SAF+C,CAEpCC,GAAD,IAAS;AAAA;;AACnB,YACEA,GAAG,CAACC,OAAJ,IACAD,GAAG,CAACC,OAAJ,CAAYP,mBAAZ,gCACEN,aAAa,CAACE,iBADhB,2DACE,uBAAiCC,EADnC,CAFF,EAIE;AACAK,UAAAA,QAAQ,CAACb,yBAAyB,EAA1B,CAAR;AACD;AACF,OAVgD,CAAjD;AAYA,aAAO,MAAM;AACXc,QAAAA,YAAY,CAACK,WAAb;AACD,OAFD;AAGD;AACF;;AAED,SAAO,MAAM,CAAE,CAAf;AACD,CA7B4D,CAAxD;AAgCP,MAAMC,cAAc,GAAGzB,mBAAmB,EAA1C;AACA,MAAM0B,YAAY,GAAGD,cAAc,CAACE,eAAf,CAA+B;AAClDC,EAAAA,OAAO,EAAE;AADyC,CAA/B,CAArB;AAIA,OAAO,MAAMC,YAAY,GAAG3B,WAAW,CAAC;AACtC4B,EAAAA,IAAI,EAAE,SADgC;AAEtCJ,EAAAA,YAFsC;AAGtCK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,EAAEP,cAAc,CAACQ;AADtB,GAH4B;AAMtCC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CACJC,OADH,CACW/B,yBAAyB,CAACgC,OADrC,EAC+C7B,KAAD,IAAW;AACrDA,MAAAA,KAAK,CAACoB,OAAN,GAAgB,IAAhB;AACD,KAHH,EAIGQ,OAJH,CAIW/B,yBAAyB,CAACiC,SAJrC,EAIgD,CAAC9B,KAAD,EAAQ;AAAE+B,MAAAA;AAAF,KAAR,KAAwB;AACpEd,MAAAA,cAAc,CAACe,UAAf,CAA0BhC,KAA1B,EAAiC+B,OAAjC;AACA/B,MAAAA,KAAK,CAACoB,OAAN,GAAgB,KAAhB;AACD,KAPH,EAQGQ,OARH,CAQW/B,yBAAyB,CAACoC,QARrC,EAQgDjC,KAAD,IAAW;AACtDA,MAAAA,KAAK,CAACoB,OAAN,GAAgB,KAAhB;AACD,KAVH;AAWD;AAlBqC,CAAD,CAAhC;AAqBP,OAAO,MAAM;AAAEI,EAAAA;AAAF,IAAoBH,YAAY,CAACa,OAAvC;AAEP,OAAO,MAAM;AAAEC,EAAAA,SAAS,EAAEC;AAAb,IAAkCnB,cAAc,CAACoB,YAAf,CAC5CrC,KAAD,IAAsBA,KAAK,CAACsC,OADiB,CAAxC;AAIP,OAAO,MAAMC,0BAA0B,GAAG9C,cAAc,CACtD,CACGO,KAAD,IACE,CAAC,CAACA,KAAK,CAACC,QAAN,CAAeC,aAAjB,GACIF,KAAK,CAACC,QAAN,CAAeE,QAAf,CAAwBH,KAAK,CAACC,QAAN,CAAeC,aAAvC,CADJ,GAEIsC,SAJR,EAKEJ,gBALF,CADsD,EAQtD,CAAClC,aAAD,EAA0BoC,OAA1B,KACE,CAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEG,MAAT,CACGlC,CAAD;AAAA;;AAAA,SAAOA,CAAC,CAACC,mBAAF,MAA0BN,aAA1B,aAA0BA,aAA1B,iDAA0BA,aAAa,CAAEE,iBAAzC,2DAA0B,uBAAkCC,EAA5D,CAAP;AAAA,CADF,MAEK,EAX+C,CAAjD;AAcP,eAAegB,YAAY,CAACqB,OAA5B","sourcesContent":["import {\n  createAsyncThunk,\n  createEntityAdapter,\n  createSelector,\n  createSlice,\n} from \"@reduxjs/toolkit\";\nimport { Meeting, Rating } from \"../models\";\nimport { RootState } from \"../reduxStore\";\nimport { DataStore } from \"aws-amplify\";\nimport { ZenObservable } from \"zen-observable-ts\";\n\nexport const fetchActiveMeetingRatings = createAsyncThunk(\n  \"ratings/fetchActiveMeetingRatings\",\n  async (_, { getState }): Promise<Rating[]> => {\n    const state = getState() as RootState;\n    if (!!state.meetings.activeMeeting) {\n      const activeMeeting: Meeting | undefined =\n        state.meetings.entities[state.meetings.activeMeeting];\n\n      if (activeMeeting && activeMeeting.PublicMeetingInfo?.id) {\n        return await DataStore.query(Rating, (r) =>\n          r.publicmeetinginfoID(\"eq\", activeMeeting.PublicMeetingInfo!.id)\n        );\n      }\n    }\n\n    return [];\n  }\n);\n\nexport const subscribeToActiveMeetingRatings = createAsyncThunk(\n  \"ratings/subscribeToActiveMeetingRatings\",\n  async (_, { getState, dispatch }): Promise<() => void> => {\n    const state = getState() as RootState;\n\n    if (!!state.meetings.activeMeeting) {\n      const activeMeeting: Meeting | undefined =\n        state.meetings.entities[state.meetings.activeMeeting];\n\n      if (activeMeeting) {\n        const subscription: ZenObservable.Subscription = DataStore.observe(\n          Rating\n        ).subscribe((msg) => {\n          if (\n            msg.element &&\n            msg.element.publicmeetinginfoID ===\n              activeMeeting.PublicMeetingInfo?.id\n          ) {\n            dispatch(fetchActiveMeetingRatings());\n          }\n        });\n\n        return () => {\n          subscription.unsubscribe();\n        };\n      }\n    }\n\n    return () => {};\n  }\n);\n\nconst ratingsAdapter = createEntityAdapter<Rating>();\nconst initialState = ratingsAdapter.getInitialState({\n  loading: true as boolean,\n});\n\nexport const ratingsSlice = createSlice({\n  name: \"ratings\",\n  initialState,\n  reducers: {\n    deleteRatings: ratingsAdapter.removeMany,\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchActiveMeetingRatings.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(fetchActiveMeetingRatings.fulfilled, (state, { payload }) => {\n        ratingsAdapter.upsertMany(state, payload);\n        state.loading = false;\n      })\n      .addCase(fetchActiveMeetingRatings.rejected, (state) => {\n        state.loading = false;\n      });\n  },\n});\n\nexport const { deleteRatings } = ratingsSlice.actions;\n\nexport const { selectAll: selectAllRatings } = ratingsAdapter.getSelectors(\n  (state: RootState) => state.ratings\n);\n\nexport const selectActiveMeetingRatings = createSelector(\n  [\n    (state: RootState) =>\n      !!state.meetings.activeMeeting\n        ? state.meetings.entities[state.meetings.activeMeeting]\n        : undefined,\n    selectAllRatings,\n  ],\n  (activeMeeting?: Meeting, ratings?: Rating[]) =>\n    ratings?.filter(\n      (r) => r.publicmeetinginfoID === activeMeeting?.PublicMeetingInfo?.id\n    ) || []\n);\n\nexport default ratingsSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}