{"ast":null,"code":"var _jsxFileName = \"/Users/sanjayar/Desktop/moody-main copy 2/src/pages/feedback/Question.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, makeStyles, Typography } from \"@material-ui/core\";\nimport { Rating } from \"@material-ui/lab\";\nimport { DEFAULT_RATING_LABELS } from \"./constants\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  stars: {\n    fontSize: theme.typography.h1.fontSize\n  }\n}));\nexport default function Question({\n  name,\n  stars,\n  onChange,\n  question,\n  required\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [hover, setHover] = useState(-1);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      children: question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Rating, {\n        name: name,\n        className: classes.stars,\n        value: stars,\n        onChange: onChange,\n        onChangeActive: (event, newHover) => {\n          setHover(newHover);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), stars !== null && /*#__PURE__*/_jsxDEV(Box, {\n        ml: 2,\n        children: DEFAULT_RATING_LABELS[hover !== -1 ? hover : stars]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), required && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle2\",\n      children: \"(Required)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Question, \"Y08JLkvS1x3aBD45eqTKSfBAEH4=\", false, function () {\n  return [useStyles];\n});\n\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/sanjayar/Desktop/moody-main copy 2/src/pages/feedback/Question.tsx"],"names":["Box","makeStyles","Typography","Rating","DEFAULT_RATING_LABELS","useState","useStyles","theme","stars","fontSize","typography","h1","Question","name","onChange","question","required","classes","hover","setHover","event","newHover"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,UAAd,EAAiCC,UAAjC,QAAmD,mBAAnD;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,qBAAT,QAAsC,aAAtC;AACA,SAAsBC,QAAtB,QAAsC,OAAtC;;;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAmB;AAC9CC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAEF,KAAK,CAACG,UAAN,CAAiBC,EAAjB,CAAoBF;AADzB;AADuC,CAAnB,CAAD,CAA5B;AAcA,eAAe,SAASG,QAAT,CAAkB;AAC/BC,EAAAA,IAD+B;AAE/BL,EAAAA,KAF+B;AAG/BM,EAAAA,QAH+B;AAI/BC,EAAAA,QAJ+B;AAK/BC,EAAAA;AAL+B,CAAlB,EAMgB;AAAA;;AAC7B,QAAMC,OAAO,GAAGX,SAAS,EAAzB;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,CAAC,CAAF,CAAlC;AAEA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA,gBAA0BU;AAA1B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,GAAD;AAAK,MAAA,OAAO,EAAC,MAAb;AAAoB,MAAA,UAAU,EAAC,QAA/B;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,IAAI,EAAEF,IADR;AAEE,QAAA,SAAS,EAAEI,OAAO,CAACT,KAFrB;AAGE,QAAA,KAAK,EAAEA,KAHT;AAIE,QAAA,QAAQ,EAAEM,QAJZ;AAKE,QAAA,cAAc,EAAE,CAACM,KAAD,EAAQC,QAAR,KAAqB;AACnCF,UAAAA,QAAQ,CAACE,QAAD,CAAR;AACD;AAPH;AAAA;AAAA;AAAA;AAAA,cADF,EAUGb,KAAK,KAAK,IAAV,iBACC,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,kBACGJ,qBAAqB,CAACc,KAAK,KAAK,CAAC,CAAX,GAAeA,KAAf,GAAuBV,KAAxB;AADxB;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAkBGQ,QAAQ,iBAAI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBf;AAAA,kBADF;AAsBD;;GAhCuBJ,Q;UAONN,S;;;KAPMM,Q","sourcesContent":["import { Box, makeStyles, Theme, Typography } from \"@material-ui/core\";\nimport { Rating } from \"@material-ui/lab\";\nimport { DEFAULT_RATING_LABELS } from \"./constants\";\nimport { ChangeEvent, useState } from \"react\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  stars: {\n    fontSize: theme.typography.h1.fontSize,\n  },\n}));\n\ntype QuestionProps = {\n  name: string;\n  stars: number | null;\n  onChange: (event: ChangeEvent<{}>, newHover: number | null) => void;\n  question: string;\n  required: boolean;\n};\n\nexport default function Question({\n  name,\n  stars,\n  onChange,\n  question,\n  required,\n}: QuestionProps): JSX.Element {\n  const classes = useStyles();\n  const [hover, setHover] = useState(-1);\n\n  return (\n    <>\n      <Typography variant=\"h2\">{question}</Typography>\n      <Box display=\"flex\" alignItems=\"center\">\n        <Rating\n          name={name}\n          className={classes.stars}\n          value={stars}\n          onChange={onChange}\n          onChangeActive={(event, newHover) => {\n            setHover(newHover);\n          }}\n        />\n        {stars !== null && (\n          <Box ml={2}>\n            {DEFAULT_RATING_LABELS[hover !== -1 ? hover : stars]}\n          </Box>\n        )}\n      </Box>\n      {required && <Typography variant=\"subtitle2\">(Required)</Typography>}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}