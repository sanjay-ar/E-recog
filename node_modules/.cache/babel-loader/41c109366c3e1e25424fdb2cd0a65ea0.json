{"ast":null,"code":"var _jsxFileName = \"/Users/sanjayar/Desktop/moody-main copy 2/src/pages/Debug.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport FrequencyBar from \"../media/FrequencyBar\";\nimport Counter from \"../counter/Counter\";\nimport { Box, Button, Container, Link, Typography } from \"@material-ui/core\";\nimport ScreenCapture from \"../media/ScreenCapture\";\nimport Page from \"../components/Page\";\nimport { BrowserInformation } from \"../components/BrowserInformation\";\nimport { Alert } from \"@material-ui/lab\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { SettingsVoice } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Debug() {\n  _s();\n\n  const [audioStarted, setAudioStarted] = useState(false);\n  const toggleAudioRecording = useCallback(async () => {\n    setAudioStarted(!audioStarted);\n  }, [audioStarted]);\n  const [screenStarted, setScreenStarted] = useState(false);\n  const toggleScreenCapture = useCallback(async () => {\n    setScreenStarted(!screenStarted);\n  }, [screenStarted]);\n  return /*#__PURE__*/_jsxDEV(Page, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h1\",\n        children: \"Debug\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        paragraph: true,\n        variant: \"h6\",\n        children: \"Use this page to debug if all functions are supported by your browser.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"info\",\n        icon: /*#__PURE__*/_jsxDEV(SettingsVoice, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 38\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [\"You can debug the voice emotion model\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n            component: RouterLink,\n            to: \"/voice-emotion-debugging\",\n            children: \"here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        children: /*#__PURE__*/_jsxDEV(BrowserInformation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"section\",\n        mt: 2,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          children: \"Data store\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          paragraph: true,\n          children: [\"Try to add, remove and edit counters. Reloading the page should\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"not\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), \" reset the counters.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"section\",\n        mt: 2,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          children: \"Audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          paragraph: true,\n          children: \"Start the visualization and observe if it reacts to your voice. Make sure to grant the browser access to your microphone.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: toggleAudioRecording,\n          children: audioStarted ? \"Stop audio visualization\" : \"Start audio visualization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 2,\n          children: audioStarted && /*#__PURE__*/_jsxDEV(FrequencyBar, {\n            height: 200,\n            width: 600\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"section\",\n        mt: 2,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          children: \"Screen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          paragraph: true,\n          children: \"Start the screen recording and check that it shows the correct image. Make sure to grant the browser access to your screen.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: toggleScreenCapture,\n          children: screenStarted ? \"Stop screen recording\" : \"Start screen recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 2,\n          children: screenStarted && /*#__PURE__*/_jsxDEV(ScreenCapture, {\n            width: 1000,\n            height: 564\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Debug, \"AsaZUxemXicf+7Vn/eTjzTshzr0=\");\n\n_c = Debug;\nexport default Debug;\n\nvar _c;\n\n$RefreshReg$(_c, \"Debug\");","map":{"version":3,"sources":["/Users/sanjayar/Desktop/moody-main copy 2/src/pages/Debug.tsx"],"names":["useCallback","useState","FrequencyBar","Counter","Box","Button","Container","Link","Typography","ScreenCapture","Page","BrowserInformation","Alert","RouterLink","SettingsVoice","Debug","audioStarted","setAudioStarted","toggleAudioRecording","screenStarted","setScreenStarted","toggleScreenCapture"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,SAAtB,EAAiCC,IAAjC,EAAuCC,UAAvC,QAAyD,mBAAzD;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,kBAAT,QAAmC,kCAAnC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASL,IAAI,IAAIM,UAAjB,QAAmC,kBAAnC;AACA,SAASC,aAAT,QAA8B,oBAA9B;;;AAEA,SAASC,KAAT,GAA8B;AAAA;;AAC5B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAU,KAAV,CAAhD;AACA,QAAMiB,oBAAoB,GAAGlB,WAAW,CAAC,YAAY;AACnDiB,IAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACD,GAFuC,EAErC,CAACA,YAAD,CAFqC,CAAxC;AAIA,QAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoCnB,QAAQ,CAAU,KAAV,CAAlD;AACA,QAAMoB,mBAAmB,GAAGrB,WAAW,CAAC,YAAY;AAClDoB,IAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACD,GAFsC,EAEpC,CAACA,aAAD,CAFoC,CAAvC;AAIA,sBACE,QAAC,IAAD;AAAA,2BACE,QAAC,SAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAY,QAAA,SAAS,MAArB;AAAsB,QAAA,OAAO,EAAC,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAC,MAAhB;AAAuB,QAAA,IAAI,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gBAA7B;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,OAApB;AAAA,8DACwC,GADxC,eAEE,QAAC,IAAD;AAAM,YAAA,SAAS,EAAEN,UAAjB;AAA6B,YAAA,EAAE,EAAC,0BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF,eAcE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,+BACE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAdF,eAiBE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,SAAf;AAAyB,QAAA,EAAE,EAAE,CAA7B;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,OAApB;AAA4B,UAAA,SAAS,MAArC;AAAA,wFACkE,GADlE,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAME,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF,eAyBE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,SAAf;AAAyB,QAAA,EAAE,EAAE,CAA7B;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,OAApB;AAA4B,UAAA,SAAS,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAME,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,WADV;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,OAAO,EAAEK,oBAHX;AAAA,oBAKGF,YAAY,GACT,0BADS,GAET;AAPN;AAAA;AAAA;AAAA;AAAA,gBANF,eAeE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA,oBACGA,YAAY,iBAAI,QAAC,YAAD;AAAc,YAAA,MAAM,EAAE,GAAtB;AAA2B,YAAA,KAAK,EAAE;AAAlC;AAAA;AAAA;AAAA;AAAA;AADnB;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF,eA4CE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,SAAf;AAAyB,QAAA,EAAE,EAAE,CAA7B;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,OAApB;AAA4B,UAAA,SAAS,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAME,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,WADV;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,OAAO,EAAEK,mBAHX;AAAA,oBAKGF,aAAa,GAAG,uBAAH,GAA6B;AAL7C;AAAA;AAAA;AAAA;AAAA,gBANF,eAaE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA,oBACGA,aAAa,iBAAI,QAAC,aAAD;AAAe,YAAA,KAAK,EAAE,IAAtB;AAA4B,YAAA,MAAM,EAAE;AAApC;AAAA;AAAA;AAAA;AAAA;AADpB;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,cA5CF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkED;;GA7EQJ,K;;KAAAA,K;AA+ET,eAAeA,KAAf","sourcesContent":["import { useCallback, useState } from \"react\";\nimport FrequencyBar from \"../media/FrequencyBar\";\nimport Counter from \"../counter/Counter\";\nimport { Box, Button, Container, Link, Typography } from \"@material-ui/core\";\nimport ScreenCapture from \"../media/ScreenCapture\";\nimport Page from \"../components/Page\";\nimport { BrowserInformation } from \"../components/BrowserInformation\";\nimport { Alert } from \"@material-ui/lab\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { SettingsVoice } from \"@material-ui/icons\";\n\nfunction Debug(): JSX.Element {\n  const [audioStarted, setAudioStarted] = useState<boolean>(false);\n  const toggleAudioRecording = useCallback(async () => {\n    setAudioStarted(!audioStarted);\n  }, [audioStarted]);\n\n  const [screenStarted, setScreenStarted] = useState<boolean>(false);\n  const toggleScreenCapture = useCallback(async () => {\n    setScreenStarted(!screenStarted);\n  }, [screenStarted]);\n\n  return (\n    <Page>\n      <Container>\n        <Typography variant=\"h1\">Debug</Typography>\n        <Typography paragraph variant=\"h6\">\n          Use this page to debug if all functions are supported by your browser.\n        </Typography>\n        <Alert severity=\"info\" icon={<SettingsVoice />}>\n          <Typography variant=\"body1\">\n            You can debug the voice emotion model{\" \"}\n            <Link component={RouterLink} to=\"/voice-emotion-debugging\">\n              here\n            </Link>\n            .\n          </Typography>\n        </Alert>\n        <Box mt={2}>\n          <BrowserInformation />\n        </Box>\n        <Box component=\"section\" mt={2}>\n          <Typography variant=\"h2\">Data store</Typography>\n          <Typography variant=\"body1\" paragraph>\n            Try to add, remove and edit counters. Reloading the page should{\" \"}\n            <strong>not</strong> reset the counters.\n          </Typography>\n          <Counter />\n        </Box>\n        <Box component=\"section\" mt={2}>\n          <Typography variant=\"h2\">Audio</Typography>\n          <Typography variant=\"body1\" paragraph>\n            Start the visualization and observe if it reacts to your voice. Make\n            sure to grant the browser access to your microphone.\n          </Typography>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={toggleAudioRecording}\n          >\n            {audioStarted\n              ? \"Stop audio visualization\"\n              : \"Start audio visualization\"}\n          </Button>\n          <Box mt={2}>\n            {audioStarted && <FrequencyBar height={200} width={600} />}\n          </Box>\n        </Box>\n        <Box component=\"section\" mt={2}>\n          <Typography variant=\"h2\">Screen</Typography>\n          <Typography variant=\"body1\" paragraph>\n            Start the screen recording and check that it shows the correct\n            image. Make sure to grant the browser access to your screen.\n          </Typography>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={toggleScreenCapture}\n          >\n            {screenStarted ? \"Stop screen recording\" : \"Start screen recording\"}\n          </Button>\n          <Box mt={2}>\n            {screenStarted && <ScreenCapture width={1000} height={564} />}\n          </Box>\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default Debug;\n"]},"metadata":{},"sourceType":"module"}