{"ast":null,"code":"/* tslint:disable */\n\n/* eslint-disable */\n// this is an auto generated file. This will be overwritten\nexport const createSpeakerVoiceEmotion =\n/* GraphQL */\n`\n  mutation CreateSpeakerVoiceEmotion(\n    $input: CreateSpeakerVoiceEmotionInput!\n    $condition: ModelSpeakerVoiceEmotionConditionInput\n  ) {\n    createSpeakerVoiceEmotion(input: $input, condition: $condition) {\n      id\n      timestamp\n      score\n      neutral\n      happy\n      sad\n      angry\n      fearful\n      disgusted\n      surprised\n      meetingID\n      _version\n      _deleted\n      _lastChangedAt\n      createdAt\n      updatedAt\n      owner\n    }\n  }\n`;\nexport const updateSpeakerVoiceEmotion =\n/* GraphQL */\n`\n  mutation UpdateSpeakerVoiceEmotion(\n    $input: UpdateSpeakerVoiceEmotionInput!\n    $condition: ModelSpeakerVoiceEmotionConditionInput\n  ) {\n    updateSpeakerVoiceEmotion(input: $input, condition: $condition) {\n      id\n      timestamp\n      score\n      neutral\n      happy\n      sad\n      angry\n      fearful\n      disgusted\n      surprised\n      meetingID\n      _version\n      _deleted\n      _lastChangedAt\n      createdAt\n      updatedAt\n      owner\n    }\n  }\n`;\nexport const deleteSpeakerVoiceEmotion =\n/* GraphQL */\n`\n  mutation DeleteSpeakerVoiceEmotion(\n    $input: DeleteSpeakerVoiceEmotionInput!\n    $condition: ModelSpeakerVoiceEmotionConditionInput\n  ) {\n    deleteSpeakerVoiceEmotion(input: $input, condition: $condition) {\n      id\n      timestamp\n      score\n      neutral\n      happy\n      sad\n      angry\n      fearful\n      disgusted\n      surprised\n      meetingID\n      _version\n      _deleted\n      _lastChangedAt\n      createdAt\n      updatedAt\n      owner\n    }\n  }\n`;\nexport const createPublicMeetingInfo =\n/* GraphQL */\n`\n  mutation CreatePublicMeetingInfo(\n    $input: CreatePublicMeetingInfoInput!\n    $condition: ModelPublicMeetingInfoConditionInput\n  ) {\n    createPublicMeetingInfo(input: $input, condition: $condition) {\n      id\n      name\n      startedAt\n      stoppedAt\n      owner\n      _version\n      _deleted\n      _lastChangedAt\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updatePublicMeetingInfo =\n/* GraphQL */\n`\n  mutation UpdatePublicMeetingInfo(\n    $input: UpdatePublicMeetingInfoInput!\n    $condition: ModelPublicMeetingInfoConditionInput\n  ) {\n    updatePublicMeetingInfo(input: $input, condition: $condition) {\n      id\n      name\n      startedAt\n      stoppedAt\n      owner\n      _version\n      _deleted\n      _lastChangedAt\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deletePublicMeetingInfo =\n/* GraphQL */\n`\n  mutation DeletePublicMeetingInfo(\n    $input: DeletePublicMeetingInfoInput!\n    $condition: ModelPublicMeetingInfoConditionInput\n  ) {\n    deletePublicMeetingInfo(input: $input, condition: $condition) {\n      id\n      name\n      startedAt\n      stoppedAt\n      owner\n      _version\n      _deleted\n      _lastChangedAt\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const createRating =\n/* GraphQL */\n`\n  mutation CreateRating(\n    $input: CreateRatingInput!\n    $condition: ModelRatingConditionInput\n  ) {\n    createRating(input: $input, condition: $condition) {\n      id\n      overallStars\n      contentStars\n      paceStars\n      owner\n      publicmeetinginfoID\n      _version\n      _deleted\n      _lastChangedAt\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updateRating =\n/* GraphQL */\n`\n  mutation UpdateRating(\n    $input: UpdateRatingInput!\n    $condition: ModelRatingConditionInput\n  ) {\n    updateRating(input: $input, condition: $condition) {\n      id\n      overallStars\n      contentStars\n      paceStars\n      owner\n      publicmeetinginfoID\n      _version\n      _deleted\n      _lastChangedAt\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deleteRating =\n/* GraphQL */\n`\n  mutation DeleteRating(\n    $input: DeleteRatingInput!\n    $condition: ModelRatingConditionInput\n  ) {\n    deleteRating(input: $input, condition: $condition) {\n      id\n      overallStars\n      contentStars\n      paceStars\n      owner\n      publicmeetinginfoID\n      _version\n      _deleted\n      _lastChangedAt\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const createMeeting =\n/* GraphQL */\n`\n  mutation CreateMeeting(\n    $input: CreateMeetingInput!\n    $condition: ModelMeetingConditionInput\n  ) {\n    createMeeting(input: $input, condition: $condition) {\n      id\n      name\n      startedAt\n      stoppedAt\n      createdAt\n      updatedAt\n      _version\n      _deleted\n      _lastChangedAt\n      SpeakerVoiceEmotions {\n        items {\n          id\n          timestamp\n          score\n          neutral\n          happy\n          sad\n          angry\n          fearful\n          disgusted\n          surprised\n          meetingID\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n          owner\n        }\n        nextToken\n        startedAt\n      }\n      PublicMeetingInfo {\n        id\n        name\n        startedAt\n        stoppedAt\n        owner\n        _version\n        _deleted\n        _lastChangedAt\n        createdAt\n        updatedAt\n      }\n      owner\n      AudienceFaceExpressions {\n        items {\n          id\n          timestamp\n          score\n          surprised\n          happy\n          neutral\n          sad\n          disgusted\n          fearful\n          angry\n          meetingID\n          createdAt\n          updatedAt\n          _version\n          _deleted\n          _lastChangedAt\n          owner\n        }\n        nextToken\n        startedAt\n      }\n    }\n  }\n`;\nexport const updateMeeting =\n/* GraphQL */\n`\n  mutation UpdateMeeting(\n    $input: UpdateMeetingInput!\n    $condition: ModelMeetingConditionInput\n  ) {\n    updateMeeting(input: $input, condition: $condition) {\n      id\n      name\n      startedAt\n      stoppedAt\n      createdAt\n      updatedAt\n      _version\n      _deleted\n      _lastChangedAt\n      SpeakerVoiceEmotions {\n        items {\n          id\n          timestamp\n          score\n          neutral\n          happy\n          sad\n          angry\n          fearful\n          disgusted\n          surprised\n          meetingID\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n          owner\n        }\n        nextToken\n        startedAt\n      }\n      PublicMeetingInfo {\n        id\n        name\n        startedAt\n        stoppedAt\n        owner\n        _version\n        _deleted\n        _lastChangedAt\n        createdAt\n        updatedAt\n      }\n      owner\n      AudienceFaceExpressions {\n        items {\n          id\n          timestamp\n          score\n          surprised\n          happy\n          neutral\n          sad\n          disgusted\n          fearful\n          angry\n          meetingID\n          createdAt\n          updatedAt\n          _version\n          _deleted\n          _lastChangedAt\n          owner\n        }\n        nextToken\n        startedAt\n      }\n    }\n  }\n`;\nexport const deleteMeeting =\n/* GraphQL */\n`\n  mutation DeleteMeeting(\n    $input: DeleteMeetingInput!\n    $condition: ModelMeetingConditionInput\n  ) {\n    deleteMeeting(input: $input, condition: $condition) {\n      id\n      name\n      startedAt\n      stoppedAt\n      createdAt\n      updatedAt\n      _version\n      _deleted\n      _lastChangedAt\n      SpeakerVoiceEmotions {\n        items {\n          id\n          timestamp\n          score\n          neutral\n          happy\n          sad\n          angry\n          fearful\n          disgusted\n          surprised\n          meetingID\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n          owner\n        }\n        nextToken\n        startedAt\n      }\n      PublicMeetingInfo {\n        id\n        name\n        startedAt\n        stoppedAt\n        owner\n        _version\n        _deleted\n        _lastChangedAt\n        createdAt\n        updatedAt\n      }\n      owner\n      AudienceFaceExpressions {\n        items {\n          id\n          timestamp\n          score\n          surprised\n          happy\n          neutral\n          sad\n          disgusted\n          fearful\n          angry\n          meetingID\n          createdAt\n          updatedAt\n          _version\n          _deleted\n          _lastChangedAt\n          owner\n        }\n        nextToken\n        startedAt\n      }\n    }\n  }\n`;\nexport const createAudienceFaceExpression =\n/* GraphQL */\n`\n  mutation CreateAudienceFaceExpression(\n    $input: CreateAudienceFaceExpressionInput!\n    $condition: ModelAudienceFaceExpressionConditionInput\n  ) {\n    createAudienceFaceExpression(input: $input, condition: $condition) {\n      id\n      timestamp\n      score\n      surprised\n      happy\n      neutral\n      sad\n      disgusted\n      fearful\n      angry\n      meetingID\n      createdAt\n      updatedAt\n      _version\n      _deleted\n      _lastChangedAt\n      owner\n    }\n  }\n`;\nexport const updateAudienceFaceExpression =\n/* GraphQL */\n`\n  mutation UpdateAudienceFaceExpression(\n    $input: UpdateAudienceFaceExpressionInput!\n    $condition: ModelAudienceFaceExpressionConditionInput\n  ) {\n    updateAudienceFaceExpression(input: $input, condition: $condition) {\n      id\n      timestamp\n      score\n      surprised\n      happy\n      neutral\n      sad\n      disgusted\n      fearful\n      angry\n      meetingID\n      createdAt\n      updatedAt\n      _version\n      _deleted\n      _lastChangedAt\n      owner\n    }\n  }\n`;\nexport const deleteAudienceFaceExpression =\n/* GraphQL */\n`\n  mutation DeleteAudienceFaceExpression(\n    $input: DeleteAudienceFaceExpressionInput!\n    $condition: ModelAudienceFaceExpressionConditionInput\n  ) {\n    deleteAudienceFaceExpression(input: $input, condition: $condition) {\n      id\n      timestamp\n      score\n      surprised\n      happy\n      neutral\n      sad\n      disgusted\n      fearful\n      angry\n      meetingID\n      createdAt\n      updatedAt\n      _version\n      _deleted\n      _lastChangedAt\n      owner\n    }\n  }\n`;","map":{"version":3,"sources":["/Users/sanjayar/Desktop/moody-main copy 2/src/graphql/mutations.ts"],"names":["createSpeakerVoiceEmotion","updateSpeakerVoiceEmotion","deleteSpeakerVoiceEmotion","createPublicMeetingInfo","updatePublicMeetingInfo","deletePublicMeetingInfo","createRating","updateRating","deleteRating","createMeeting","updateMeeting","deleteMeeting","createAudienceFaceExpression","updateAudienceFaceExpression","deleteAudienceFaceExpression"],"mappings":"AAAA;;AACA;AACA;AAEA,OAAO,MAAMA,yBAAyB;AAAG;AAAe;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzBO;AA0BP,OAAO,MAAMC,yBAAyB;AAAG;AAAe;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzBO;AA0BP,OAAO,MAAMC,yBAAyB;AAAG;AAAe;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzBO;AA0BP,OAAO,MAAMC,uBAAuB;AAAG;AAAe;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBO;AAmBP,OAAO,MAAMC,uBAAuB;AAAG;AAAe;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBO;AAmBP,OAAO,MAAMC,uBAAuB;AAAG;AAAe;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBO;AAmBP,OAAO,MAAMC,YAAY;AAAG;AAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBO;AAoBP,OAAO,MAAMC,YAAY;AAAG;AAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBO;AAoBP,OAAO,MAAMC,YAAY;AAAG;AAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBO;AAoBP,OAAO,MAAMC,aAAa;AAAG;AAAe;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA5EO;AA6EP,OAAO,MAAMC,aAAa;AAAG;AAAe;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA5EO;AA6EP,OAAO,MAAMC,aAAa;AAAG;AAAe;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA5EO;AA6EP,OAAO,MAAMC,4BAA4B;AAAG;AAAe;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzBO;AA0BP,OAAO,MAAMC,4BAA4B;AAAG;AAAe;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzBO;AA0BP,OAAO,MAAMC,4BAA4B;AAAG;AAAe;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzBO","sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const createSpeakerVoiceEmotion = /* GraphQL */ `\n  mutation CreateSpeakerVoiceEmotion(\n    $input: CreateSpeakerVoiceEmotionInput!\n    $condition: ModelSpeakerVoiceEmotionConditionInput\n  ) {\n    createSpeakerVoiceEmotion(input: $input, condition: $condition) {\n      id\n      timestamp\n      score\n      neutral\n      happy\n      sad\n      angry\n      fearful\n      disgusted\n      surprised\n      meetingID\n      _version\n      _deleted\n      _lastChangedAt\n      createdAt\n      updatedAt\n      owner\n    }\n  }\n`;\nexport const updateSpeakerVoiceEmotion = /* GraphQL */ `\n  mutation UpdateSpeakerVoiceEmotion(\n    $input: UpdateSpeakerVoiceEmotionInput!\n    $condition: ModelSpeakerVoiceEmotionConditionInput\n  ) {\n    updateSpeakerVoiceEmotion(input: $input, condition: $condition) {\n      id\n      timestamp\n      score\n      neutral\n      happy\n      sad\n      angry\n      fearful\n      disgusted\n      surprised\n      meetingID\n      _version\n      _deleted\n      _lastChangedAt\n      createdAt\n      updatedAt\n      owner\n    }\n  }\n`;\nexport const deleteSpeakerVoiceEmotion = /* GraphQL */ `\n  mutation DeleteSpeakerVoiceEmotion(\n    $input: DeleteSpeakerVoiceEmotionInput!\n    $condition: ModelSpeakerVoiceEmotionConditionInput\n  ) {\n    deleteSpeakerVoiceEmotion(input: $input, condition: $condition) {\n      id\n      timestamp\n      score\n      neutral\n      happy\n      sad\n      angry\n      fearful\n      disgusted\n      surprised\n      meetingID\n      _version\n      _deleted\n      _lastChangedAt\n      createdAt\n      updatedAt\n      owner\n    }\n  }\n`;\nexport const createPublicMeetingInfo = /* GraphQL */ `\n  mutation CreatePublicMeetingInfo(\n    $input: CreatePublicMeetingInfoInput!\n    $condition: ModelPublicMeetingInfoConditionInput\n  ) {\n    createPublicMeetingInfo(input: $input, condition: $condition) {\n      id\n      name\n      startedAt\n      stoppedAt\n      owner\n      _version\n      _deleted\n      _lastChangedAt\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updatePublicMeetingInfo = /* GraphQL */ `\n  mutation UpdatePublicMeetingInfo(\n    $input: UpdatePublicMeetingInfoInput!\n    $condition: ModelPublicMeetingInfoConditionInput\n  ) {\n    updatePublicMeetingInfo(input: $input, condition: $condition) {\n      id\n      name\n      startedAt\n      stoppedAt\n      owner\n      _version\n      _deleted\n      _lastChangedAt\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deletePublicMeetingInfo = /* GraphQL */ `\n  mutation DeletePublicMeetingInfo(\n    $input: DeletePublicMeetingInfoInput!\n    $condition: ModelPublicMeetingInfoConditionInput\n  ) {\n    deletePublicMeetingInfo(input: $input, condition: $condition) {\n      id\n      name\n      startedAt\n      stoppedAt\n      owner\n      _version\n      _deleted\n      _lastChangedAt\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const createRating = /* GraphQL */ `\n  mutation CreateRating(\n    $input: CreateRatingInput!\n    $condition: ModelRatingConditionInput\n  ) {\n    createRating(input: $input, condition: $condition) {\n      id\n      overallStars\n      contentStars\n      paceStars\n      owner\n      publicmeetinginfoID\n      _version\n      _deleted\n      _lastChangedAt\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updateRating = /* GraphQL */ `\n  mutation UpdateRating(\n    $input: UpdateRatingInput!\n    $condition: ModelRatingConditionInput\n  ) {\n    updateRating(input: $input, condition: $condition) {\n      id\n      overallStars\n      contentStars\n      paceStars\n      owner\n      publicmeetinginfoID\n      _version\n      _deleted\n      _lastChangedAt\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deleteRating = /* GraphQL */ `\n  mutation DeleteRating(\n    $input: DeleteRatingInput!\n    $condition: ModelRatingConditionInput\n  ) {\n    deleteRating(input: $input, condition: $condition) {\n      id\n      overallStars\n      contentStars\n      paceStars\n      owner\n      publicmeetinginfoID\n      _version\n      _deleted\n      _lastChangedAt\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const createMeeting = /* GraphQL */ `\n  mutation CreateMeeting(\n    $input: CreateMeetingInput!\n    $condition: ModelMeetingConditionInput\n  ) {\n    createMeeting(input: $input, condition: $condition) {\n      id\n      name\n      startedAt\n      stoppedAt\n      createdAt\n      updatedAt\n      _version\n      _deleted\n      _lastChangedAt\n      SpeakerVoiceEmotions {\n        items {\n          id\n          timestamp\n          score\n          neutral\n          happy\n          sad\n          angry\n          fearful\n          disgusted\n          surprised\n          meetingID\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n          owner\n        }\n        nextToken\n        startedAt\n      }\n      PublicMeetingInfo {\n        id\n        name\n        startedAt\n        stoppedAt\n        owner\n        _version\n        _deleted\n        _lastChangedAt\n        createdAt\n        updatedAt\n      }\n      owner\n      AudienceFaceExpressions {\n        items {\n          id\n          timestamp\n          score\n          surprised\n          happy\n          neutral\n          sad\n          disgusted\n          fearful\n          angry\n          meetingID\n          createdAt\n          updatedAt\n          _version\n          _deleted\n          _lastChangedAt\n          owner\n        }\n        nextToken\n        startedAt\n      }\n    }\n  }\n`;\nexport const updateMeeting = /* GraphQL */ `\n  mutation UpdateMeeting(\n    $input: UpdateMeetingInput!\n    $condition: ModelMeetingConditionInput\n  ) {\n    updateMeeting(input: $input, condition: $condition) {\n      id\n      name\n      startedAt\n      stoppedAt\n      createdAt\n      updatedAt\n      _version\n      _deleted\n      _lastChangedAt\n      SpeakerVoiceEmotions {\n        items {\n          id\n          timestamp\n          score\n          neutral\n          happy\n          sad\n          angry\n          fearful\n          disgusted\n          surprised\n          meetingID\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n          owner\n        }\n        nextToken\n        startedAt\n      }\n      PublicMeetingInfo {\n        id\n        name\n        startedAt\n        stoppedAt\n        owner\n        _version\n        _deleted\n        _lastChangedAt\n        createdAt\n        updatedAt\n      }\n      owner\n      AudienceFaceExpressions {\n        items {\n          id\n          timestamp\n          score\n          surprised\n          happy\n          neutral\n          sad\n          disgusted\n          fearful\n          angry\n          meetingID\n          createdAt\n          updatedAt\n          _version\n          _deleted\n          _lastChangedAt\n          owner\n        }\n        nextToken\n        startedAt\n      }\n    }\n  }\n`;\nexport const deleteMeeting = /* GraphQL */ `\n  mutation DeleteMeeting(\n    $input: DeleteMeetingInput!\n    $condition: ModelMeetingConditionInput\n  ) {\n    deleteMeeting(input: $input, condition: $condition) {\n      id\n      name\n      startedAt\n      stoppedAt\n      createdAt\n      updatedAt\n      _version\n      _deleted\n      _lastChangedAt\n      SpeakerVoiceEmotions {\n        items {\n          id\n          timestamp\n          score\n          neutral\n          happy\n          sad\n          angry\n          fearful\n          disgusted\n          surprised\n          meetingID\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n          owner\n        }\n        nextToken\n        startedAt\n      }\n      PublicMeetingInfo {\n        id\n        name\n        startedAt\n        stoppedAt\n        owner\n        _version\n        _deleted\n        _lastChangedAt\n        createdAt\n        updatedAt\n      }\n      owner\n      AudienceFaceExpressions {\n        items {\n          id\n          timestamp\n          score\n          surprised\n          happy\n          neutral\n          sad\n          disgusted\n          fearful\n          angry\n          meetingID\n          createdAt\n          updatedAt\n          _version\n          _deleted\n          _lastChangedAt\n          owner\n        }\n        nextToken\n        startedAt\n      }\n    }\n  }\n`;\nexport const createAudienceFaceExpression = /* GraphQL */ `\n  mutation CreateAudienceFaceExpression(\n    $input: CreateAudienceFaceExpressionInput!\n    $condition: ModelAudienceFaceExpressionConditionInput\n  ) {\n    createAudienceFaceExpression(input: $input, condition: $condition) {\n      id\n      timestamp\n      score\n      surprised\n      happy\n      neutral\n      sad\n      disgusted\n      fearful\n      angry\n      meetingID\n      createdAt\n      updatedAt\n      _version\n      _deleted\n      _lastChangedAt\n      owner\n    }\n  }\n`;\nexport const updateAudienceFaceExpression = /* GraphQL */ `\n  mutation UpdateAudienceFaceExpression(\n    $input: UpdateAudienceFaceExpressionInput!\n    $condition: ModelAudienceFaceExpressionConditionInput\n  ) {\n    updateAudienceFaceExpression(input: $input, condition: $condition) {\n      id\n      timestamp\n      score\n      surprised\n      happy\n      neutral\n      sad\n      disgusted\n      fearful\n      angry\n      meetingID\n      createdAt\n      updatedAt\n      _version\n      _deleted\n      _lastChangedAt\n      owner\n    }\n  }\n`;\nexport const deleteAudienceFaceExpression = /* GraphQL */ `\n  mutation DeleteAudienceFaceExpression(\n    $input: DeleteAudienceFaceExpressionInput!\n    $condition: ModelAudienceFaceExpressionConditionInput\n  ) {\n    deleteAudienceFaceExpression(input: $input, condition: $condition) {\n      id\n      timestamp\n      score\n      surprised\n      happy\n      neutral\n      sad\n      disgusted\n      fearful\n      angry\n      meetingID\n      createdAt\n      updatedAt\n      _version\n      _deleted\n      _lastChangedAt\n      owner\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}