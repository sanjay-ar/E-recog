{"ast":null,"code":"var SHORT_TO_HEX = {};\nvar HEX_TO_SHORT = {};\n\nfor (var i = 0; i < 256; i++) {\n  var encodedByte = i.toString(16).toLowerCase();\n\n  if (encodedByte.length === 1) {\n    encodedByte = \"0\".concat(encodedByte);\n  }\n\n  SHORT_TO_HEX[i] = encodedByte;\n  HEX_TO_SHORT[encodedByte] = i;\n}\n\nexport function fromHex(encoded) {\n  if (encoded.length % 2 !== 0) {\n    throw new Error(\"Hex encoded strings must have an even number length\");\n  }\n\n  var out = new Uint8Array(encoded.length / 2);\n\n  for (var i = 0; i < encoded.length; i += 2) {\n    var encodedByte = encoded.slice(i, i + 2).toLowerCase();\n\n    if (encodedByte in HEX_TO_SHORT) {\n      out[i / 2] = HEX_TO_SHORT[encodedByte];\n    } else {\n      throw new Error(\"Cannot decode unrecognized sequence \".concat(encodedByte, \" as hexadecimal\"));\n    }\n  }\n\n  return out;\n}\nexport function toHex(bytes) {\n  var out = \"\";\n\n  for (var i = 0; i < bytes.byteLength; i++) {\n    out += SHORT_TO_HEX[bytes[i]];\n  }\n\n  return out;\n}","map":{"version":3,"sources":["/Users/sanjayar/Desktop/moody-main/node_modules/@aws-sdk/client-lex-runtime-service/node_modules/@aws-sdk/util-hex-encoding/dist-es/index.js"],"names":["SHORT_TO_HEX","HEX_TO_SHORT","i","encodedByte","toString","toLowerCase","length","concat","fromHex","encoded","Error","out","Uint8Array","slice","toHex","bytes","byteLength"],"mappings":"AAAA,IAAIA,YAAY,GAAG,EAAnB;AACA,IAAIC,YAAY,GAAG,EAAnB;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1B,MAAIC,WAAW,GAAGD,CAAC,CAACE,QAAF,CAAW,EAAX,EAAeC,WAAf,EAAlB;;AACA,MAAIF,WAAW,CAACG,MAAZ,KAAuB,CAA3B,EAA8B;AAC1BH,IAAAA,WAAW,GAAG,IAAII,MAAJ,CAAWJ,WAAX,CAAd;AACH;;AACDH,EAAAA,YAAY,CAACE,CAAD,CAAZ,GAAkBC,WAAlB;AACAF,EAAAA,YAAY,CAACE,WAAD,CAAZ,GAA4BD,CAA5B;AACH;;AACD,OAAO,SAASM,OAAT,CAAiBC,OAAjB,EAA0B;AAC7B,MAAIA,OAAO,CAACH,MAAR,GAAiB,CAAjB,KAAuB,CAA3B,EAA8B;AAC1B,UAAM,IAAII,KAAJ,CAAU,qDAAV,CAAN;AACH;;AACD,MAAIC,GAAG,GAAG,IAAIC,UAAJ,CAAeH,OAAO,CAACH,MAAR,GAAiB,CAAhC,CAAV;;AACA,OAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGO,OAAO,CAACH,MAA5B,EAAoCJ,CAAC,IAAI,CAAzC,EAA4C;AACxC,QAAIC,WAAW,GAAGM,OAAO,CAACI,KAAR,CAAcX,CAAd,EAAiBA,CAAC,GAAG,CAArB,EAAwBG,WAAxB,EAAlB;;AACA,QAAIF,WAAW,IAAIF,YAAnB,EAAiC;AAC7BU,MAAAA,GAAG,CAACT,CAAC,GAAG,CAAL,CAAH,GAAaD,YAAY,CAACE,WAAD,CAAzB;AACH,KAFD,MAGK;AACD,YAAM,IAAIO,KAAJ,CAAU,uCAAuCH,MAAvC,CAA8CJ,WAA9C,EAA2D,iBAA3D,CAAV,CAAN;AACH;AACJ;;AACD,SAAOQ,GAAP;AACH;AACD,OAAO,SAASG,KAAT,CAAeC,KAAf,EAAsB;AACzB,MAAIJ,GAAG,GAAG,EAAV;;AACA,OAAK,IAAIT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGa,KAAK,CAACC,UAA1B,EAAsCd,CAAC,EAAvC,EAA2C;AACvCS,IAAAA,GAAG,IAAIX,YAAY,CAACe,KAAK,CAACb,CAAD,CAAN,CAAnB;AACH;;AACD,SAAOS,GAAP;AACH","sourcesContent":["var SHORT_TO_HEX = {};\nvar HEX_TO_SHORT = {};\nfor (var i = 0; i < 256; i++) {\n    var encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = \"0\".concat(encodedByte);\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\nexport function fromHex(encoded) {\n    if (encoded.length % 2 !== 0) {\n        throw new Error(\"Hex encoded strings must have an even number length\");\n    }\n    var out = new Uint8Array(encoded.length / 2);\n    for (var i = 0; i < encoded.length; i += 2) {\n        var encodedByte = encoded.slice(i, i + 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(\"Cannot decode unrecognized sequence \".concat(encodedByte, \" as hexadecimal\"));\n        }\n    }\n    return out;\n}\nexport function toHex(bytes) {\n    var out = \"\";\n    for (var i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n}\n"]},"metadata":{},"sourceType":"module"}