{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n};\n\nimport { Buffer } from 'buffer';\nimport { monotonicFactory } from 'ulid';\nimport { v4 as uuid } from 'uuid';\nimport { produce, applyPatches } from 'immer';\nimport { isPredicateGroup, isPredicateObj, SortDirection, isModelAttributeKey, isModelAttributePrimaryKey, isModelAttributeCompositeKey, LimitTimerRaceResolvedValues } from './types';\nimport { WordArray } from 'amazon-cognito-identity-js';\nexport var ID = 'id';\n/**\n * Used by the Async Storage Adapter to concatenate key values\n * for a record. For instance, if a model has the following keys:\n * `customId: ID! @primaryKey(sortKeyFields: [\"createdAt\"])`,\n * we concatenate the `customId` and `createdAt` as:\n * `12-234-5#2022-09-28T00:00:00.000Z`\n */\n\nexport var DEFAULT_PRIMARY_KEY_VALUE_SEPARATOR = '#';\n/**\n * Used for generating spinal-cased index name from an array of\n * key field names.\n * E.g. for keys `[id, title]` => 'id-title'\n */\n\nexport var IDENTIFIER_KEY_SEPARATOR = '-';\nexport var errorMessages = {\n  idEmptyString: 'An index field cannot contain an empty string value',\n  queryByPkWithCompositeKeyPresent: 'Models with composite primary keys cannot be queried by a single key value. Use object literal syntax for composite keys instead: https://docs.amplify.aws/lib/datastore/advanced-workflows/q/platform/js/#querying-records-with-custom-primary-keys',\n  deleteByPkWithCompositeKeyPresent: 'Models with composite primary keys cannot be deleted by a single key value, unless using a predicate. Use object literal syntax for composite keys instead: https://docs.amplify.aws/lib/datastore/advanced-workflows/q/platform/js/#querying-records-with-custom-primary-keys',\n  observeWithObjectLiteral: 'Object literal syntax cannot be used with observe. Use a predicate instead: https://docs.amplify.aws/lib/datastore/data-access/q/platform/js/#predicates'\n};\nexport var NAMESPACES;\n\n(function (NAMESPACES) {\n  NAMESPACES[\"DATASTORE\"] = \"datastore\";\n  NAMESPACES[\"USER\"] = \"user\";\n  NAMESPACES[\"SYNC\"] = \"sync\";\n  NAMESPACES[\"STORAGE\"] = \"storage\";\n})(NAMESPACES || (NAMESPACES = {}));\n\nvar DATASTORE = NAMESPACES.DATASTORE;\nvar USER = NAMESPACES.USER;\nvar SYNC = NAMESPACES.SYNC;\nvar STORAGE = NAMESPACES.STORAGE;\nexport { USER, SYNC, STORAGE, DATASTORE };\nexport var USER_AGENT_SUFFIX_DATASTORE = '/DataStore';\nexport var exhaustiveCheck = function (obj, throwOnError) {\n  if (throwOnError === void 0) {\n    throwOnError = true;\n  }\n\n  if (throwOnError) {\n    throw new Error(\"Invalid \" + obj);\n  }\n};\nexport var isNullOrUndefined = function (val) {\n  return typeof val === 'undefined' || val === undefined || val === null;\n};\nexport var validatePredicate = function (model, groupType, predicatesOrGroups) {\n  var filterType;\n  var isNegation = false;\n\n  if (predicatesOrGroups.length === 0) {\n    return true;\n  }\n\n  switch (groupType) {\n    case 'not':\n      filterType = 'every';\n      isNegation = true;\n      break;\n\n    case 'and':\n      filterType = 'every';\n      break;\n\n    case 'or':\n      filterType = 'some';\n      break;\n\n    default:\n      exhaustiveCheck(groupType);\n  }\n\n  var result = predicatesOrGroups[filterType](function (predicateOrGroup) {\n    if (isPredicateObj(predicateOrGroup)) {\n      var field = predicateOrGroup.field,\n          operator = predicateOrGroup.operator,\n          operand = predicateOrGroup.operand;\n      var value = model[field];\n      return validatePredicateField(value, operator, operand);\n    }\n\n    if (isPredicateGroup(predicateOrGroup)) {\n      var type = predicateOrGroup.type,\n          predicates = predicateOrGroup.predicates;\n      return validatePredicate(model, type, predicates);\n    }\n\n    throw new Error('Not a predicate or group');\n  });\n  return isNegation ? !result : result;\n};\nexport var validatePredicateField = function (value, operator, operand) {\n  switch (operator) {\n    case 'ne':\n      return value !== operand;\n\n    case 'eq':\n      return value === operand;\n\n    case 'le':\n      return value <= operand;\n\n    case 'lt':\n      return value < operand;\n\n    case 'ge':\n      return value >= operand;\n\n    case 'gt':\n      return value > operand;\n\n    case 'between':\n      var _c = __read(operand, 2),\n          min = _c[0],\n          max = _c[1];\n\n      return value >= min && value <= max;\n\n    case 'beginsWith':\n      return !isNullOrUndefined(value) && value.startsWith(operand);\n\n    case 'contains':\n      return !isNullOrUndefined(value) && value.indexOf(operand) > -1;\n\n    case 'notContains':\n      return isNullOrUndefined(value) || value.indexOf(operand) === -1;\n\n    default:\n      exhaustiveCheck(operator, false);\n      return false;\n  }\n};\nexport var isModelConstructor = function (obj) {\n  return obj && typeof obj.copyOf === 'function';\n};\nvar nonModelClasses = new WeakSet();\nexport function registerNonModelClass(clazz) {\n  nonModelClasses.add(clazz);\n}\nexport var isNonModelConstructor = function (obj) {\n  return nonModelClasses.has(obj);\n};\nvar topologicallySortedModels = new WeakMap();\nexport var traverseModel = function (srcModelName, instance, namespace, modelInstanceCreator, getModelConstructorByModelName) {\n  var relationships = namespace.relationships;\n  var modelConstructor = getModelConstructorByModelName(namespace.name, srcModelName);\n  var relation = relationships[srcModelName];\n  var result = [];\n  var newInstance = modelConstructor.copyOf(instance, function (draftInstance) {\n    relation.relationTypes.forEach(function (rItem) {\n      var modelConstructor = getModelConstructorByModelName(namespace.name, rItem.modelName);\n\n      switch (rItem.relationType) {\n        case 'HAS_ONE':\n          if (instance[rItem.fieldName]) {\n            var modelInstance = void 0;\n\n            try {\n              modelInstance = modelInstanceCreator(modelConstructor, instance[rItem.fieldName]);\n            } catch (error) {\n              // Do nothing\n              console.log(error);\n            }\n\n            result.push({\n              modelName: rItem.modelName,\n              item: instance[rItem.fieldName],\n              instance: modelInstance\n            });\n            var targetNames = extractTargetNamesFromSrc(rItem); // `targetName` will be defined for Has One if feature flag\n            // https://docs.amplify.aws/cli/reference/feature-flags/#useAppsyncModelgenPlugin\n            // is true (default as of 5/7/21)\n            // Making this conditional for backward-compatibility\n\n            if (targetNames) {\n              targetNames.forEach(function (targetName, idx) {\n                // Get the connected record\n                var relatedRecordInProxy = draftInstance[rItem.fieldName]; // Previously, we used the hardcoded 'id' as they key,\n                // now we need the value of the key to get the PK (and SK)\n                // values from the related record\n\n                var primaryKey = namespace.keys[modelConstructor.name].primaryKey;\n                var keyField = primaryKey && primaryKey[idx]; // Get the value\n\n                var relatedRecordInProxyPkValue = relatedRecordInProxy[keyField]; // Set the targetName value\n\n                draftInstance[targetName] = relatedRecordInProxyPkValue;\n              }); // Delete the instance from the proxy\n\n              delete draftInstance[rItem.fieldName];\n            } else {\n              draftInstance[rItem.fieldName] = draftInstance[rItem.fieldName].id;\n            }\n          }\n\n          break;\n\n        case 'BELONGS_TO':\n          if (instance[rItem.fieldName]) {\n            var modelInstance = void 0;\n\n            try {\n              modelInstance = modelInstanceCreator(modelConstructor, instance[rItem.fieldName]);\n            } catch (error) {// Do nothing\n            }\n\n            var isDeleted = draftInstance[rItem.fieldName]._deleted;\n\n            if (!isDeleted) {\n              result.push({\n                modelName: rItem.modelName,\n                item: instance[rItem.fieldName],\n                instance: modelInstance\n              });\n            }\n          }\n\n          if (draftInstance[rItem.fieldName]) {\n            var targetNames = extractTargetNamesFromSrc(rItem);\n\n            if (targetNames) {\n              targetNames.forEach(function (targetName, idx) {\n                // Get the connected record\n                var relatedRecordInProxy = draftInstance[rItem.fieldName]; // Previously, we used the hardcoded `id` for the key.\n                // Now, we need the value of the key to get the PK (and SK)\n                // values from the related record\n\n                var primaryKey = namespace.keys[modelConstructor.name].primaryKey; // fall back to ID if\n\n                var keyField = primaryKey && primaryKey[idx]; // Get the value\n\n                var relatedRecordInProxyPkValue = relatedRecordInProxy[keyField]; // Set the targetName value\n\n                draftInstance[targetName] = relatedRecordInProxyPkValue;\n              }); // Delete the instance from the proxy\n\n              delete draftInstance[rItem.fieldName];\n            }\n          }\n\n          break;\n\n        case 'HAS_MANY':\n          // Intentionally blank\n          break;\n\n        default:\n          exhaustiveCheck(rItem.relationType);\n          break;\n      }\n    });\n  });\n  result.unshift({\n    modelName: srcModelName,\n    item: newInstance,\n    instance: newInstance\n  });\n\n  if (!topologicallySortedModels.has(namespace)) {\n    topologicallySortedModels.set(namespace, Array.from(namespace.modelTopologicalOrdering.keys()));\n  }\n\n  var sortedModels = topologicallySortedModels.get(namespace);\n  result.sort(function (a, b) {\n    return sortedModels.indexOf(a.modelName) - sortedModels.indexOf(b.modelName);\n  });\n  return result;\n};\nvar privateModeCheckResult;\nexport var isPrivateMode = function () {\n  return new Promise(function (resolve) {\n    var dbname = uuid();\n    var db;\n\n    var isPrivate = function () {\n      privateModeCheckResult = false;\n      resolve(true);\n    };\n\n    var isNotPrivate = function () {\n      return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              if (!(db && db.result && typeof db.result.close === 'function')) return [3\n              /*break*/\n              , 2];\n              return [4\n              /*yield*/\n              , db.result.close()];\n\n            case 1:\n              _c.sent();\n\n              _c.label = 2;\n\n            case 2:\n              return [4\n              /*yield*/\n              , indexedDB.deleteDatabase(dbname)];\n\n            case 3:\n              _c.sent();\n\n              privateModeCheckResult = true;\n              return [2\n              /*return*/\n              , resolve(false)];\n          }\n        });\n      });\n    };\n\n    if (privateModeCheckResult === true) {\n      return isNotPrivate();\n    }\n\n    if (privateModeCheckResult === false) {\n      return isPrivate();\n    }\n\n    if (indexedDB === null) return isPrivate();\n    db = indexedDB.open(dbname);\n    db.onerror = isPrivate;\n    db.onsuccess = isNotPrivate;\n  });\n};\nvar safariCompatabilityModeResult;\n/**\n * Whether the browser's implementation of IndexedDB breaks on array lookups\n * against composite indexes whose keypath contains a single column.\n *\n * E.g., Whether `store.createIndex(indexName, ['id'])` followed by\n * `store.index(indexName).get([1])` will *ever* return records.\n *\n * In all known, modern Safari browsers as of Q4 2022, the query against an index like\n * this will *always* return `undefined`. So, the index needs to be created as a scalar.\n */\n\nexport var isSafariCompatabilityMode = function () {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var dbName_1, storeName_1, indexName_1, db_1, rwTx, rwStore, result, error_1;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _c.trys.push([0, 6,, 7]);\n\n          dbName_1 = uuid();\n          storeName_1 = 'indexedDBFeatureProbeStore';\n          indexName_1 = 'idx';\n          if (indexedDB === null) return [2\n          /*return*/\n          , false];\n\n          if (safariCompatabilityModeResult !== undefined) {\n            return [2\n            /*return*/\n            , safariCompatabilityModeResult];\n          }\n\n          return [4\n          /*yield*/\n          , new Promise(function (resolve) {\n            var dbOpenRequest = indexedDB.open(dbName_1);\n\n            dbOpenRequest.onerror = function () {\n              return resolve(false);\n            };\n\n            dbOpenRequest.onsuccess = function () {\n              var db = dbOpenRequest.result;\n              resolve(db);\n            };\n\n            dbOpenRequest.onupgradeneeded = function (event) {\n              var _c;\n\n              var db = (_c = event === null || event === void 0 ? void 0 : event.target) === null || _c === void 0 ? void 0 : _c.result;\n\n              db.onerror = function () {\n                return resolve(false);\n              };\n\n              var store = db.createObjectStore(storeName_1, {\n                autoIncrement: true\n              });\n              store.createIndex(indexName_1, ['id']);\n            };\n          })];\n\n        case 1:\n          db_1 = _c.sent();\n\n          if (!db_1) {\n            throw new Error('Could not open probe DB');\n          }\n\n          rwTx = db_1.transaction(storeName_1, 'readwrite');\n          rwStore = rwTx.objectStore(storeName_1);\n          rwStore.add({\n            id: 1\n          });\n          rwTx.commit();\n          return [4\n          /*yield*/\n          , new Promise(function (resolve) {\n            var tx = db_1.transaction(storeName_1, 'readonly');\n            var store = tx.objectStore(storeName_1);\n            var index = store.index(indexName_1);\n            var getRequest = index.get([1]);\n\n            getRequest.onerror = function () {\n              return resolve(false);\n            };\n\n            getRequest.onsuccess = function (event) {\n              var _c;\n\n              resolve((_c = event === null || event === void 0 ? void 0 : event.target) === null || _c === void 0 ? void 0 : _c.result);\n            };\n          })];\n\n        case 2:\n          result = _c.sent();\n          if (!(db_1 && typeof db_1.close === 'function')) return [3\n          /*break*/\n          , 4];\n          return [4\n          /*yield*/\n          , db_1.close()];\n\n        case 3:\n          _c.sent();\n\n          _c.label = 4;\n\n        case 4:\n          return [4\n          /*yield*/\n          , indexedDB.deleteDatabase(dbName_1)];\n\n        case 5:\n          _c.sent();\n\n          if (result === undefined) {\n            safariCompatabilityModeResult = true;\n          } else {\n            safariCompatabilityModeResult = false;\n          }\n\n          return [3\n          /*break*/\n          , 7];\n\n        case 6:\n          error_1 = _c.sent();\n          safariCompatabilityModeResult = false;\n          return [3\n          /*break*/\n          , 7];\n\n        case 7:\n          return [2\n          /*return*/\n          , safariCompatabilityModeResult];\n      }\n    });\n  });\n};\n\nvar randomBytes = function (nBytes) {\n  return Buffer.from(new WordArray().random(nBytes).toString(), 'hex');\n};\n\nvar prng = function () {\n  return randomBytes(1).readUInt8(0) / 0xff;\n};\n\nexport function monotonicUlidFactory(seed) {\n  var ulid = monotonicFactory(prng);\n  return function () {\n    return ulid(seed);\n  };\n}\n/**\n * Uses performance.now() if available, otherwise, uses Date.now() (e.g. react native without a polyfill)\n *\n * The values returned by performance.now() always increase at a constant rate,\n * independent of the system clock (which might be adjusted manually or skewed\n * by software like NTP).\n *\n * Otherwise, performance.timing.navigationStart + performance.now() will be\n * approximately equal to Date.now()\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Performance/now#Example\n */\n\nexport function getNow() {\n  if (typeof performance !== 'undefined' && performance && typeof performance.now === 'function') {\n    return performance.now() | 0; // convert to integer\n  } else {\n    return Date.now();\n  }\n}\nexport function sortCompareFunction(sortPredicates) {\n  return function compareFunction(a, b) {\n    var e_1, _c;\n\n    try {\n      // enable multi-field sort by iterating over predicates until\n      // a comparison returns -1 or 1\n      for (var sortPredicates_1 = __values(sortPredicates), sortPredicates_1_1 = sortPredicates_1.next(); !sortPredicates_1_1.done; sortPredicates_1_1 = sortPredicates_1.next()) {\n        var predicate = sortPredicates_1_1.value;\n        var field = predicate.field,\n            sortDirection = predicate.sortDirection; // reverse result when direction is descending\n\n        var sortMultiplier = sortDirection === SortDirection.ASCENDING ? 1 : -1;\n\n        if (a[field] < b[field]) {\n          return -1 * sortMultiplier;\n        }\n\n        if (a[field] > b[field]) {\n          return 1 * sortMultiplier;\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (sortPredicates_1_1 && !sortPredicates_1_1.done && (_c = sortPredicates_1.return)) _c.call(sortPredicates_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    return 0;\n  };\n} // deep compare any 2 values\n// primitives or object types (including arrays, Sets, and Maps)\n// returns true if equal by value\n// if nullish is true, treat undefined and null values as equal\n// to normalize for GQL response values for undefined fields\n\nexport function valuesEqual(valA, valB, nullish) {\n  var e_2, _c;\n\n  if (nullish === void 0) {\n    nullish = false;\n  }\n\n  var a = valA;\n  var b = valB;\n\n  var nullishCompare = function (_a, _b) {\n    return (_a === undefined || _a === null) && (_b === undefined || _b === null);\n  }; // if one of the values is a primitive and the other is an object\n\n\n  if (a instanceof Object && !(b instanceof Object) || !(a instanceof Object) && b instanceof Object) {\n    return false;\n  } // compare primitive types\n\n\n  if (!(a instanceof Object)) {\n    if (nullish && nullishCompare(a, b)) {\n      return true;\n    }\n\n    return a === b;\n  } // make sure object types match\n\n\n  if (Array.isArray(a) && !Array.isArray(b) || Array.isArray(b) && !Array.isArray(a)) {\n    return false;\n  }\n\n  if (a instanceof Set && b instanceof Set) {\n    a = __spread(a);\n    b = __spread(b);\n  }\n\n  if (a instanceof Map && b instanceof Map) {\n    a = Object.fromEntries(a);\n    b = Object.fromEntries(b);\n  }\n\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b); // last condition is to ensure that [] !== [null] even if nullish. However [undefined] === [null] when nullish\n\n  if (aKeys.length !== bKeys.length && (!nullish || Array.isArray(a))) {\n    return false;\n  } // iterate through the longer set of keys\n  // e.g., for a nullish comparison of a={ a: 1 } and b={ a: 1, b: null }\n  // we want to iterate through bKeys\n\n\n  var keys = aKeys.length >= bKeys.length ? aKeys : bKeys;\n\n  try {\n    for (var keys_1 = __values(keys), keys_1_1 = keys_1.next(); !keys_1_1.done; keys_1_1 = keys_1.next()) {\n      var key = keys_1_1.value;\n      var aVal = a[key];\n      var bVal = b[key];\n\n      if (!valuesEqual(aVal, bVal, nullish)) {\n        return false;\n      }\n    }\n  } catch (e_2_1) {\n    e_2 = {\n      error: e_2_1\n    };\n  } finally {\n    try {\n      if (keys_1_1 && !keys_1_1.done && (_c = keys_1.return)) _c.call(keys_1);\n    } finally {\n      if (e_2) throw e_2.error;\n    }\n  }\n\n  return true;\n}\nexport var isAWSDate = function (val) {\n  return !!/^\\d{4}-\\d{2}-\\d{2}(Z|[+-]\\d{2}:\\d{2}($|:\\d{2}))?$/.exec(val);\n};\nexport var isAWSTime = function (val) {\n  return !!/^\\d{2}:\\d{2}(:\\d{2}(.\\d+)?)?(Z|[+-]\\d{2}:\\d{2}($|:\\d{2}))?$/.exec(val);\n};\nexport var isAWSDateTime = function (val) {\n  return !!/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}(:\\d{2}(.\\d+)?)?(Z|[+-]\\d{2}:\\d{2}($|:\\d{2}))?$/.exec(val);\n};\nexport var isAWSTimestamp = function (val) {\n  return !!/^\\d+$/.exec(String(val));\n};\nexport var isAWSEmail = function (val) {\n  return !!/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.exec(val);\n};\nexport var isAWSJSON = function (val) {\n  try {\n    JSON.parse(val);\n    return true;\n  } catch (_c) {\n    return false;\n  }\n};\nexport var isAWSURL = function (val) {\n  try {\n    return !!new URL(val);\n  } catch (_c) {\n    return false;\n  }\n};\nexport var isAWSPhone = function (val) {\n  return !!/^\\+?\\d[\\d\\s-]+$/.exec(val);\n};\nexport var isAWSIPAddress = function (val) {\n  return !!/((^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$)|(^((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?$))$/.exec(val);\n};\n\nvar DeferredPromise =\n/** @class */\nfunction () {\n  function DeferredPromise() {\n    var self = this;\n    this.promise = new Promise(function (resolve, reject) {\n      self.resolve = resolve;\n      self.reject = reject;\n    });\n  }\n\n  return DeferredPromise;\n}();\n\nexport { DeferredPromise };\n\nvar DeferredCallbackResolver =\n/** @class */\nfunction () {\n  function DeferredCallbackResolver(options) {\n    this.limitPromise = new DeferredPromise();\n    this.raceInFlight = false;\n\n    this.callback = function () {};\n\n    this.defaultErrorHandler = function (msg) {\n      if (msg === void 0) {\n        msg = 'DeferredCallbackResolver error';\n      }\n\n      throw new Error(msg);\n    };\n\n    this.callback = options.callback;\n    this.errorHandler = options.errorHandler || this.defaultErrorHandler;\n    this.maxInterval = options.maxInterval || 2000;\n  }\n\n  DeferredCallbackResolver.prototype.startTimer = function () {\n    var _this = this;\n\n    this.timerPromise = new Promise(function (resolve, reject) {\n      _this.timer = setTimeout(function () {\n        resolve(LimitTimerRaceResolvedValues.TIMER);\n      }, _this.maxInterval);\n    });\n  };\n\n  DeferredCallbackResolver.prototype.racePromises = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var winner, err_1;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _c.trys.push([0, 2, 3, 4]);\n\n            this.raceInFlight = true;\n            this.startTimer();\n            return [4\n            /*yield*/\n            , Promise.race([this.timerPromise, this.limitPromise.promise])];\n\n          case 1:\n            winner = _c.sent();\n            this.callback();\n            return [3\n            /*break*/\n            , 4];\n\n          case 2:\n            err_1 = _c.sent();\n            this.errorHandler(err_1);\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            // reset for the next race\n            this.clear();\n            this.raceInFlight = false;\n            this.limitPromise = new DeferredPromise();\n            return [2\n            /*return*/\n            , winner];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  DeferredCallbackResolver.prototype.start = function () {\n    if (!this.raceInFlight) this.racePromises();\n  };\n\n  DeferredCallbackResolver.prototype.clear = function () {\n    clearTimeout(this.timer);\n  };\n\n  DeferredCallbackResolver.prototype.resolve = function () {\n    this.limitPromise.resolve(LimitTimerRaceResolvedValues.LIMIT);\n  };\n\n  return DeferredCallbackResolver;\n}();\n\nexport { DeferredCallbackResolver };\n/**\n * merge two sets of patches created by immer produce.\n * newPatches take precedent over oldPatches for patches modifying the same path.\n * In the case many consecutive pathces are merged the original model should\n * always be the root model.\n *\n * Example:\n * A -> B, patches1\n * B -> C, patches2\n *\n * mergePatches(A, patches1, patches2) to get patches for A -> C\n *\n * @param originalSource the original Model the patches should be applied to\n * @param oldPatches immer produce patch list\n * @param newPatches immer produce patch list (will take precedence)\n * @return merged patches\n */\n\nexport function mergePatches(originalSource, oldPatches, newPatches) {\n  var patchesToMerge = oldPatches.concat(newPatches);\n  var patches;\n  produce(originalSource, function (draft) {\n    applyPatches(draft, patchesToMerge);\n  }, function (p) {\n    patches = p;\n  });\n  return patches;\n}\nexport var getStorename = function (namespace, modelName) {\n  var storeName = namespace + \"_\" + modelName;\n  return storeName;\n}; //#region Key Utils\n\n/*\n  When we have GSI(s) with composite sort keys defined on a model\n    There are some very particular rules regarding which fields must be included in the update mutation input\n    The field selection becomes more complex as the number of GSIs with composite sort keys grows\n\n    To summarize: any time we update a field that is part of the composite sort key of a GSI, we must include:\n     1. all of the other fields in that composite sort key\n     2. all of the fields from any other composite sort key that intersect with the fields from 1.\n\n     E.g.,\n     Model @model\n        @key(name: 'key1' fields: ['hk', 'a', 'b', 'c'])\n        @key(name: 'key2' fields: ['hk', 'a', 'b', 'd'])\n        @key(name: 'key3' fields: ['hk', 'x', 'y', 'z'])\n\n    Model.a is updated => include ['a', 'b', 'c', 'd']\n    Model.c is updated => include ['a', 'b', 'c', 'd']\n    Model.d is updated => include ['a', 'b', 'c', 'd']\n    Model.x is updated => include ['x', 'y', 'z']\n\n    This function accepts a model's attributes and returns grouped sets of composite key fields\n    Using our example Model above, the function will return:\n    [\n        Set('a', 'b', 'c', 'd'),\n        Set('x', 'y', 'z'),\n    ]\n\n    This gives us the opportunity to correctly include the required fields for composite keys\n    When crafting the mutation input in Storage.getUpdateMutationInput\n\n    See 'processCompositeKeys' test in util.test.ts for more examples\n*/\n\nexport var processCompositeKeys = function (attributes) {\n  var extractCompositeSortKey = function (_c) {\n    var // ignore the HK (fields[0]) we only need to include the composite sort key fields[1...n]\n    _d = __read(_c.properties.fields),\n        sortKeyFields = _d.slice(1);\n\n    return sortKeyFields;\n  };\n\n  var compositeKeyFields = attributes.filter(isModelAttributeCompositeKey).map(extractCompositeSortKey);\n  /*\n      if 2 sets of fields have any intersecting fields => combine them into 1 union set\n      e.g., ['a', 'b', 'c'] and ['a', 'b', 'd'] => ['a', 'b', 'c', 'd']\n  */\n\n  var combineIntersecting = function (fields) {\n    return fields.reduce(function (combined, sortKeyFields) {\n      var sortKeyFieldsSet = new Set(sortKeyFields);\n\n      if (combined.length === 0) {\n        combined.push(sortKeyFieldsSet);\n        return combined;\n      } // does the current set share values with another set we've already added to `combined`?\n\n\n      var intersectingSetIdx = combined.findIndex(function (existingSet) {\n        return __spread(existingSet).some(function (f) {\n          return sortKeyFieldsSet.has(f);\n        });\n      });\n\n      if (intersectingSetIdx > -1) {\n        var union = new Set(__spread(combined[intersectingSetIdx], sortKeyFieldsSet)); // combine the current set with the intersecting set we found above\n\n        combined[intersectingSetIdx] = union;\n      } else {\n        // none of the sets in `combined` have intersecting values with the current set\n        combined.push(sortKeyFieldsSet);\n      }\n\n      return combined;\n    }, []);\n  };\n\n  var initial = combineIntersecting(compositeKeyFields); // a single pass pay not be enough to correctly combine all the fields\n  // call the function once more to get a final merged list of sets\n\n  var combined = combineIntersecting(initial);\n  return combined;\n};\nexport var extractKeyIfExists = function (modelDefinition) {\n  var _c;\n\n  var keyAttribute = (_c = modelDefinition === null || modelDefinition === void 0 ? void 0 : modelDefinition.attributes) === null || _c === void 0 ? void 0 : _c.find(isModelAttributeKey);\n  return keyAttribute;\n};\nexport var extractPrimaryKeyFieldNames = function (modelDefinition) {\n  var keyAttribute = extractKeyIfExists(modelDefinition);\n\n  if (keyAttribute && isModelAttributePrimaryKey(keyAttribute)) {\n    return keyAttribute.properties.fields;\n  }\n\n  return [ID];\n};\nexport var extractPrimaryKeyValues = function (model, keyFields) {\n  return keyFields.map(function (key) {\n    return model[key];\n  });\n};\nexport var extractPrimaryKeysAndValues = function (model, keyFields) {\n  var primaryKeysAndValues = {};\n  keyFields.forEach(function (key) {\n    return primaryKeysAndValues[key] = model[key];\n  });\n  return primaryKeysAndValues;\n}; // IdentifierFields<ManagedIdentifier>\n// Default behavior without explicit @primaryKey defined\n\nexport var isIdManaged = function (modelDefinition) {\n  var keyAttribute = extractKeyIfExists(modelDefinition);\n\n  if (keyAttribute && isModelAttributePrimaryKey(keyAttribute)) {\n    return false;\n  }\n\n  return true;\n}; // IdentifierFields<OptionallyManagedIdentifier>\n// @primaryKey with explicit `id` in the PK. Single key or composite\n\nexport var isIdOptionallyManaged = function (modelDefinition) {\n  var keyAttribute = extractKeyIfExists(modelDefinition);\n\n  if (keyAttribute && isModelAttributePrimaryKey(keyAttribute)) {\n    return keyAttribute.properties.fields[0] === ID;\n  }\n\n  return false;\n};\nexport var establishRelationAndKeys = function (namespace) {\n  var relationship = {};\n  var keys = {};\n  Object.keys(namespace.models).forEach(function (mKey) {\n    var e_3, _c;\n\n    relationship[mKey] = {\n      indexes: [],\n      relationTypes: []\n    };\n    keys[mKey] = {};\n    var model = namespace.models[mKey];\n    Object.keys(model.fields).forEach(function (attr) {\n      var fieldAttribute = model.fields[attr];\n\n      if (typeof fieldAttribute.type === 'object' && 'model' in fieldAttribute.type) {\n        var connectionType = fieldAttribute.association.connectionType;\n        relationship[mKey].relationTypes.push({\n          fieldName: fieldAttribute.name,\n          modelName: fieldAttribute.type.model,\n          relationType: connectionType,\n          targetName: fieldAttribute.association['targetName'],\n          targetNames: fieldAttribute.association['targetNames'],\n          associatedWith: fieldAttribute.association['associatedWith']\n        });\n\n        if (connectionType === 'BELONGS_TO') {\n          var targetNames = extractTargetNamesFromSrc(fieldAttribute.association);\n\n          if (targetNames) {\n            var idxName = indexNameFromKeys(targetNames);\n            relationship[mKey].indexes.push([idxName, targetNames]);\n          }\n        }\n      }\n    });\n\n    if (model.attributes) {\n      keys[mKey].compositeKeys = processCompositeKeys(model.attributes);\n\n      var _loop_1 = function (attribute) {\n        if (!isModelAttributeKey(attribute)) {\n          return \"continue\";\n        }\n\n        var fields = attribute.properties.fields;\n\n        if (isModelAttributePrimaryKey(attribute)) {\n          keys[mKey].primaryKey = fields;\n          return \"continue\";\n        } // create indexes for all other keys\n\n\n        var idxName = indexNameFromKeys(fields);\n        var idxExists = relationship[mKey].indexes.find(function (_c) {\n          var _d = __read(_c, 1),\n              index = _d[0];\n\n          return index === idxName;\n        });\n\n        if (!idxExists) {\n          relationship[mKey].indexes.push([idxName, fields]);\n        }\n      };\n\n      try {\n        for (var _d = __values(model.attributes), _e = _d.next(); !_e.done; _e = _d.next()) {\n          var attribute = _e.value;\n\n          _loop_1(attribute);\n        }\n      } catch (e_3_1) {\n        e_3 = {\n          error: e_3_1\n        };\n      } finally {\n        try {\n          if (_e && !_e.done && (_c = _d.return)) _c.call(_d);\n        } finally {\n          if (e_3) throw e_3.error;\n        }\n      }\n    } // set 'id' as the PK for models without a custom PK explicitly defined\n\n\n    if (!keys[mKey].primaryKey) {\n      keys[mKey].primaryKey = [ID];\n    } // create primary index\n\n\n    relationship[mKey].indexes.push(['byPk', keys[mKey].primaryKey, {\n      unique: true\n    }]);\n  });\n  return [relationship, keys];\n};\nexport var getIndex = function (rel, src) {\n  var indexName;\n  rel.some(function (relItem) {\n    if (relItem.modelName === src) {\n      var targetNames = extractTargetNamesFromSrc(relItem);\n      indexName = targetNames && indexNameFromKeys(targetNames);\n      return true;\n    }\n  });\n  return indexName;\n};\nexport var getIndexFromAssociation = function (indexes, src) {\n  var indexName;\n\n  if (Array.isArray(src)) {\n    indexName = indexNameFromKeys(src);\n  } else {\n    indexName = src;\n  }\n\n  var associationIndex = indexes.find(function (_c) {\n    var _d = __read(_c, 1),\n        idxName = _d[0];\n\n    return idxName === indexName;\n  });\n  return associationIndex && associationIndex[0];\n};\n/**\n * Backwards-compatability for schema generated prior to custom primary key support:\nthe single field `targetName` has been replaced with an array of `targetNames`.\n`targetName` and `targetNames` are exclusive (will never exist on the same schema)\n * @param src {RelationType | ModelAssociation | undefined}\n * @returns array of targetNames, or `undefined`\n */\n\nexport var extractTargetNamesFromSrc = function (src) {\n  var targetName = src === null || src === void 0 ? void 0 : src.targetName;\n  var targetNames = src === null || src === void 0 ? void 0 : src.targetNames;\n\n  if (Array.isArray(targetNames)) {\n    return targetNames;\n  } else if (typeof targetName === 'string') {\n    return [targetName];\n  } else {\n    return undefined;\n  }\n}; // Generates spinal-cased index name from an array of key field names\n// E.g. for keys `[id, title]` => 'id-title'\n\nexport var indexNameFromKeys = function (keys) {\n  return keys.reduce(function (prev, cur, idx) {\n    if (idx === 0) {\n      return cur;\n    }\n\n    return \"\" + prev + IDENTIFIER_KEY_SEPARATOR + cur;\n  }, '');\n};\nexport var keysEqual = function (keysA, keysB) {\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  return keysA.every(function (key, idx) {\n    return key === keysB[idx];\n  });\n}; // Returns primary keys for a model\n\nexport var getIndexKeys = function (namespace, modelName) {\n  var _c;\n\n  var keyPath = (_c = namespace === null || namespace === void 0 ? void 0 : namespace.keys[modelName]) === null || _c === void 0 ? void 0 : _c.primaryKey;\n\n  if (keyPath) {\n    return keyPath;\n  }\n\n  return [ID];\n}; //#endregion","map":{"version":3,"sources":["../src/util.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nimport { Buffer } from 'buffer';\nimport { monotonicFactory } from 'ulid';\nimport { v4 as uuid } from 'uuid';\nimport { produce, applyPatches } from 'immer';\nimport { isPredicateGroup, isPredicateObj, SortDirection, isModelAttributeKey, isModelAttributePrimaryKey, isModelAttributeCompositeKey, LimitTimerRaceResolvedValues, } from './types';\nimport { WordArray } from 'amazon-cognito-identity-js';\nexport var ID = 'id';\n/**\n * Used by the Async Storage Adapter to concatenate key values\n * for a record. For instance, if a model has the following keys:\n * `customId: ID! @primaryKey(sortKeyFields: [\"createdAt\"])`,\n * we concatenate the `customId` and `createdAt` as:\n * `12-234-5#2022-09-28T00:00:00.000Z`\n */\nexport var DEFAULT_PRIMARY_KEY_VALUE_SEPARATOR = '#';\n/**\n * Used for generating spinal-cased index name from an array of\n * key field names.\n * E.g. for keys `[id, title]` => 'id-title'\n */\nexport var IDENTIFIER_KEY_SEPARATOR = '-';\nexport var errorMessages = {\n    idEmptyString: 'An index field cannot contain an empty string value',\n    queryByPkWithCompositeKeyPresent: 'Models with composite primary keys cannot be queried by a single key value. Use object literal syntax for composite keys instead: https://docs.amplify.aws/lib/datastore/advanced-workflows/q/platform/js/#querying-records-with-custom-primary-keys',\n    deleteByPkWithCompositeKeyPresent: 'Models with composite primary keys cannot be deleted by a single key value, unless using a predicate. Use object literal syntax for composite keys instead: https://docs.amplify.aws/lib/datastore/advanced-workflows/q/platform/js/#querying-records-with-custom-primary-keys',\n    observeWithObjectLiteral: 'Object literal syntax cannot be used with observe. Use a predicate instead: https://docs.amplify.aws/lib/datastore/data-access/q/platform/js/#predicates',\n};\nexport var NAMESPACES;\n(function (NAMESPACES) {\n    NAMESPACES[\"DATASTORE\"] = \"datastore\";\n    NAMESPACES[\"USER\"] = \"user\";\n    NAMESPACES[\"SYNC\"] = \"sync\";\n    NAMESPACES[\"STORAGE\"] = \"storage\";\n})(NAMESPACES || (NAMESPACES = {}));\nvar DATASTORE = NAMESPACES.DATASTORE;\nvar USER = NAMESPACES.USER;\nvar SYNC = NAMESPACES.SYNC;\nvar STORAGE = NAMESPACES.STORAGE;\nexport { USER, SYNC, STORAGE, DATASTORE };\nexport var USER_AGENT_SUFFIX_DATASTORE = '/DataStore';\nexport var exhaustiveCheck = function (obj, throwOnError) {\n    if (throwOnError === void 0) { throwOnError = true; }\n    if (throwOnError) {\n        throw new Error(\"Invalid \" + obj);\n    }\n};\nexport var isNullOrUndefined = function (val) {\n    return typeof val === 'undefined' || val === undefined || val === null;\n};\nexport var validatePredicate = function (model, groupType, predicatesOrGroups) {\n    var filterType;\n    var isNegation = false;\n    if (predicatesOrGroups.length === 0) {\n        return true;\n    }\n    switch (groupType) {\n        case 'not':\n            filterType = 'every';\n            isNegation = true;\n            break;\n        case 'and':\n            filterType = 'every';\n            break;\n        case 'or':\n            filterType = 'some';\n            break;\n        default:\n            exhaustiveCheck(groupType);\n    }\n    var result = predicatesOrGroups[filterType](function (predicateOrGroup) {\n        if (isPredicateObj(predicateOrGroup)) {\n            var field = predicateOrGroup.field, operator = predicateOrGroup.operator, operand = predicateOrGroup.operand;\n            var value = model[field];\n            return validatePredicateField(value, operator, operand);\n        }\n        if (isPredicateGroup(predicateOrGroup)) {\n            var type = predicateOrGroup.type, predicates = predicateOrGroup.predicates;\n            return validatePredicate(model, type, predicates);\n        }\n        throw new Error('Not a predicate or group');\n    });\n    return isNegation ? !result : result;\n};\nexport var validatePredicateField = function (value, operator, operand) {\n    switch (operator) {\n        case 'ne':\n            return value !== operand;\n        case 'eq':\n            return value === operand;\n        case 'le':\n            return value <= operand;\n        case 'lt':\n            return value < operand;\n        case 'ge':\n            return value >= operand;\n        case 'gt':\n            return value > operand;\n        case 'between':\n            var _c = __read(operand, 2), min = _c[0], max = _c[1];\n            return value >= min && value <= max;\n        case 'beginsWith':\n            return (!isNullOrUndefined(value) &&\n                value.startsWith(operand));\n        case 'contains':\n            return (!isNullOrUndefined(value) &&\n                value.indexOf(operand) > -1);\n        case 'notContains':\n            return (isNullOrUndefined(value) ||\n                value.indexOf(operand) === -1);\n        default:\n            exhaustiveCheck(operator, false);\n            return false;\n    }\n};\nexport var isModelConstructor = function (obj) {\n    return (obj && typeof obj.copyOf === 'function');\n};\nvar nonModelClasses = new WeakSet();\nexport function registerNonModelClass(clazz) {\n    nonModelClasses.add(clazz);\n}\nexport var isNonModelConstructor = function (obj) {\n    return nonModelClasses.has(obj);\n};\nvar topologicallySortedModels = new WeakMap();\nexport var traverseModel = function (srcModelName, instance, namespace, modelInstanceCreator, getModelConstructorByModelName) {\n    var relationships = namespace.relationships;\n    var modelConstructor = getModelConstructorByModelName(namespace.name, srcModelName);\n    var relation = relationships[srcModelName];\n    var result = [];\n    var newInstance = modelConstructor.copyOf(instance, function (draftInstance) {\n        relation.relationTypes.forEach(function (rItem) {\n            var modelConstructor = getModelConstructorByModelName(namespace.name, rItem.modelName);\n            switch (rItem.relationType) {\n                case 'HAS_ONE':\n                    if (instance[rItem.fieldName]) {\n                        var modelInstance = void 0;\n                        try {\n                            modelInstance = modelInstanceCreator(modelConstructor, instance[rItem.fieldName]);\n                        }\n                        catch (error) {\n                            // Do nothing\n                            console.log(error);\n                        }\n                        result.push({\n                            modelName: rItem.modelName,\n                            item: instance[rItem.fieldName],\n                            instance: modelInstance,\n                        });\n                        var targetNames = extractTargetNamesFromSrc(rItem);\n                        // `targetName` will be defined for Has One if feature flag\n                        // https://docs.amplify.aws/cli/reference/feature-flags/#useAppsyncModelgenPlugin\n                        // is true (default as of 5/7/21)\n                        // Making this conditional for backward-compatibility\n                        if (targetNames) {\n                            targetNames.forEach(function (targetName, idx) {\n                                // Get the connected record\n                                var relatedRecordInProxy = (draftInstance[rItem.fieldName]);\n                                // Previously, we used the hardcoded 'id' as they key,\n                                // now we need the value of the key to get the PK (and SK)\n                                // values from the related record\n                                var primaryKey = namespace.keys[modelConstructor.name].primaryKey;\n                                var keyField = primaryKey && primaryKey[idx];\n                                // Get the value\n                                var relatedRecordInProxyPkValue = relatedRecordInProxy[keyField];\n                                // Set the targetName value\n                                draftInstance[targetName] = relatedRecordInProxyPkValue;\n                            });\n                            // Delete the instance from the proxy\n                            delete draftInstance[rItem.fieldName];\n                        }\n                        else {\n                            draftInstance[rItem.fieldName] = (draftInstance[rItem.fieldName]).id;\n                        }\n                    }\n                    break;\n                case 'BELONGS_TO':\n                    if (instance[rItem.fieldName]) {\n                        var modelInstance = void 0;\n                        try {\n                            modelInstance = modelInstanceCreator(modelConstructor, instance[rItem.fieldName]);\n                        }\n                        catch (error) {\n                            // Do nothing\n                        }\n                        var isDeleted = (draftInstance[rItem.fieldName])._deleted;\n                        if (!isDeleted) {\n                            result.push({\n                                modelName: rItem.modelName,\n                                item: instance[rItem.fieldName],\n                                instance: modelInstance,\n                            });\n                        }\n                    }\n                    if (draftInstance[rItem.fieldName]) {\n                        var targetNames = extractTargetNamesFromSrc(rItem);\n                        if (targetNames) {\n                            targetNames.forEach(function (targetName, idx) {\n                                // Get the connected record\n                                var relatedRecordInProxy = (draftInstance[rItem.fieldName]);\n                                // Previously, we used the hardcoded `id` for the key.\n                                // Now, we need the value of the key to get the PK (and SK)\n                                // values from the related record\n                                var primaryKey = namespace.keys[modelConstructor.name].primaryKey;\n                                // fall back to ID if\n                                var keyField = primaryKey && primaryKey[idx];\n                                // Get the value\n                                var relatedRecordInProxyPkValue = relatedRecordInProxy[keyField];\n                                // Set the targetName value\n                                draftInstance[targetName] = relatedRecordInProxyPkValue;\n                            });\n                            // Delete the instance from the proxy\n                            delete draftInstance[rItem.fieldName];\n                        }\n                    }\n                    break;\n                case 'HAS_MANY':\n                    // Intentionally blank\n                    break;\n                default:\n                    exhaustiveCheck(rItem.relationType);\n                    break;\n            }\n        });\n    });\n    result.unshift({\n        modelName: srcModelName,\n        item: newInstance,\n        instance: newInstance,\n    });\n    if (!topologicallySortedModels.has(namespace)) {\n        topologicallySortedModels.set(namespace, Array.from(namespace.modelTopologicalOrdering.keys()));\n    }\n    var sortedModels = topologicallySortedModels.get(namespace);\n    result.sort(function (a, b) {\n        return (sortedModels.indexOf(a.modelName) - sortedModels.indexOf(b.modelName));\n    });\n    return result;\n};\nvar privateModeCheckResult;\nexport var isPrivateMode = function () {\n    return new Promise(function (resolve) {\n        var dbname = uuid();\n        var db;\n        var isPrivate = function () {\n            privateModeCheckResult = false;\n            resolve(true);\n        };\n        var isNotPrivate = function () { return __awaiter(void 0, void 0, void 0, function () {\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        if (!(db && db.result && typeof db.result.close === 'function')) return [3 /*break*/, 2];\n                        return [4 /*yield*/, db.result.close()];\n                    case 1:\n                        _c.sent();\n                        _c.label = 2;\n                    case 2: return [4 /*yield*/, indexedDB.deleteDatabase(dbname)];\n                    case 3:\n                        _c.sent();\n                        privateModeCheckResult = true;\n                        return [2 /*return*/, resolve(false)];\n                }\n            });\n        }); };\n        if (privateModeCheckResult === true) {\n            return isNotPrivate();\n        }\n        if (privateModeCheckResult === false) {\n            return isPrivate();\n        }\n        if (indexedDB === null)\n            return isPrivate();\n        db = indexedDB.open(dbname);\n        db.onerror = isPrivate;\n        db.onsuccess = isNotPrivate;\n    });\n};\nvar safariCompatabilityModeResult;\n/**\n * Whether the browser's implementation of IndexedDB breaks on array lookups\n * against composite indexes whose keypath contains a single column.\n *\n * E.g., Whether `store.createIndex(indexName, ['id'])` followed by\n * `store.index(indexName).get([1])` will *ever* return records.\n *\n * In all known, modern Safari browsers as of Q4 2022, the query against an index like\n * this will *always* return `undefined`. So, the index needs to be created as a scalar.\n */\nexport var isSafariCompatabilityMode = function () { return __awaiter(void 0, void 0, void 0, function () {\n    var dbName_1, storeName_1, indexName_1, db_1, rwTx, rwStore, result, error_1;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _c.trys.push([0, 6, , 7]);\n                dbName_1 = uuid();\n                storeName_1 = 'indexedDBFeatureProbeStore';\n                indexName_1 = 'idx';\n                if (indexedDB === null)\n                    return [2 /*return*/, false];\n                if (safariCompatabilityModeResult !== undefined) {\n                    return [2 /*return*/, safariCompatabilityModeResult];\n                }\n                return [4 /*yield*/, new Promise(function (resolve) {\n                        var dbOpenRequest = indexedDB.open(dbName_1);\n                        dbOpenRequest.onerror = function () { return resolve(false); };\n                        dbOpenRequest.onsuccess = function () {\n                            var db = dbOpenRequest.result;\n                            resolve(db);\n                        };\n                        dbOpenRequest.onupgradeneeded = function (event) {\n                            var _c;\n                            var db = (_c = event === null || event === void 0 ? void 0 : event.target) === null || _c === void 0 ? void 0 : _c.result;\n                            db.onerror = function () { return resolve(false); };\n                            var store = db.createObjectStore(storeName_1, {\n                                autoIncrement: true,\n                            });\n                            store.createIndex(indexName_1, ['id']);\n                        };\n                    })];\n            case 1:\n                db_1 = _c.sent();\n                if (!db_1) {\n                    throw new Error('Could not open probe DB');\n                }\n                rwTx = db_1.transaction(storeName_1, 'readwrite');\n                rwStore = rwTx.objectStore(storeName_1);\n                rwStore.add({\n                    id: 1,\n                });\n                rwTx.commit();\n                return [4 /*yield*/, new Promise(function (resolve) {\n                        var tx = db_1.transaction(storeName_1, 'readonly');\n                        var store = tx.objectStore(storeName_1);\n                        var index = store.index(indexName_1);\n                        var getRequest = index.get([1]);\n                        getRequest.onerror = function () { return resolve(false); };\n                        getRequest.onsuccess = function (event) {\n                            var _c;\n                            resolve((_c = event === null || event === void 0 ? void 0 : event.target) === null || _c === void 0 ? void 0 : _c.result);\n                        };\n                    })];\n            case 2:\n                result = _c.sent();\n                if (!(db_1 && typeof db_1.close === 'function')) return [3 /*break*/, 4];\n                return [4 /*yield*/, db_1.close()];\n            case 3:\n                _c.sent();\n                _c.label = 4;\n            case 4: return [4 /*yield*/, indexedDB.deleteDatabase(dbName_1)];\n            case 5:\n                _c.sent();\n                if (result === undefined) {\n                    safariCompatabilityModeResult = true;\n                }\n                else {\n                    safariCompatabilityModeResult = false;\n                }\n                return [3 /*break*/, 7];\n            case 6:\n                error_1 = _c.sent();\n                safariCompatabilityModeResult = false;\n                return [3 /*break*/, 7];\n            case 7: return [2 /*return*/, safariCompatabilityModeResult];\n        }\n    });\n}); };\nvar randomBytes = function (nBytes) {\n    return Buffer.from(new WordArray().random(nBytes).toString(), 'hex');\n};\nvar prng = function () { return randomBytes(1).readUInt8(0) / 0xff; };\nexport function monotonicUlidFactory(seed) {\n    var ulid = monotonicFactory(prng);\n    return function () {\n        return ulid(seed);\n    };\n}\n/**\n * Uses performance.now() if available, otherwise, uses Date.now() (e.g. react native without a polyfill)\n *\n * The values returned by performance.now() always increase at a constant rate,\n * independent of the system clock (which might be adjusted manually or skewed\n * by software like NTP).\n *\n * Otherwise, performance.timing.navigationStart + performance.now() will be\n * approximately equal to Date.now()\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Performance/now#Example\n */\nexport function getNow() {\n    if (typeof performance !== 'undefined' &&\n        performance &&\n        typeof performance.now === 'function') {\n        return performance.now() | 0; // convert to integer\n    }\n    else {\n        return Date.now();\n    }\n}\nexport function sortCompareFunction(sortPredicates) {\n    return function compareFunction(a, b) {\n        var e_1, _c;\n        try {\n            // enable multi-field sort by iterating over predicates until\n            // a comparison returns -1 or 1\n            for (var sortPredicates_1 = __values(sortPredicates), sortPredicates_1_1 = sortPredicates_1.next(); !sortPredicates_1_1.done; sortPredicates_1_1 = sortPredicates_1.next()) {\n                var predicate = sortPredicates_1_1.value;\n                var field = predicate.field, sortDirection = predicate.sortDirection;\n                // reverse result when direction is descending\n                var sortMultiplier = sortDirection === SortDirection.ASCENDING ? 1 : -1;\n                if (a[field] < b[field]) {\n                    return -1 * sortMultiplier;\n                }\n                if (a[field] > b[field]) {\n                    return 1 * sortMultiplier;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (sortPredicates_1_1 && !sortPredicates_1_1.done && (_c = sortPredicates_1.return)) _c.call(sortPredicates_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return 0;\n    };\n}\n// deep compare any 2 values\n// primitives or object types (including arrays, Sets, and Maps)\n// returns true if equal by value\n// if nullish is true, treat undefined and null values as equal\n// to normalize for GQL response values for undefined fields\nexport function valuesEqual(valA, valB, nullish) {\n    var e_2, _c;\n    if (nullish === void 0) { nullish = false; }\n    var a = valA;\n    var b = valB;\n    var nullishCompare = function (_a, _b) {\n        return ((_a === undefined || _a === null) && (_b === undefined || _b === null));\n    };\n    // if one of the values is a primitive and the other is an object\n    if ((a instanceof Object && !(b instanceof Object)) ||\n        (!(a instanceof Object) && b instanceof Object)) {\n        return false;\n    }\n    // compare primitive types\n    if (!(a instanceof Object)) {\n        if (nullish && nullishCompare(a, b)) {\n            return true;\n        }\n        return a === b;\n    }\n    // make sure object types match\n    if ((Array.isArray(a) && !Array.isArray(b)) ||\n        (Array.isArray(b) && !Array.isArray(a))) {\n        return false;\n    }\n    if (a instanceof Set && b instanceof Set) {\n        a = __spread(a);\n        b = __spread(b);\n    }\n    if (a instanceof Map && b instanceof Map) {\n        a = Object.fromEntries(a);\n        b = Object.fromEntries(b);\n    }\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n    // last condition is to ensure that [] !== [null] even if nullish. However [undefined] === [null] when nullish\n    if (aKeys.length !== bKeys.length && (!nullish || Array.isArray(a))) {\n        return false;\n    }\n    // iterate through the longer set of keys\n    // e.g., for a nullish comparison of a={ a: 1 } and b={ a: 1, b: null }\n    // we want to iterate through bKeys\n    var keys = aKeys.length >= bKeys.length ? aKeys : bKeys;\n    try {\n        for (var keys_1 = __values(keys), keys_1_1 = keys_1.next(); !keys_1_1.done; keys_1_1 = keys_1.next()) {\n            var key = keys_1_1.value;\n            var aVal = a[key];\n            var bVal = b[key];\n            if (!valuesEqual(aVal, bVal, nullish)) {\n                return false;\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (keys_1_1 && !keys_1_1.done && (_c = keys_1.return)) _c.call(keys_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return true;\n}\nexport var isAWSDate = function (val) {\n    return !!/^\\d{4}-\\d{2}-\\d{2}(Z|[+-]\\d{2}:\\d{2}($|:\\d{2}))?$/.exec(val);\n};\nexport var isAWSTime = function (val) {\n    return !!/^\\d{2}:\\d{2}(:\\d{2}(.\\d+)?)?(Z|[+-]\\d{2}:\\d{2}($|:\\d{2}))?$/.exec(val);\n};\nexport var isAWSDateTime = function (val) {\n    return !!/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}(:\\d{2}(.\\d+)?)?(Z|[+-]\\d{2}:\\d{2}($|:\\d{2}))?$/.exec(val);\n};\nexport var isAWSTimestamp = function (val) {\n    return !!/^\\d+$/.exec(String(val));\n};\nexport var isAWSEmail = function (val) {\n    return !!/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.exec(val);\n};\nexport var isAWSJSON = function (val) {\n    try {\n        JSON.parse(val);\n        return true;\n    }\n    catch (_c) {\n        return false;\n    }\n};\nexport var isAWSURL = function (val) {\n    try {\n        return !!new URL(val);\n    }\n    catch (_c) {\n        return false;\n    }\n};\nexport var isAWSPhone = function (val) {\n    return !!/^\\+?\\d[\\d\\s-]+$/.exec(val);\n};\nexport var isAWSIPAddress = function (val) {\n    return !!/((^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$)|(^((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?$))$/.exec(val);\n};\nvar DeferredPromise = /** @class */ (function () {\n    function DeferredPromise() {\n        var self = this;\n        this.promise = new Promise(function (resolve, reject) {\n            self.resolve = resolve;\n            self.reject = reject;\n        });\n    }\n    return DeferredPromise;\n}());\nexport { DeferredPromise };\nvar DeferredCallbackResolver = /** @class */ (function () {\n    function DeferredCallbackResolver(options) {\n        this.limitPromise = new DeferredPromise();\n        this.raceInFlight = false;\n        this.callback = function () { };\n        this.defaultErrorHandler = function (msg) {\n            if (msg === void 0) { msg = 'DeferredCallbackResolver error'; }\n            throw new Error(msg);\n        };\n        this.callback = options.callback;\n        this.errorHandler = options.errorHandler || this.defaultErrorHandler;\n        this.maxInterval = options.maxInterval || 2000;\n    }\n    DeferredCallbackResolver.prototype.startTimer = function () {\n        var _this = this;\n        this.timerPromise = new Promise(function (resolve, reject) {\n            _this.timer = setTimeout(function () {\n                resolve(LimitTimerRaceResolvedValues.TIMER);\n            }, _this.maxInterval);\n        });\n    };\n    DeferredCallbackResolver.prototype.racePromises = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var winner, err_1;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _c.trys.push([0, 2, 3, 4]);\n                        this.raceInFlight = true;\n                        this.startTimer();\n                        return [4 /*yield*/, Promise.race([\n                                this.timerPromise,\n                                this.limitPromise.promise,\n                            ])];\n                    case 1:\n                        winner = _c.sent();\n                        this.callback();\n                        return [3 /*break*/, 4];\n                    case 2:\n                        err_1 = _c.sent();\n                        this.errorHandler(err_1);\n                        return [3 /*break*/, 4];\n                    case 3:\n                        // reset for the next race\n                        this.clear();\n                        this.raceInFlight = false;\n                        this.limitPromise = new DeferredPromise();\n                        return [2 /*return*/, winner];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    DeferredCallbackResolver.prototype.start = function () {\n        if (!this.raceInFlight)\n            this.racePromises();\n    };\n    DeferredCallbackResolver.prototype.clear = function () {\n        clearTimeout(this.timer);\n    };\n    DeferredCallbackResolver.prototype.resolve = function () {\n        this.limitPromise.resolve(LimitTimerRaceResolvedValues.LIMIT);\n    };\n    return DeferredCallbackResolver;\n}());\nexport { DeferredCallbackResolver };\n/**\n * merge two sets of patches created by immer produce.\n * newPatches take precedent over oldPatches for patches modifying the same path.\n * In the case many consecutive pathces are merged the original model should\n * always be the root model.\n *\n * Example:\n * A -> B, patches1\n * B -> C, patches2\n *\n * mergePatches(A, patches1, patches2) to get patches for A -> C\n *\n * @param originalSource the original Model the patches should be applied to\n * @param oldPatches immer produce patch list\n * @param newPatches immer produce patch list (will take precedence)\n * @return merged patches\n */\nexport function mergePatches(originalSource, oldPatches, newPatches) {\n    var patchesToMerge = oldPatches.concat(newPatches);\n    var patches;\n    produce(originalSource, function (draft) {\n        applyPatches(draft, patchesToMerge);\n    }, function (p) {\n        patches = p;\n    });\n    return patches;\n}\nexport var getStorename = function (namespace, modelName) {\n    var storeName = namespace + \"_\" + modelName;\n    return storeName;\n};\n//#region Key Utils\n/*\n  When we have GSI(s) with composite sort keys defined on a model\n    There are some very particular rules regarding which fields must be included in the update mutation input\n    The field selection becomes more complex as the number of GSIs with composite sort keys grows\n\n    To summarize: any time we update a field that is part of the composite sort key of a GSI, we must include:\n     1. all of the other fields in that composite sort key\n     2. all of the fields from any other composite sort key that intersect with the fields from 1.\n\n     E.g.,\n     Model @model\n        @key(name: 'key1' fields: ['hk', 'a', 'b', 'c'])\n        @key(name: 'key2' fields: ['hk', 'a', 'b', 'd'])\n        @key(name: 'key3' fields: ['hk', 'x', 'y', 'z'])\n\n    Model.a is updated => include ['a', 'b', 'c', 'd']\n    Model.c is updated => include ['a', 'b', 'c', 'd']\n    Model.d is updated => include ['a', 'b', 'c', 'd']\n    Model.x is updated => include ['x', 'y', 'z']\n\n    This function accepts a model's attributes and returns grouped sets of composite key fields\n    Using our example Model above, the function will return:\n    [\n        Set('a', 'b', 'c', 'd'),\n        Set('x', 'y', 'z'),\n    ]\n\n    This gives us the opportunity to correctly include the required fields for composite keys\n    When crafting the mutation input in Storage.getUpdateMutationInput\n\n    See 'processCompositeKeys' test in util.test.ts for more examples\n*/\nexport var processCompositeKeys = function (attributes) {\n    var extractCompositeSortKey = function (_c) {\n        var \n        // ignore the HK (fields[0]) we only need to include the composite sort key fields[1...n]\n        _d = __read(_c.properties.fields), sortKeyFields = _d.slice(1);\n        return sortKeyFields;\n    };\n    var compositeKeyFields = attributes\n        .filter(isModelAttributeCompositeKey)\n        .map(extractCompositeSortKey);\n    /*\n        if 2 sets of fields have any intersecting fields => combine them into 1 union set\n        e.g., ['a', 'b', 'c'] and ['a', 'b', 'd'] => ['a', 'b', 'c', 'd']\n    */\n    var combineIntersecting = function (fields) {\n        return fields.reduce(function (combined, sortKeyFields) {\n            var sortKeyFieldsSet = new Set(sortKeyFields);\n            if (combined.length === 0) {\n                combined.push(sortKeyFieldsSet);\n                return combined;\n            }\n            // does the current set share values with another set we've already added to `combined`?\n            var intersectingSetIdx = combined.findIndex(function (existingSet) {\n                return __spread(existingSet).some(function (f) { return sortKeyFieldsSet.has(f); });\n            });\n            if (intersectingSetIdx > -1) {\n                var union = new Set(__spread(combined[intersectingSetIdx], sortKeyFieldsSet));\n                // combine the current set with the intersecting set we found above\n                combined[intersectingSetIdx] = union;\n            }\n            else {\n                // none of the sets in `combined` have intersecting values with the current set\n                combined.push(sortKeyFieldsSet);\n            }\n            return combined;\n        }, []);\n    };\n    var initial = combineIntersecting(compositeKeyFields);\n    // a single pass pay not be enough to correctly combine all the fields\n    // call the function once more to get a final merged list of sets\n    var combined = combineIntersecting(initial);\n    return combined;\n};\nexport var extractKeyIfExists = function (modelDefinition) {\n    var _c;\n    var keyAttribute = (_c = modelDefinition === null || modelDefinition === void 0 ? void 0 : modelDefinition.attributes) === null || _c === void 0 ? void 0 : _c.find(isModelAttributeKey);\n    return keyAttribute;\n};\nexport var extractPrimaryKeyFieldNames = function (modelDefinition) {\n    var keyAttribute = extractKeyIfExists(modelDefinition);\n    if (keyAttribute && isModelAttributePrimaryKey(keyAttribute)) {\n        return keyAttribute.properties.fields;\n    }\n    return [ID];\n};\nexport var extractPrimaryKeyValues = function (model, keyFields) {\n    return keyFields.map(function (key) { return model[key]; });\n};\nexport var extractPrimaryKeysAndValues = function (model, keyFields) {\n    var primaryKeysAndValues = {};\n    keyFields.forEach(function (key) { return (primaryKeysAndValues[key] = model[key]); });\n    return primaryKeysAndValues;\n};\n// IdentifierFields<ManagedIdentifier>\n// Default behavior without explicit @primaryKey defined\nexport var isIdManaged = function (modelDefinition) {\n    var keyAttribute = extractKeyIfExists(modelDefinition);\n    if (keyAttribute && isModelAttributePrimaryKey(keyAttribute)) {\n        return false;\n    }\n    return true;\n};\n// IdentifierFields<OptionallyManagedIdentifier>\n// @primaryKey with explicit `id` in the PK. Single key or composite\nexport var isIdOptionallyManaged = function (modelDefinition) {\n    var keyAttribute = extractKeyIfExists(modelDefinition);\n    if (keyAttribute && isModelAttributePrimaryKey(keyAttribute)) {\n        return keyAttribute.properties.fields[0] === ID;\n    }\n    return false;\n};\nexport var establishRelationAndKeys = function (namespace) {\n    var relationship = {};\n    var keys = {};\n    Object.keys(namespace.models).forEach(function (mKey) {\n        var e_3, _c;\n        relationship[mKey] = { indexes: [], relationTypes: [] };\n        keys[mKey] = {};\n        var model = namespace.models[mKey];\n        Object.keys(model.fields).forEach(function (attr) {\n            var fieldAttribute = model.fields[attr];\n            if (typeof fieldAttribute.type === 'object' &&\n                'model' in fieldAttribute.type) {\n                var connectionType = fieldAttribute.association.connectionType;\n                relationship[mKey].relationTypes.push({\n                    fieldName: fieldAttribute.name,\n                    modelName: fieldAttribute.type.model,\n                    relationType: connectionType,\n                    targetName: fieldAttribute.association['targetName'],\n                    targetNames: fieldAttribute.association['targetNames'],\n                    associatedWith: fieldAttribute.association['associatedWith'],\n                });\n                if (connectionType === 'BELONGS_TO') {\n                    var targetNames = extractTargetNamesFromSrc(fieldAttribute.association);\n                    if (targetNames) {\n                        var idxName = indexNameFromKeys(targetNames);\n                        relationship[mKey].indexes.push([idxName, targetNames]);\n                    }\n                }\n            }\n        });\n        if (model.attributes) {\n            keys[mKey].compositeKeys = processCompositeKeys(model.attributes);\n            var _loop_1 = function (attribute) {\n                if (!isModelAttributeKey(attribute)) {\n                    return \"continue\";\n                }\n                var fields = attribute.properties.fields;\n                if (isModelAttributePrimaryKey(attribute)) {\n                    keys[mKey].primaryKey = fields;\n                    return \"continue\";\n                }\n                // create indexes for all other keys\n                var idxName = indexNameFromKeys(fields);\n                var idxExists = relationship[mKey].indexes.find(function (_c) {\n                    var _d = __read(_c, 1), index = _d[0];\n                    return index === idxName;\n                });\n                if (!idxExists) {\n                    relationship[mKey].indexes.push([idxName, fields]);\n                }\n            };\n            try {\n                for (var _d = __values(model.attributes), _e = _d.next(); !_e.done; _e = _d.next()) {\n                    var attribute = _e.value;\n                    _loop_1(attribute);\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (_e && !_e.done && (_c = _d.return)) _c.call(_d);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n        }\n        // set 'id' as the PK for models without a custom PK explicitly defined\n        if (!keys[mKey].primaryKey) {\n            keys[mKey].primaryKey = [ID];\n        }\n        // create primary index\n        relationship[mKey].indexes.push([\n            'byPk',\n            keys[mKey].primaryKey,\n            { unique: true },\n        ]);\n    });\n    return [relationship, keys];\n};\nexport var getIndex = function (rel, src) {\n    var indexName;\n    rel.some(function (relItem) {\n        if (relItem.modelName === src) {\n            var targetNames = extractTargetNamesFromSrc(relItem);\n            indexName = targetNames && indexNameFromKeys(targetNames);\n            return true;\n        }\n    });\n    return indexName;\n};\nexport var getIndexFromAssociation = function (indexes, src) {\n    var indexName;\n    if (Array.isArray(src)) {\n        indexName = indexNameFromKeys(src);\n    }\n    else {\n        indexName = src;\n    }\n    var associationIndex = indexes.find(function (_c) {\n        var _d = __read(_c, 1), idxName = _d[0];\n        return idxName === indexName;\n    });\n    return associationIndex && associationIndex[0];\n};\n/**\n * Backwards-compatability for schema generated prior to custom primary key support:\nthe single field `targetName` has been replaced with an array of `targetNames`.\n`targetName` and `targetNames` are exclusive (will never exist on the same schema)\n * @param src {RelationType | ModelAssociation | undefined}\n * @returns array of targetNames, or `undefined`\n */\nexport var extractTargetNamesFromSrc = function (src) {\n    var targetName = src === null || src === void 0 ? void 0 : src.targetName;\n    var targetNames = src === null || src === void 0 ? void 0 : src.targetNames;\n    if (Array.isArray(targetNames)) {\n        return targetNames;\n    }\n    else if (typeof targetName === 'string') {\n        return [targetName];\n    }\n    else {\n        return undefined;\n    }\n};\n// Generates spinal-cased index name from an array of key field names\n// E.g. for keys `[id, title]` => 'id-title'\nexport var indexNameFromKeys = function (keys) {\n    return keys.reduce(function (prev, cur, idx) {\n        if (idx === 0) {\n            return cur;\n        }\n        return \"\" + prev + IDENTIFIER_KEY_SEPARATOR + cur;\n    }, '');\n};\nexport var keysEqual = function (keysA, keysB) {\n    if (keysA.length !== keysB.length) {\n        return false;\n    }\n    return keysA.every(function (key, idx) { return key === keysB[idx]; });\n};\n// Returns primary keys for a model\nexport var getIndexKeys = function (namespace, modelName) {\n    var _c;\n    var keyPath = (_c = namespace === null || namespace === void 0 ? void 0 : namespace.keys[modelName]) === null || _c === void 0 ? void 0 : _c.primaryKey;\n    if (keyPath) {\n        return keyPath;\n    }\n    return [ID];\n};\n//#endregion\n//# sourceMappingURL=util.js.map"]},"metadata":{},"sourceType":"module"}