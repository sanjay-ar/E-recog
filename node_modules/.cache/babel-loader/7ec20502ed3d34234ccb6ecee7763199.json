{"ast":null,"code":"import Meyda from \"meyda\";\nexport default class VoiceCaptureService {\n  constructor() {\n    this._mediaStream = null;\n    this._context = null;\n    this._source = null;\n    this._analyzer = null;\n  }\n\n  async startCapturing(audioDevice) {\n    this._mediaStream = await navigator.mediaDevices.getUserMedia({\n      audio: {\n        noiseSuppression: true,\n        sampleRate: VoiceCaptureService.SAMPLE_RATE,\n        echoCancellation: true,\n        deviceId: audioDevice\n      },\n      video: false\n    });\n\n    if (this._mediaStream) {\n      const AudioContext = window.AudioContext || window.webkitAudioContext;\n      this._context = new AudioContext({\n        sampleRate: VoiceCaptureService.SAMPLE_RATE\n      });\n      this._source = this._context.createMediaStreamSource(this._mediaStream);\n    }\n  }\n\n  async stopCapturing() {\n    var _this$_context;\n\n    if (!this._mediaStream) {\n      return console.info(\"No media stream to stop found. Ignoring method call.\");\n    }\n\n    this._mediaStream.getTracks().forEach(track => {\n      track.stop();\n    });\n\n    await ((_this$_context = this._context) === null || _this$_context === void 0 ? void 0 : _this$_context.close());\n    this.stopAnalyzer();\n    this._mediaStream = null;\n    this._context = null;\n    this._source = null;\n  }\n\n  startAnalyzer(callback) {\n    if (!this._mediaStream || !this._context || !this._source) {\n      throw new Error(\"Cannot start the analyzer if one of media stream, audio context or source node is uninitialized.\");\n    }\n\n    this._analyzer = Meyda.createMeydaAnalyzer({\n      audioContext: this._context,\n      source: this._source,\n      bufferSize: 512,\n      featureExtractors: [\"buffer\", \"rms\"],\n      sampleRate: VoiceCaptureService.SAMPLE_RATE,\n      hopSize: 512,\n      windowingFunction: \"hanning\",\n      callback\n    });\n\n    this._analyzer.start();\n  }\n\n  stopAnalyzer() {\n    var _this$_analyzer;\n\n    if (!this._analyzer) {\n      console.info(\"No analyzer initialized. Ignoring method call.\");\n    }\n\n    (_this$_analyzer = this._analyzer) === null || _this$_analyzer === void 0 ? void 0 : _this$_analyzer.stop();\n  }\n\n  get mediaStream() {\n    if (this._mediaStream && this._mediaStream.getTracks().length > 0) {\n      return this._mediaStream;\n    }\n\n    throw new Error(\"No media stream is registered. Did you start the voice capturing?\");\n  }\n\n}\nVoiceCaptureService.SAMPLE_RATE = 22050;","map":{"version":3,"sources":["/Users/sanjayar/Desktop/moody-main copy 2/src/media/VoiceCaptureService.ts"],"names":["Meyda","VoiceCaptureService","_mediaStream","_context","_source","_analyzer","startCapturing","audioDevice","navigator","mediaDevices","getUserMedia","audio","noiseSuppression","sampleRate","SAMPLE_RATE","echoCancellation","deviceId","video","AudioContext","window","webkitAudioContext","createMediaStreamSource","stopCapturing","console","info","getTracks","forEach","track","stop","close","stopAnalyzer","startAnalyzer","callback","Error","createMeydaAnalyzer","audioContext","source","bufferSize","featureExtractors","hopSize","windowingFunction","start","mediaStream","length"],"mappings":"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","sourcesContent":["import Meyda, { MeydaFeaturesObject } from \"meyda\";\n\nexport default class VoiceCaptureService {\n  private _mediaStream: MediaStream | null = null;\n  private _context: AudioContext | null = null;\n  private _source: MediaStreamAudioSourceNode | null = null;\n  private _analyzer: Meyda.MeydaAnalyzer | null = null;\n\n  public static readonly SAMPLE_RATE = 22050;\n\n  public async startCapturing(audioDevice?: string): Promise<void> {\n    this._mediaStream = await (navigator.mediaDevices as any).getUserMedia({\n      audio: {\n        noiseSuppression: true,\n        sampleRate: VoiceCaptureService.SAMPLE_RATE,\n        echoCancellation: true,\n        deviceId: audioDevice,\n      },\n      video: false,\n    });\n\n    if (this._mediaStream) {\n      const AudioContext =\n        window.AudioContext || (window as any).webkitAudioContext;\n      this._context = new AudioContext({\n        sampleRate: VoiceCaptureService.SAMPLE_RATE,\n      });\n      this._source = this._context.createMediaStreamSource(this._mediaStream);\n    }\n  }\n\n  public async stopCapturing(): Promise<void> {\n    if (!this._mediaStream) {\n      return console.info(\n        \"No media stream to stop found. Ignoring method call.\"\n      );\n    }\n\n    this._mediaStream.getTracks().forEach((track) => {\n      track.stop();\n    });\n\n    await this._context?.close();\n    this.stopAnalyzer();\n    this._mediaStream = null;\n    this._context = null;\n    this._source = null;\n  }\n\n  public startAnalyzer(\n    callback: (features: Partial<MeydaFeaturesObject>) => void\n  ): void {\n    if (!this._mediaStream || !this._context || !this._source) {\n      throw new Error(\n        \"Cannot start the analyzer if one of media stream, audio context or source node is uninitialized.\"\n      );\n    }\n\n    this._analyzer = Meyda.createMeydaAnalyzer({\n      audioContext: this._context,\n      source: this._source,\n      bufferSize: 512,\n      featureExtractors: [\"buffer\", \"rms\"],\n      sampleRate: VoiceCaptureService.SAMPLE_RATE,\n      hopSize: 512,\n      windowingFunction: \"hanning\",\n      callback,\n    });\n\n    this._analyzer.start();\n  }\n\n  public stopAnalyzer(): void {\n    if (!this._analyzer) {\n      console.info(\"No analyzer initialized. Ignoring method call.\");\n    }\n\n    this._analyzer?.stop();\n  }\n\n  public get mediaStream(): MediaStream {\n    if (this._mediaStream && this._mediaStream.getTracks().length > 0) {\n      return this._mediaStream;\n    }\n\n    throw new Error(\n      \"No media stream is registered. Did you start the voice capturing?\"\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}