{"ast":null,"code":"var _jsxFileName = \"/Users/sanjayar/Desktop/moody-main copy 2/src/counter/Counter.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { addCounter, deleteCounter, fetchAllCounters, selectAllCounters, updateCounterById } from \"./counterSlice\";\nimport { useAppDispatch, useAppSelector } from \"../reduxHooks\";\nimport { Box, Button, Typography } from \"@material-ui/core\";\nimport { red } from \"@material-ui/core/colors\";\nimport Loader from \"../components/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Counter() {\n  _s();\n\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    const promise = dispatch(fetchAllCounters());\n    return () => {\n      promise.abort();\n    };\n  }, [dispatch]);\n  const counters = useAppSelector(selectAllCounters);\n  const loading = useAppSelector(state => state.counter.loading);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => dispatch(addCounter()),\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : counters.map(counter => /*#__PURE__*/_jsxDEV(Box, {\n      mt: 1,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        \"aria-label\": \"Increment value\",\n        onClick: () => {\n          dispatch(updateCounterById({\n            id: counter.id,\n            value: counter.value + 1\n          }));\n        },\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"span\",\n        children: counter.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        \"aria-label\": \"Decrement value\",\n        onClick: () => {\n          dispatch(updateCounterById({\n            id: counter.id,\n            value: counter.value - 1\n          }));\n        },\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          color: red[400]\n        },\n        onClick: () => dispatch(deleteCounter(counter.id)),\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, counter.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true);\n}\n\n_s(Counter, \"+fFpyeRhTNFGbxgW7TqBQevDuoA=\", false, function () {\n  return [useAppDispatch, useAppSelector, useAppSelector];\n});\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/Users/sanjayar/Desktop/moody-main copy 2/src/counter/Counter.tsx"],"names":["React","useEffect","addCounter","deleteCounter","fetchAllCounters","selectAllCounters","updateCounterById","useAppDispatch","useAppSelector","Box","Button","Typography","red","Loader","Counter","dispatch","promise","abort","counters","loading","state","counter","map","id","value","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,UADF,EAEEC,aAFF,EAGEC,gBAHF,EAIEC,iBAJF,EAKEC,iBALF,QAMO,gBANP;AAOA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,eAA/C;AAEA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,UAAtB,QAAwC,mBAAxC;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;;AAEA,SAASC,OAAT,GAAgC;AAAA;;AAC9B,QAAMC,QAAQ,GAAGR,cAAc,EAA/B;AACAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,OAAO,GAAGD,QAAQ,CAACX,gBAAgB,EAAjB,CAAxB;AAEA,WAAO,MAAM;AACXY,MAAAA,OAAO,CAACC,KAAR;AACD,KAFD;AAGD,GANQ,EAMN,CAACF,QAAD,CANM,CAAT;AAQA,QAAMG,QAAyB,GAAGV,cAAc,CAACH,iBAAD,CAAhD;AACA,QAAMc,OAAgB,GAAGX,cAAc,CAAEY,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcF,OAA1B,CAAvC;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,OAAO,EAAE,MAAMJ,QAAQ,CAACb,UAAU,EAAX,CAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAQGiB,OAAO,gBACN,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADM,GAGND,QAAQ,CAACI,GAAT,CAAcD,OAAD,iBACX,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,8BACE,QAAC,MAAD;AACE,sBAAW,iBADb;AAEE,QAAA,OAAO,EAAE,MAAM;AACbN,UAAAA,QAAQ,CACNT,iBAAiB,CAAC;AAChBiB,YAAAA,EAAE,EAAEF,OAAO,CAACE,EADI;AAEhBC,YAAAA,KAAK,EAAEH,OAAO,CAACG,KAAR,GAAgB;AAFP,WAAD,CADX,CAAR;AAMD,SATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAcE,QAAC,UAAD;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA,kBAA8BH,OAAO,CAACG;AAAtC;AAAA;AAAA;AAAA;AAAA,cAdF,eAeE,QAAC,MAAD;AACE,sBAAW,iBADb;AAEE,QAAA,OAAO,EAAE,MAAM;AACbT,UAAAA,QAAQ,CACNT,iBAAiB,CAAC;AAChBiB,YAAAA,EAAE,EAAEF,OAAO,CAACE,EADI;AAEhBC,YAAAA,KAAK,EAAEH,OAAO,CAACG,KAAR,GAAgB;AAFP,WAAD,CADX,CAAR;AAMD,SATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,eA4BE,QAAC,MAAD;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAEb,GAAG,CAAC,GAAD;AAAZ,SADT;AAEE,QAAA,OAAO,EAAE,MAAMG,QAAQ,CAACZ,aAAa,CAACkB,OAAO,CAACE,EAAT,CAAd,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BF;AAAA,OAAiBF,OAAO,CAACE,EAAzB;AAAA;AAAA;AAAA;AAAA,YADF,CAXJ;AAAA,kBADF;AAoDD;;GAjEQT,O;UACUP,c,EASiBC,c,EACTA,c;;;KAXlBM,O;AAmET,eAAeA,OAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport {\n  addCounter,\n  deleteCounter,\n  fetchAllCounters,\n  selectAllCounters,\n  updateCounterById,\n} from \"./counterSlice\";\nimport { useAppDispatch, useAppSelector } from \"../reduxHooks\";\nimport ICounterModel from \"./CounterModel\";\nimport { Box, Button, Typography } from \"@material-ui/core\";\nimport { red } from \"@material-ui/core/colors\";\nimport Loader from \"../components/Loader\";\n\nfunction Counter(): JSX.Element {\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    const promise = dispatch(fetchAllCounters());\n\n    return () => {\n      promise.abort();\n    };\n  }, [dispatch]);\n\n  const counters: ICounterModel[] = useAppSelector(selectAllCounters);\n  const loading: boolean = useAppSelector((state) => state.counter.loading);\n\n  return (\n    <>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => dispatch(addCounter())}\n      >\n        Add\n      </Button>\n      {loading ? (\n        <Loader />\n      ) : (\n        counters.map((counter) => (\n          <Box mt={1} key={counter.id}>\n            <Button\n              aria-label=\"Increment value\"\n              onClick={() => {\n                dispatch(\n                  updateCounterById({\n                    id: counter.id!,\n                    value: counter.value + 1,\n                  })\n                );\n              }}\n            >\n              Increment\n            </Button>\n            <Typography component=\"span\">{counter.value}</Typography>\n            <Button\n              aria-label=\"Decrement value\"\n              onClick={() => {\n                dispatch(\n                  updateCounterById({\n                    id: counter.id!,\n                    value: counter.value - 1,\n                  })\n                );\n              }}\n            >\n              Decrement\n            </Button>\n            <Button\n              style={{ color: red[400] }}\n              onClick={() => dispatch(deleteCounter(counter.id!))}\n            >\n              Remove\n            </Button>\n          </Box>\n        ))\n      )}\n    </>\n  );\n}\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}