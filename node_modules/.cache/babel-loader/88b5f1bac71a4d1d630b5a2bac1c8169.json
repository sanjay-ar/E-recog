{"ast":null,"code":"var _jsxFileName = \"/Users/sanjayar/Desktop/moody-main copy 2/src/media/ScreenCapture.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef } from \"react\";\nimport ScreenCaptureService from \"./ScreenCaptureService\";\nimport { useAppDispatch } from \"../reduxHooks\";\nimport { addError } from \"../error/errorSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ScreenCapture({\n  width,\n  height\n}) {\n  _s();\n\n  const videoRef = useRef(null);\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    const screenCaptureService = new ScreenCaptureService();\n\n    const captureAndDraw = async () => {\n      try {\n        await screenCaptureService.startCapturing();\n        await screenCaptureService.attachStreamToVideo(videoRef.current);\n      } catch (e) {\n        dispatch(addError(\"Cannot start screen recording: \" + e.message));\n      }\n    };\n\n    captureAndDraw();\n    return () => {\n      screenCaptureService.stopCapturing();\n    };\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"video\", {\n    width: width,\n    height: height,\n    ref: videoRef,\n    autoPlay: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n}\n\n_s(ScreenCapture, \"xWR/eAslMk5alPLp4FpbspC9Kd8=\", false, function () {\n  return [useAppDispatch];\n});\n\n_c = ScreenCapture;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScreenCapture\");","map":{"version":3,"sources":["/Users/sanjayar/Desktop/moody-main copy 2/src/media/ScreenCapture.tsx"],"names":["useEffect","useRef","ScreenCaptureService","useAppDispatch","addError","ScreenCapture","width","height","videoRef","dispatch","screenCaptureService","captureAndDraw","startCapturing","attachStreamToVideo","current","e","message","stopCapturing"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,QAAT,QAAyB,qBAAzB;;AAOA,eAAe,SAASC,aAAT,CAAuB;AACpCC,EAAAA,KADoC;AAEpCC,EAAAA;AAFoC,CAAvB,EAGqB;AAAA;;AAClC,QAAMC,QAAQ,GAAGP,MAAM,CAAmB,IAAnB,CAAvB;AACA,QAAMQ,QAAQ,GAAGN,cAAc,EAA/B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,oBAAoB,GAAG,IAAIR,oBAAJ,EAA7B;;AACA,UAAMS,cAAc,GAAG,YAAY;AACjC,UAAI;AACF,cAAMD,oBAAoB,CAACE,cAArB,EAAN;AACA,cAAMF,oBAAoB,CAACG,mBAArB,CAAyCL,QAAQ,CAACM,OAAlD,CAAN;AACD,OAHD,CAGE,OAAOC,CAAP,EAAU;AACVN,QAAAA,QAAQ,CAACL,QAAQ,CAAC,oCAAoCW,CAAC,CAACC,OAAvC,CAAT,CAAR;AACD;AACF,KAPD;;AAQAL,IAAAA,cAAc;AAEd,WAAO,MAAM;AACXD,MAAAA,oBAAoB,CAACO,aAArB;AACD,KAFD;AAGD,GAfQ,EAeN,CAACR,QAAD,CAfM,CAAT;AAiBA,sBAAO;AAAO,IAAA,KAAK,EAAEH,KAAd;AAAqB,IAAA,MAAM,EAAEC,MAA7B;AAAqC,IAAA,GAAG,EAAEC,QAA1C;AAAoD,IAAA,QAAQ;AAA5D;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAzBuBH,a;UAKLF,c;;;KALKE,a","sourcesContent":["import { useEffect, useRef } from \"react\";\nimport ScreenCaptureService from \"./ScreenCaptureService\";\nimport { useAppDispatch } from \"../reduxHooks\";\nimport { addError } from \"../error/errorSlice\";\n\ntype ScreenCaptureProps = {\n  width?: number;\n  height?: number;\n};\n\nexport default function ScreenCapture({\n  width,\n  height,\n}: ScreenCaptureProps): JSX.Element {\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    const screenCaptureService = new ScreenCaptureService();\n    const captureAndDraw = async () => {\n      try {\n        await screenCaptureService.startCapturing();\n        await screenCaptureService.attachStreamToVideo(videoRef.current!);\n      } catch (e) {\n        dispatch(addError(\"Cannot start screen recording: \" + e.message));\n      }\n    };\n    captureAndDraw();\n\n    return () => {\n      screenCaptureService.stopCapturing();\n    };\n  }, [dispatch]);\n\n  return <video width={width} height={height} ref={videoRef} autoPlay />;\n}\n"]},"metadata":{},"sourceType":"module"}