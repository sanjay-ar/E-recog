{"ast":null,"code":"var _jsxFileName = \"/Users/sanjayar/Desktop/moody-main copy 2/src/pages/feedback/Question.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Typography, makeStyles } from \"@material-ui/core\";\nimport { Rating } from \"@material-ui/lab\";\nimport { Star } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  questionBox: {\n    backgroundColor: \"#f8fafc\",\n    borderRadius: theme.spacing(2),\n    padding: theme.spacing(3),\n    marginBottom: theme.spacing(2),\n    border: \"1px solid #e2e8f0\",\n    transition: \"all 0.3s ease-in-out\",\n    \"&:hover\": {\n      backgroundColor: \"#f1f5f9\",\n      borderColor: \"#cbd5e1\"\n    }\n  },\n  question: {\n    fontSize: \"1.25rem\",\n    fontWeight: 600,\n    color: \"#2c3e50\",\n    marginBottom: theme.spacing(2)\n  },\n  stars: {\n    fontSize: \"2.5rem\",\n    color: \"#f1c40f\",\n    // Yellow color for stars\n    \"& .MuiRating-iconFilled\": {\n      color: \"#f1c40f\"\n    },\n    \"& .MuiRating-iconEmpty\": {\n      color: \"#e2e8f0\"\n    }\n  },\n  label: {\n    fontSize: \"1rem\",\n    color: \"#7f8c8d\",\n    marginTop: theme.spacing(1),\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  required: {\n    color: \"#e74c3c\",\n    fontSize: \"0.875rem\",\n    marginLeft: theme.spacing(1),\n    fontWeight: 500\n  },\n  ratingContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  ratingLabels: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n    padding: theme.spacing(0, 2)\n  },\n  ratingLabel: {\n    fontSize: \"0.75rem\",\n    color: \"#7f8c8d\",\n    textAlign: \"center\"\n  }\n}));\nexport default function Question({\n  question,\n  value,\n  onChange,\n  required = false\n}) {\n  _s();\n\n  const classes = useStyles();\n\n  const getRatingLabel = rating => {\n    if (!rating) return \"Not rated\";\n\n    switch (rating) {\n      case 1:\n        return \"Poor\";\n\n      case 2:\n        return \"Fair\";\n\n      case 3:\n        return \"Good\";\n\n      case 4:\n        return \"Very Good\";\n\n      case 5:\n        return \"Excellent\";\n\n      default:\n        return \"\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.questionBox,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      className: classes.question,\n      children: [question, required && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.required,\n        children: \"*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.ratingContainer,\n      children: [/*#__PURE__*/_jsxDEV(Rating, {\n        value: value,\n        onChange: (_, newValue) => onChange(newValue),\n        size: \"large\",\n        icon: /*#__PURE__*/_jsxDEV(Star, {\n          fontSize: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this),\n        emptyIcon: /*#__PURE__*/_jsxDEV(Star, {\n          fontSize: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 22\n        }, this),\n        className: classes.stars,\n        max: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.ratingLabels,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.ratingLabel,\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.ratingLabel,\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.ratingLabel,\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.ratingLabel,\n          children: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.ratingLabel,\n          children: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        className: classes.label,\n        children: getRatingLabel(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Question, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/sanjayar/Desktop/moody-main copy 2/src/pages/feedback/Question.tsx"],"names":["Box","Typography","makeStyles","Rating","Star","useStyles","theme","questionBox","backgroundColor","borderRadius","spacing","padding","marginBottom","border","transition","borderColor","question","fontSize","fontWeight","color","stars","label","marginTop","display","alignItems","required","marginLeft","ratingContainer","flexDirection","ratingLabels","justifyContent","width","ratingLabel","textAlign","Question","value","onChange","classes","getRatingLabel","rating","_","newValue"],"mappings":"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","sourcesContent":["import { Box, Typography, makeStyles } from \"@material-ui/core\";\nimport { Rating } from \"@material-ui/lab\";\nimport { Star } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  questionBox: {\n    backgroundColor: \"#f8fafc\",\n    borderRadius: theme.spacing(2),\n    padding: theme.spacing(3),\n    marginBottom: theme.spacing(2),\n    border: \"1px solid #e2e8f0\",\n    transition: \"all 0.3s ease-in-out\",\n    \"&:hover\": {\n      backgroundColor: \"#f1f5f9\",\n      borderColor: \"#cbd5e1\",\n    },\n  },\n  question: {\n    fontSize: \"1.25rem\",\n    fontWeight: 600,\n    color: \"#2c3e50\",\n    marginBottom: theme.spacing(2),\n  },\n  stars: {\n    fontSize: \"2.5rem\",\n    color: \"#f1c40f\", // Yellow color for stars\n    \"& .MuiRating-iconFilled\": {\n      color: \"#f1c40f\",\n    },\n    \"& .MuiRating-iconEmpty\": {\n      color: \"#e2e8f0\",\n    },\n  },\n  label: {\n    fontSize: \"1rem\",\n    color: \"#7f8c8d\",\n    marginTop: theme.spacing(1),\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  required: {\n    color: \"#e74c3c\",\n    fontSize: \"0.875rem\",\n    marginLeft: theme.spacing(1),\n    fontWeight: 500,\n  },\n  ratingContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  ratingLabels: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n    padding: theme.spacing(0, 2),\n  },\n  ratingLabel: {\n    fontSize: \"0.75rem\",\n    color: \"#7f8c8d\",\n    textAlign: \"center\",\n  },\n}));\n\ntype QuestionProps = {\n  question: string;\n  value: number | null;\n  onChange: (value: number | null) => void;\n  required?: boolean;\n};\n\nexport default function Question({\n  question,\n  value,\n  onChange,\n  required = false,\n}: QuestionProps): JSX.Element {\n  const classes = useStyles();\n\n  const getRatingLabel = (rating: number | null) => {\n    if (!rating) return \"Not rated\";\n    \n    switch (rating) {\n      case 1: return \"Poor\";\n      case 2: return \"Fair\";\n      case 3: return \"Good\";\n      case 4: return \"Very Good\";\n      case 5: return \"Excellent\";\n      default: return \"\";\n    }\n  };\n\n  return (\n    <Box className={classes.questionBox}>\n      <Typography variant=\"h6\" className={classes.question}>\n        {question}\n        {required && <span className={classes.required}>*</span>}\n      </Typography>\n      \n      <Box className={classes.ratingContainer}>\n        <Rating\n          value={value}\n          onChange={(_: React.ChangeEvent<{}>, newValue: number | null) => onChange(newValue)}\n          size=\"large\"\n          icon={<Star fontSize=\"inherit\" />}\n          emptyIcon={<Star fontSize=\"inherit\" />}\n          className={classes.stars}\n          max={5}\n        />\n        \n        <Box className={classes.ratingLabels}>\n          <Typography className={classes.ratingLabel}>1</Typography>\n          <Typography className={classes.ratingLabel}>2</Typography>\n          <Typography className={classes.ratingLabel}>3</Typography>\n          <Typography className={classes.ratingLabel}>4</Typography>\n          <Typography className={classes.ratingLabel}>5</Typography>\n        </Box>\n        \n        <Typography variant=\"body2\" className={classes.label}>\n          {getRatingLabel(value)}\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}