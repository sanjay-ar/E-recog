{"ast":null,"code":"var _jsxFileName = \"/Users/sanjayar/Desktop/moody-main copy/src/pages/meetings/MeetingTable.tsx\",\n    _s = $RefreshSig$();\n\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { Box, Button, IconButton, ListItemIcon, Menu, MenuItem, Typography } from \"@material-ui/core\";\nimport { ArrowForwardIos, Delete, MoreVert } from \"@material-ui/icons\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { useAppDispatch, useAppSelector } from \"../../reduxHooks\";\nimport { removeMeeting } from \"../../meetings/meetingsSlice\";\nimport { useCallback, useState } from \"react\";\nimport { red } from \"@material-ui/core/colors\";\nimport { formatDistance } from \"date-fns\";\nimport { selectAllMeetings } from \"../../meetings/meetingsSelectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MeetingTable() {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const meetings = useAppSelector(selectAllMeetings);\n  const meetingsLoading = useAppSelector(state => state.meetings.loading);\n  const [meetingToDelete, setMeetingToDelete] = useState(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleMenuOpen = (event, meetingId) => {\n    setAnchorEl(event.currentTarget);\n    setMeetingToDelete(meetingId);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    setMeetingToDelete(null);\n  };\n\n  const handleDeleteMeeting = useCallback(() => {\n    handleMenuClose();\n\n    if (meetingToDelete) {\n      dispatch(removeMeeting(meetingToDelete));\n    }\n  }, [dispatch, meetingToDelete]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    height: \"500px\",\n    width: 1,\n    children: [/*#__PURE__*/_jsxDEV(Menu, {\n      keepMounted: true,\n      anchorEl: anchorEl,\n      open: Boolean(anchorEl),\n      onClose: handleMenuClose,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        color: red[500],\n        children: /*#__PURE__*/_jsxDEV(MenuItem, {\n          onClick: handleDeleteMeeting,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            style: {\n              color: \"inherit\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"inherit\",\n            color: \"inherit\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataGrid, {\n      loading: meetingsLoading,\n      rows: meetings.map(meeting => ({\n        id: meeting.id,\n        name: meeting.name,\n        duration: !!meeting.startedAt && !!meeting.stoppedAt ? formatDistance(new Date(meeting.stoppedAt).getTime(), new Date(meeting.startedAt).getTime()) : \"Not yet finished\",\n        createdAt: new Date(meeting.createdAt)\n      })),\n      columns: [{\n        field: \"name\",\n        headerName: \"Meeting name\",\n        width: 300\n      }, {\n        field: \"duration\",\n        headerName: \"Duration\",\n        width: 150\n      }, {\n        field: \"createdAt\",\n        headerName: \"Creation date\",\n        type: \"dateTime\",\n        width: 175\n      }, {\n        field: \"id\",\n        headerName: \"Action\",\n        width: 150,\n        renderCell: params => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            endIcon: /*#__PURE__*/_jsxDEV(ArrowForwardIos, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 28\n            }, this),\n            component: RouterLink,\n            to: `/meetings/${params.value}`,\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: event => handleMenuOpen(event, params.value),\n            children: /*#__PURE__*/_jsxDEV(MoreVert, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MeetingTable, \"BivWqpj3rBmtYAHSKSaiGeKSLq0=\", false, function () {\n  return [useAppDispatch, useAppSelector, useAppSelector];\n});\n\n_c = MeetingTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetingTable\");","map":{"version":3,"sources":["/Users/sanjayar/Desktop/moody-main copy/src/pages/meetings/MeetingTable.tsx"],"names":["DataGrid","Box","Button","IconButton","ListItemIcon","Menu","MenuItem","Typography","ArrowForwardIos","Delete","MoreVert","Link","RouterLink","useAppDispatch","useAppSelector","removeMeeting","useCallback","useState","red","formatDistance","selectAllMeetings","MeetingTable","dispatch","meetings","meetingsLoading","state","loading","meetingToDelete","setMeetingToDelete","anchorEl","setAnchorEl","handleMenuOpen","event","meetingId","currentTarget","handleMenuClose","handleDeleteMeeting","Boolean","color","map","meeting","id","name","duration","startedAt","stoppedAt","Date","getTime","createdAt","field","headerName","width","type","renderCell","params","value"],"mappings":"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","sourcesContent":["import { DataGrid, GridCellParams } from \"@material-ui/data-grid\";\nimport {\n  Box,\n  Button,\n  IconButton,\n  ListItemIcon,\n  Menu,\n  MenuItem,\n  Typography,\n} from \"@material-ui/core\";\nimport { ArrowForwardIos, Delete, MoreVert } from \"@material-ui/icons\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { useAppDispatch, useAppSelector } from \"../../reduxHooks\";\nimport { removeMeeting } from \"../../meetings/meetingsSlice\";\nimport { useCallback, useState } from \"react\";\nimport { red } from \"@material-ui/core/colors\";\nimport { Meeting } from \"../../models\";\nimport { formatDistance } from \"date-fns\";\nimport { selectAllMeetings } from \"../../meetings/meetingsSelectors\";\n\nexport default function MeetingTable(): JSX.Element {\n  const dispatch = useAppDispatch();\n  const meetings: Meeting[] = useAppSelector(selectAllMeetings);\n  const meetingsLoading: boolean = useAppSelector(\n    (state) => state.meetings.loading\n  );\n\n  const [meetingToDelete, setMeetingToDelete] = useState<string | null>(null);\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const handleMenuOpen = (\n    event: React.MouseEvent<HTMLButtonElement>,\n    meetingId: string\n  ) => {\n    setAnchorEl(event.currentTarget);\n    setMeetingToDelete(meetingId);\n  };\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    setMeetingToDelete(null);\n  };\n\n  const handleDeleteMeeting = useCallback(() => {\n    handleMenuClose();\n    if (meetingToDelete) {\n      dispatch(removeMeeting(meetingToDelete));\n    }\n  }, [dispatch, meetingToDelete]);\n\n  return (\n    <Box height=\"500px\" width={1}>\n      <Menu\n        keepMounted\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleMenuClose}\n      >\n        <Box color={red[500]}>\n          <MenuItem onClick={handleDeleteMeeting}>\n            <ListItemIcon style={{ color: \"inherit\" }}>\n              <Delete />\n            </ListItemIcon>\n            <Typography variant=\"inherit\" color=\"inherit\">\n              Delete\n            </Typography>\n          </MenuItem>\n        </Box>\n      </Menu>\n      <DataGrid\n        loading={meetingsLoading}\n        rows={meetings.map((meeting) => ({\n          id: meeting.id,\n          name: meeting.name,\n          duration:\n            !!meeting.startedAt && !!meeting.stoppedAt\n              ? formatDistance(\n                  new Date(meeting.stoppedAt).getTime(),\n                  new Date(meeting.startedAt).getTime()\n                )\n              : \"Not yet finished\",\n          createdAt: new Date(meeting.createdAt!),\n        }))}\n        columns={[\n          { field: \"name\", headerName: \"Meeting name\", width: 300 },\n          {\n            field: \"duration\",\n            headerName: \"Duration\",\n            width: 150,\n          },\n          {\n            field: \"createdAt\",\n            headerName: \"Creation date\",\n            type: \"dateTime\",\n            width: 175,\n          },\n          {\n            field: \"id\",\n            headerName: \"Action\",\n            width: 150,\n            renderCell: (params: GridCellParams) => (\n              <>\n                <Button\n                  color=\"primary\"\n                  endIcon={<ArrowForwardIos />}\n                  component={RouterLink}\n                  to={`/meetings/${params.value}`}\n                >\n                  View\n                </Button>\n                <IconButton\n                  onClick={(event) =>\n                    handleMenuOpen(event, params.value as string)\n                  }\n                >\n                  <MoreVert />\n                </IconButton>\n              </>\n            ),\n          },\n        ]}\n      />\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}