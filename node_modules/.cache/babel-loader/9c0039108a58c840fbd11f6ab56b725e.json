{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { DeleteSessionCommand } from \"./commands/DeleteSessionCommand\";\nimport { GetSessionCommand } from \"./commands/GetSessionCommand\";\nimport { PostContentCommand } from \"./commands/PostContentCommand\";\nimport { PostTextCommand } from \"./commands/PostTextCommand\";\nimport { PutSessionCommand } from \"./commands/PutSessionCommand\";\nimport { LexRuntimeServiceClient } from \"./LexRuntimeServiceClient\";\n\nvar LexRuntimeService = function (_super) {\n  __extends(LexRuntimeService, _super);\n\n  function LexRuntimeService() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  LexRuntimeService.prototype.deleteSession = function (args, optionsOrCb, cb) {\n    var command = new DeleteSessionCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \".concat(typeof optionsOrCb));\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  LexRuntimeService.prototype.getSession = function (args, optionsOrCb, cb) {\n    var command = new GetSessionCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \".concat(typeof optionsOrCb));\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  LexRuntimeService.prototype.postContent = function (args, optionsOrCb, cb) {\n    var command = new PostContentCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \".concat(typeof optionsOrCb));\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  LexRuntimeService.prototype.postText = function (args, optionsOrCb, cb) {\n    var command = new PostTextCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \".concat(typeof optionsOrCb));\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  LexRuntimeService.prototype.putSession = function (args, optionsOrCb, cb) {\n    var command = new PutSessionCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \".concat(typeof optionsOrCb));\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  return LexRuntimeService;\n}(LexRuntimeServiceClient);\n\nexport { LexRuntimeService };","map":{"version":3,"sources":["/Users/sanjayar/Desktop/moody-main/node_modules/@aws-sdk/client-lex-runtime-service/dist-es/LexRuntimeService.js"],"names":["__extends","DeleteSessionCommand","GetSessionCommand","PostContentCommand","PostTextCommand","PutSessionCommand","LexRuntimeServiceClient","LexRuntimeService","_super","apply","arguments","prototype","deleteSession","args","optionsOrCb","cb","command","send","Error","concat","getSession","postContent","postText","putSession"],"mappings":"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","sourcesContent":["import { __extends } from \"tslib\";\nimport { DeleteSessionCommand, } from \"./commands/DeleteSessionCommand\";\nimport { GetSessionCommand } from \"./commands/GetSessionCommand\";\nimport { PostContentCommand } from \"./commands/PostContentCommand\";\nimport { PostTextCommand } from \"./commands/PostTextCommand\";\nimport { PutSessionCommand } from \"./commands/PutSessionCommand\";\nimport { LexRuntimeServiceClient } from \"./LexRuntimeServiceClient\";\nvar LexRuntimeService = (function (_super) {\n    __extends(LexRuntimeService, _super);\n    function LexRuntimeService() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    LexRuntimeService.prototype.deleteSession = function (args, optionsOrCb, cb) {\n        var command = new DeleteSessionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(\"Expect http options but get \".concat(typeof optionsOrCb));\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    };\n    LexRuntimeService.prototype.getSession = function (args, optionsOrCb, cb) {\n        var command = new GetSessionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(\"Expect http options but get \".concat(typeof optionsOrCb));\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    };\n    LexRuntimeService.prototype.postContent = function (args, optionsOrCb, cb) {\n        var command = new PostContentCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(\"Expect http options but get \".concat(typeof optionsOrCb));\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    };\n    LexRuntimeService.prototype.postText = function (args, optionsOrCb, cb) {\n        var command = new PostTextCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(\"Expect http options but get \".concat(typeof optionsOrCb));\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    };\n    LexRuntimeService.prototype.putSession = function (args, optionsOrCb, cb) {\n        var command = new PutSessionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(\"Expect http options but get \".concat(typeof optionsOrCb));\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    };\n    return LexRuntimeService;\n}(LexRuntimeServiceClient));\nexport { LexRuntimeService };\n"]},"metadata":{},"sourceType":"module"}