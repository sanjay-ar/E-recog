{"ast":null,"code":"var _jsxFileName = \"/Users/sanjayar/Desktop/moody-main copy 2/src/pages/feedback/Question.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Typography, makeStyles } from \"@material-ui/core\";\nimport { Rating } from \"@material-ui/lab\";\nimport { Star } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  questionBox: {\n    backgroundColor: \"rgba(52, 73, 94, 0.5)\",\n    backdropFilter: \"blur(5px)\",\n    borderRadius: theme.spacing(2),\n    padding: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    border: \"1px solid rgba(236, 240, 241, 0.1)\",\n    transition: \"all 0.3s ease-in-out\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(52, 73, 94, 0.7)\",\n      transform: \"translateY(-2px)\",\n      boxShadow: \"0 5px 15px rgba(0, 0, 0, 0.2)\"\n    }\n  },\n  question: {\n    fontSize: \"1.25rem\",\n    fontWeight: 500,\n    color: \"#ECF0F1\",\n    marginBottom: theme.spacing(2)\n  },\n  stars: {\n    fontSize: \"2.5rem\",\n    color: \"#FFD700\",\n    // Yellow color for stars\n    \"& .MuiRating-iconFilled\": {\n      color: \"#FFD700\"\n    },\n    \"& .MuiRating-iconEmpty\": {\n      color: \"rgba(236, 240, 241, 0.3)\"\n    }\n  },\n  label: {\n    fontSize: \"1rem\",\n    color: \"#ECF0F1\",\n    marginTop: theme.spacing(1)\n  },\n  required: {\n    color: \"#E74C3C\",\n    fontSize: \"0.875rem\",\n    marginTop: theme.spacing(1)\n  }\n}));\nexport default function Question({\n  question,\n  value,\n  onChange,\n  required = false\n}) {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.questionBox,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      className: classes.question,\n      children: question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Rating, {\n      value: value,\n      onChange: (_, newValue) => onChange(newValue),\n      size: \"large\",\n      icon: /*#__PURE__*/_jsxDEV(Star, {\n        fontSize: \"inherit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }, this),\n      emptyIcon: /*#__PURE__*/_jsxDEV(Star, {\n        fontSize: \"inherit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 20\n      }, this),\n      className: classes.stars,\n      max: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      className: classes.label,\n      children: value ? `${value} ${value === 1 ? \"Star\" : \"Stars\"}` : \"Empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), required && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"caption\",\n      className: classes.required,\n      children: \"(Required)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Question, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/sanjayar/Desktop/moody-main copy 2/src/pages/feedback/Question.tsx"],"names":["Box","Typography","makeStyles","Rating","Star","useStyles","theme","questionBox","backgroundColor","backdropFilter","borderRadius","spacing","padding","marginBottom","border","transition","transform","boxShadow","question","fontSize","fontWeight","color","stars","label","marginTop","required","Question","value","onChange","classes","_","newValue"],"mappings":"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","sourcesContent":["import { Box, Typography, makeStyles } from \"@material-ui/core\";\nimport { Rating } from \"@material-ui/lab\";\nimport { Star } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  questionBox: {\n    backgroundColor: \"rgba(52, 73, 94, 0.5)\",\n    backdropFilter: \"blur(5px)\",\n    borderRadius: theme.spacing(2),\n    padding: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    border: \"1px solid rgba(236, 240, 241, 0.1)\",\n    transition: \"all 0.3s ease-in-out\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(52, 73, 94, 0.7)\",\n      transform: \"translateY(-2px)\",\n      boxShadow: \"0 5px 15px rgba(0, 0, 0, 0.2)\",\n    },\n  },\n  question: {\n    fontSize: \"1.25rem\",\n    fontWeight: 500,\n    color: \"#ECF0F1\",\n    marginBottom: theme.spacing(2),\n  },\n  stars: {\n    fontSize: \"2.5rem\",\n    color: \"#FFD700\", // Yellow color for stars\n    \"& .MuiRating-iconFilled\": {\n      color: \"#FFD700\",\n    },\n    \"& .MuiRating-iconEmpty\": {\n      color: \"rgba(236, 240, 241, 0.3)\",\n    },\n  },\n  label: {\n    fontSize: \"1rem\",\n    color: \"#ECF0F1\",\n    marginTop: theme.spacing(1),\n  },\n  required: {\n    color: \"#E74C3C\",\n    fontSize: \"0.875rem\",\n    marginTop: theme.spacing(1),\n  },\n}));\n\ntype QuestionProps = {\n  question: string;\n  value: number | null;\n  onChange: (value: number | null) => void;\n  required?: boolean;\n};\n\nexport default function Question({\n  question,\n  value,\n  onChange,\n  required = false,\n}: QuestionProps): JSX.Element {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.questionBox}>\n      <Typography variant=\"h6\" className={classes.question}>\n        {question}\n      </Typography>\n      <Rating\n        value={value}\n        onChange={(_: React.ChangeEvent<{}>, newValue: number | null) => onChange(newValue)}\n        size=\"large\"\n        icon={<Star fontSize=\"inherit\" />}\n        emptyIcon={<Star fontSize=\"inherit\" />}\n        className={classes.stars}\n        max={5}\n      />\n      <Typography variant=\"body2\" className={classes.label}>\n        {value ? `${value} ${value === 1 ? \"Star\" : \"Stars\"}` : \"Empty\"}\n      </Typography>\n      {required && (\n        <Typography variant=\"caption\" className={classes.required}>\n          (Required)\n        </Typography>\n      )}\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}