{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { BatchDeleteGeofenceRequestFilterSensitiveLog, BatchDeleteGeofenceResponseFilterSensitiveLog } from \"../models/models_0\";\nimport { deserializeAws_restJson1BatchDeleteGeofenceCommand, serializeAws_restJson1BatchDeleteGeofenceCommand } from \"../protocols/Aws_restJson1\";\n\nvar BatchDeleteGeofenceCommand = function (_super) {\n  __extends(BatchDeleteGeofenceCommand, _super);\n\n  function BatchDeleteGeofenceCommand(input) {\n    var _this = _super.call(this) || this;\n\n    _this.input = input;\n    return _this;\n  }\n\n  BatchDeleteGeofenceCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"LocationClient\";\n    var commandName = \"BatchDeleteGeofenceCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: BatchDeleteGeofenceRequestFilterSensitiveLog,\n      outputFilterSensitiveLog: BatchDeleteGeofenceResponseFilterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  BatchDeleteGeofenceCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restJson1BatchDeleteGeofenceCommand(input, context);\n  };\n\n  BatchDeleteGeofenceCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restJson1BatchDeleteGeofenceCommand(output, context);\n  };\n\n  return BatchDeleteGeofenceCommand;\n}($Command);\n\nexport { BatchDeleteGeofenceCommand };","map":{"version":3,"sources":["/Users/sanjayar/Desktop/moody-main copy/node_modules/@aws-sdk/client-location/dist-es/commands/BatchDeleteGeofenceCommand.js"],"names":["__extends","getSerdePlugin","Command","$Command","BatchDeleteGeofenceRequestFilterSensitiveLog","BatchDeleteGeofenceResponseFilterSensitiveLog","deserializeAws_restJson1BatchDeleteGeofenceCommand","serializeAws_restJson1BatchDeleteGeofenceCommand","BatchDeleteGeofenceCommand","_super","input","_this","call","prototype","resolveMiddleware","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","logger","clientName","commandName","handlerExecutionContext","inputFilterSensitiveLog","outputFilterSensitiveLog","requestHandler","resolve","request","handle","context","output"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,OAAO,IAAIC,QAApB,QAAoC,wBAApC;AACA,SAASC,4CAAT,EAAuDC,6CAAvD,QAA6G,oBAA7G;AACA,SAASC,kDAAT,EAA6DC,gDAA7D,QAAsH,4BAAtH;;AACA,IAAIC,0BAA0B,GAAI,UAAUC,MAAV,EAAkB;AAChDT,EAAAA,SAAS,CAACQ,0BAAD,EAA6BC,MAA7B,CAAT;;AACA,WAASD,0BAAT,CAAoCE,KAApC,EAA2C;AACvC,QAAIC,KAAK,GAAGF,MAAM,CAACG,IAAP,CAAY,IAAZ,KAAqB,IAAjC;;AACAD,IAAAA,KAAK,CAACD,KAAN,GAAcA,KAAd;AACA,WAAOC,KAAP;AACH;;AACDH,EAAAA,0BAA0B,CAACK,SAA3B,CAAqCC,iBAArC,GAAyD,UAAUC,WAAV,EAAuBC,aAAvB,EAAsCC,OAAtC,EAA+C;AACpG,SAAKC,eAAL,CAAqBC,GAArB,CAAyBlB,cAAc,CAACe,aAAD,EAAgB,KAAKI,SAArB,EAAgC,KAAKC,WAArC,CAAvC;AACA,QAAIC,KAAK,GAAGP,WAAW,CAACQ,MAAZ,CAAmB,KAAKL,eAAxB,CAAZ;AACA,QAAIM,MAAM,GAAGR,aAAa,CAACQ,MAA3B;AACA,QAAIC,UAAU,GAAG,gBAAjB;AACA,QAAIC,WAAW,GAAG,4BAAlB;AACA,QAAIC,uBAAuB,GAAG;AAC1BH,MAAAA,MAAM,EAAEA,MADkB;AAE1BC,MAAAA,UAAU,EAAEA,UAFc;AAG1BC,MAAAA,WAAW,EAAEA,WAHa;AAI1BE,MAAAA,uBAAuB,EAAExB,4CAJC;AAK1ByB,MAAAA,wBAAwB,EAAExB;AALA,KAA9B;AAOA,QAAIyB,cAAc,GAAGd,aAAa,CAACc,cAAnC;AACA,WAAOR,KAAK,CAACS,OAAN,CAAc,UAAUC,OAAV,EAAmB;AACpC,aAAOF,cAAc,CAACG,MAAf,CAAsBD,OAAO,CAACA,OAA9B,EAAuCf,OAAO,IAAI,EAAlD,CAAP;AACH,KAFM,EAEJU,uBAFI,CAAP;AAGH,GAjBD;;AAkBAnB,EAAAA,0BAA0B,CAACK,SAA3B,CAAqCO,SAArC,GAAiD,UAAUV,KAAV,EAAiBwB,OAAjB,EAA0B;AACvE,WAAO3B,gDAAgD,CAACG,KAAD,EAAQwB,OAAR,CAAvD;AACH,GAFD;;AAGA1B,EAAAA,0BAA0B,CAACK,SAA3B,CAAqCQ,WAArC,GAAmD,UAAUc,MAAV,EAAkBD,OAAlB,EAA2B;AAC1E,WAAO5B,kDAAkD,CAAC6B,MAAD,EAASD,OAAT,CAAzD;AACH,GAFD;;AAGA,SAAO1B,0BAAP;AACH,CAhCiC,CAgChCL,QAhCgC,CAAlC;;AAiCA,SAASK,0BAAT","sourcesContent":["import { __extends } from \"tslib\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { BatchDeleteGeofenceRequestFilterSensitiveLog, BatchDeleteGeofenceResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1BatchDeleteGeofenceCommand, serializeAws_restJson1BatchDeleteGeofenceCommand, } from \"../protocols/Aws_restJson1\";\nvar BatchDeleteGeofenceCommand = (function (_super) {\n    __extends(BatchDeleteGeofenceCommand, _super);\n    function BatchDeleteGeofenceCommand(input) {\n        var _this = _super.call(this) || this;\n        _this.input = input;\n        return _this;\n    }\n    BatchDeleteGeofenceCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        var stack = clientStack.concat(this.middlewareStack);\n        var logger = configuration.logger;\n        var clientName = \"LocationClient\";\n        var commandName = \"BatchDeleteGeofenceCommand\";\n        var handlerExecutionContext = {\n            logger: logger,\n            clientName: clientName,\n            commandName: commandName,\n            inputFilterSensitiveLog: BatchDeleteGeofenceRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: BatchDeleteGeofenceResponseFilterSensitiveLog,\n        };\n        var requestHandler = configuration.requestHandler;\n        return stack.resolve(function (request) {\n            return requestHandler.handle(request.request, options || {});\n        }, handlerExecutionContext);\n    };\n    BatchDeleteGeofenceCommand.prototype.serialize = function (input, context) {\n        return serializeAws_restJson1BatchDeleteGeofenceCommand(input, context);\n    };\n    BatchDeleteGeofenceCommand.prototype.deserialize = function (output, context) {\n        return deserializeAws_restJson1BatchDeleteGeofenceCommand(output, context);\n    };\n    return BatchDeleteGeofenceCommand;\n}($Command));\nexport { BatchDeleteGeofenceCommand };\n"]},"metadata":{},"sourceType":"module"}