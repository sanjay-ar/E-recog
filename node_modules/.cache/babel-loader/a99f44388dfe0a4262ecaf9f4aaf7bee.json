{"ast":null,"code":"var _jsxFileName = \"/Users/sanjayar/Desktop/moody-main copy/src/pages/meeting/Ratings.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../reduxHooks\";\nimport { fetchActiveMeetingRatings, selectActiveMeetingRatings, subscribeToActiveMeetingRatings } from \"../../meetings/ratingsSlice\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport Loader from \"../../components/Loader\";\nimport { Alert } from \"@material-ui/lab\";\nimport RatingsBarChart from \"./RatingsBarChart\";\nimport { unwrapResult } from \"@reduxjs/toolkit\";\nimport { selectActiveMeetingFeedbackLinkId } from \"../../meetings/meetingsSelectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Ratings() {\n  _s();\n\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(fetchActiveMeetingRatings());\n  }, [dispatch]);\n  const activeMeetingFeedbackLinkId = useAppSelector(selectActiveMeetingFeedbackLinkId);\n  useEffect(() => {\n    let unsubscribe;\n\n    const subscribeToRatings = async () => {\n      unsubscribe = unwrapResult(await dispatch(subscribeToActiveMeetingRatings()));\n    };\n\n    subscribeToRatings();\n    return () => {\n      if (unsubscribe) {\n        unsubscribe();\n      }\n    };\n  }, [dispatch, // If the feedback link is created after opening the ratings page, the subscription should be run again\n  activeMeetingFeedbackLinkId]);\n  const ratingsLength = useAppSelector(state => selectActiveMeetingRatings(state).length);\n  const loading = useAppSelector(state => state.ratings.loading && state.ratings.ids.length === 0);\n  return loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      gutterBottom: true,\n      children: [\"Ratings (N=\", ratingsLength, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), ratingsLength === 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: [\"There are no ratings yet. Create a feedback link after you finished the meeting and send it to your audience. This page will refresh automatically.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Note: Feedback links are only valid for 30 minutes after the meeting has ended.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          mr: 2,\n          children: /*#__PURE__*/_jsxDEV(RatingsBarChart, {\n            questionType: \"overallStars\",\n            title: \"Overall experience\",\n            explanation: \"Shows the distribution of the overall experience scored by stars rom 1 to 5 (1=useless, 5=excellent). This is the score your audience gave using the feedback link you sent them.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(RatingsBarChart, {\n            questionType: \"paceStars\",\n            title: \"Speaker's pace\",\n            explanation: \"Shows the distribution of the speaker's pace scored by stars from 1 to 5 (1=way too fast / slow, 5=just right). This is the score your audience gave using the feedback link you sent them.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"inline-block\",\n        mt: 2,\n        children: /*#__PURE__*/_jsxDEV(RatingsBarChart, {\n          questionType: \"contentStars\",\n          title: \"Usefulness of content\",\n          explanation: \"Shows the distribution of the usefulness of the presentation's content scored by stars from 1 to 5 (1=useless, 5=excellent). This is the score your audience gave using the feedback link you sent them.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n}\n\n_s(Ratings, \"ddNGgrdcaSWby5+UMPN1Ujdt2vE=\", false, function () {\n  return [useAppDispatch, useAppSelector, useAppSelector, useAppSelector];\n});\n\n_c = Ratings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ratings\");","map":{"version":3,"sources":["/Users/sanjayar/Desktop/moody-main copy/src/pages/meeting/Ratings.tsx"],"names":["useEffect","useAppDispatch","useAppSelector","fetchActiveMeetingRatings","selectActiveMeetingRatings","subscribeToActiveMeetingRatings","Box","Typography","Loader","Alert","RatingsBarChart","unwrapResult","selectActiveMeetingFeedbackLinkId","Ratings","dispatch","activeMeetingFeedbackLinkId","unsubscribe","subscribeToRatings","ratingsLength","state","length","loading","ratings","ids"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../reduxHooks\";\nimport {\n  fetchActiveMeetingRatings,\n  selectActiveMeetingRatings,\n  subscribeToActiveMeetingRatings,\n} from \"../../meetings/ratingsSlice\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport Loader from \"../../components/Loader\";\nimport { Alert } from \"@material-ui/lab\";\nimport RatingsBarChart from \"./RatingsBarChart\";\nimport { unwrapResult } from \"@reduxjs/toolkit\";\nimport { selectActiveMeetingFeedbackLinkId } from \"../../meetings/meetingsSelectors\";\n\nexport default function Ratings(): JSX.Element {\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(fetchActiveMeetingRatings());\n  }, [dispatch]);\n\n  const activeMeetingFeedbackLinkId = useAppSelector(\n    selectActiveMeetingFeedbackLinkId\n  );\n\n  useEffect(() => {\n    let unsubscribe: () => void;\n    const subscribeToRatings = async () => {\n      unsubscribe = unwrapResult(\n        await dispatch(subscribeToActiveMeetingRatings())\n      );\n    };\n    subscribeToRatings();\n    return () => {\n      if (unsubscribe) {\n        unsubscribe();\n      }\n    };\n  }, [\n    dispatch,\n    // If the feedback link is created after opening the ratings page, the subscription should be run again\n    activeMeetingFeedbackLinkId,\n  ]);\n\n  const ratingsLength = useAppSelector(\n    (state) => selectActiveMeetingRatings(state).length\n  );\n  const loading = useAppSelector(\n    (state) => state.ratings.loading && state.ratings.ids.length === 0\n  );\n\n  return loading ? (\n    <Loader />\n  ) : (\n    <>\n      <Typography variant=\"h3\" gutterBottom>\n        Ratings (N={ratingsLength})\n      </Typography>\n      {ratingsLength === 0 ? (\n        <Alert severity=\"info\">\n          <Typography variant=\"body1\">\n            There are no ratings yet. Create a feedback link after you finished\n            the meeting and send it to your audience. This page will refresh\n            automatically.\n            <br />\n            <strong>\n              Note: Feedback links are only valid for 30 minutes after the\n              meeting has ended.\n            </strong>\n          </Typography>\n        </Alert>\n      ) : (\n        <>\n          <Box display=\"flex\">\n            <Box mr={2}>\n              <RatingsBarChart\n                questionType=\"overallStars\"\n                title=\"Overall experience\"\n                explanation=\"Shows the distribution of the overall experience scored by stars rom 1 to 5 (1=useless, 5=excellent). This is the score your audience gave using the feedback link you sent them.\"\n              />\n            </Box>\n            <Box>\n              <RatingsBarChart\n                questionType=\"paceStars\"\n                title=\"Speaker's pace\"\n                explanation=\"Shows the distribution of the speaker's pace scored by stars from 1 to 5 (1=way too fast / slow, 5=just right). This is the score your audience gave using the feedback link you sent them.\"\n              />\n            </Box>\n          </Box>\n          <Box display=\"inline-block\" mt={2}>\n            <RatingsBarChart\n              questionType=\"contentStars\"\n              title=\"Usefulness of content\"\n              explanation=\"Shows the distribution of the usefulness of the presentation's content scored by stars from 1 to 5 (1=useless, 5=excellent). This is the score your audience gave using the feedback link you sent them.\"\n            />\n          </Box>\n        </>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}