{"ast":null,"code":"import flow from \"lodash-es/flow\";\n// The index is in order with the output tensor of the ONNX model\nexport const VOICE_EMOTIONS = [\"neutral\", // neutral\n\"happy\", // positive\n\"sad\", // negative\n\"angry\", // negative\n\"fearful\", // negative\n\"disgusted\", // negative\n\"surprised\" // positive\n];\n\nfunction aggregateVoiceEmotion(emotion) {\n  return {\n    positive: emotion.happy + emotion.surprised,\n    neutral: emotion.neutral,\n    negative: emotion.sad + emotion.angry + emotion.disgusted + emotion.fearful\n  };\n}\n\nfunction calculateVoiceEmotionScore(aggregatedVoiceEmotion) {\n  return aggregatedVoiceEmotion.positive - aggregatedVoiceEmotion.negative;\n}\n\nexport const aggregateAndCalculateVoiceEmotionScore = flow(aggregateVoiceEmotion, calculateVoiceEmotionScore);","map":{"version":3,"sources":["/Users/sanjayar/Desktop/moody-main copy 2/src/meetings/speakerVoiceEmotionUtils.ts"],"names":["flow","VOICE_EMOTIONS","aggregateVoiceEmotion","emotion","positive","happy","surprised","neutral","negative","sad","angry","disgusted","fearful","calculateVoiceEmotionScore","aggregatedVoiceEmotion","aggregateAndCalculateVoiceEmotionScore"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,gBAAjB;AAYA;AACA,OAAO,MAAMC,cAA+C,GAAG,CAC7D,SAD6D,EAClD;AACX,OAF6D,EAEpD;AACT,KAH6D,EAGtD;AACP,OAJ6D,EAIpD;AACT,SAL6D,EAKlD;AACX,WAN6D,EAMhD;AACb,WAP6D,CAOhD;AAPgD,CAAxD;;AAgBP,SAASC,qBAAT,CACEC,OADF,EAE0B;AACxB,SAAO;AACLC,IAAAA,QAAQ,EAAED,OAAO,CAACE,KAAR,GAAgBF,OAAO,CAACG,SAD7B;AAELC,IAAAA,OAAO,EAAEJ,OAAO,CAACI,OAFZ;AAGLC,IAAAA,QAAQ,EAAEL,OAAO,CAACM,GAAR,GAAcN,OAAO,CAACO,KAAtB,GAA8BP,OAAO,CAACQ,SAAtC,GAAkDR,OAAO,CAACS;AAH/D,GAAP;AAKD;;AAED,SAASC,0BAAT,CACEC,sBADF,EAEU;AACR,SAAOA,sBAAsB,CAACV,QAAvB,GAAkCU,sBAAsB,CAACN,QAAhE;AACD;;AAED,OAAO,MAAMO,sCAEF,GAAGf,IAAI,CAACE,qBAAD,EAAwBW,0BAAxB,CAFX","sourcesContent":["import flow from \"lodash-es/flow\";\n\nexport type PaulEkmanVoiceEmotion = {\n  neutral: number;\n  happy: number;\n  sad: number;\n  angry: number;\n  fearful: number;\n  disgusted: number;\n  surprised: number;\n};\n\n// The index is in order with the output tensor of the ONNX model\nexport const VOICE_EMOTIONS: (keyof PaulEkmanVoiceEmotion)[] = [\n  \"neutral\", // neutral\n  \"happy\", // positive\n  \"sad\", // negative\n  \"angry\", // negative\n  \"fearful\", // negative\n  \"disgusted\", // negative\n  \"surprised\", // positive\n];\n\ntype AggregatedVoiceEmotion = {\n  positive: number;\n  neutral: number;\n  negative: number;\n};\n\nfunction aggregateVoiceEmotion(\n  emotion: PaulEkmanVoiceEmotion\n): AggregatedVoiceEmotion {\n  return {\n    positive: emotion.happy + emotion.surprised,\n    neutral: emotion.neutral,\n    negative: emotion.sad + emotion.angry + emotion.disgusted + emotion.fearful,\n  };\n}\n\nfunction calculateVoiceEmotionScore(\n  aggregatedVoiceEmotion: AggregatedVoiceEmotion\n): number {\n  return aggregatedVoiceEmotion.positive - aggregatedVoiceEmotion.negative;\n}\n\nexport const aggregateAndCalculateVoiceEmotionScore: (\n  emotion: PaulEkmanVoiceEmotion\n) => number = flow(aggregateVoiceEmotion, calculateVoiceEmotionScore);\n"]},"metadata":{},"sourceType":"module"}