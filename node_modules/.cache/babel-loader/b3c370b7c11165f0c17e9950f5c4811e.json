{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar connectionTimeout = function (error) {\n  return /^Connection failed: Connection Timeout/.test(error.message);\n};\n\nvar serverError = function (error) {\n  return /^Error: Request failed with status code 5\\d\\d/.test(error.message);\n};\n\nexport var mutationErrorMap = {\n  BadModel: function () {\n    return false;\n  },\n  BadRecord: function (error) {\n    var message = error.message;\n    return /^Cannot return \\w+ for [\\w-_]+ type/.test(message) || /^Variable '.+' has coerced Null value for NonNull type/.test(message); // newly required field, out of date client\n  },\n  ConfigError: function () {\n    return false;\n  },\n  Transient: function (error) {\n    return connectionTimeout(error) || serverError(error);\n  },\n  Unauthorized: function (error) {\n    return /^Request failed with status code 401/.test(error.message);\n  }\n};\nexport var subscriptionErrorMap = {\n  BadModel: function () {\n    return false;\n  },\n  BadRecord: function () {\n    return false;\n  },\n  ConfigError: function () {\n    return false;\n  },\n  Transient: function (observableError) {\n    var error = unwrapObservableError(observableError);\n    return connectionTimeout(error) || serverError(error);\n  },\n  Unauthorized: function (observableError) {\n    var error = unwrapObservableError(observableError);\n    return /Connection failed.+Unauthorized/.test(error.message);\n  }\n};\nexport var syncErrorMap = {\n  BadModel: function () {\n    return false;\n  },\n  BadRecord: function (error) {\n    return /^Cannot return \\w+ for [\\w-_]+ type/.test(error.message);\n  },\n  ConfigError: function () {\n    return false;\n  },\n  Transient: function (error) {\n    return connectionTimeout(error) || serverError(error);\n  },\n  Unauthorized: function () {\n    return false;\n  }\n};\n/**\n * Get the first error reason of an observable.\n * Allows for error maps to be easily applied to observable errors\n *\n * @param observableError an error from ZenObservable subscribe error callback\n */\n\nfunction unwrapObservableError(observableError) {\n  var _a = observableError.error,\n      _b = __read((_a === void 0 ? {\n    errors: []\n  } : _a).errors, 1),\n      error = _b[0];\n\n  return error;\n}\n\nexport function getMutationErrorType(error) {\n  return mapErrorToType(mutationErrorMap, error);\n}\nexport function getSubscriptionErrorType(error) {\n  return mapErrorToType(subscriptionErrorMap, error);\n}\nexport function getSyncErrorType(error) {\n  return mapErrorToType(syncErrorMap, error);\n}\n/**\n * Categorizes an error with a broad error type, intended to make\n * customer error handling code simpler.\n * @param errorMap Error names and a list of patterns that indicate them (each pattern as a regex or function)\n * @param error The underying error to categorize.\n */\n\nexport function mapErrorToType(errorMap, error) {\n  var e_1, _a;\n\n  var errorTypes = __spread(Object.keys(errorMap));\n\n  try {\n    for (var errorTypes_1 = __values(errorTypes), errorTypes_1_1 = errorTypes_1.next(); !errorTypes_1_1.done; errorTypes_1_1 = errorTypes_1.next()) {\n      var errorType = errorTypes_1_1.value;\n      var matcher = errorMap[errorType];\n\n      if (matcher(error)) {\n        return errorType;\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (errorTypes_1_1 && !errorTypes_1_1.done && (_a = errorTypes_1.return)) _a.call(errorTypes_1);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return 'Unknown';\n}","map":{"version":3,"sources":["../../../src/sync/processors/errorMaps.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar connectionTimeout = function (error) {\n    return /^Connection failed: Connection Timeout/.test(error.message);\n};\nvar serverError = function (error) {\n    return /^Error: Request failed with status code 5\\d\\d/.test(error.message);\n};\nexport var mutationErrorMap = {\n    BadModel: function () { return false; },\n    BadRecord: function (error) {\n        var message = error.message;\n        return (/^Cannot return \\w+ for [\\w-_]+ type/.test(message) ||\n            /^Variable '.+' has coerced Null value for NonNull type/.test(message)); // newly required field, out of date client\n    },\n    ConfigError: function () { return false; },\n    Transient: function (error) { return connectionTimeout(error) || serverError(error); },\n    Unauthorized: function (error) {\n        return /^Request failed with status code 401/.test(error.message);\n    },\n};\nexport var subscriptionErrorMap = {\n    BadModel: function () { return false; },\n    BadRecord: function () { return false; },\n    ConfigError: function () { return false; },\n    Transient: function (observableError) {\n        var error = unwrapObservableError(observableError);\n        return connectionTimeout(error) || serverError(error);\n    },\n    Unauthorized: function (observableError) {\n        var error = unwrapObservableError(observableError);\n        return /Connection failed.+Unauthorized/.test(error.message);\n    },\n};\nexport var syncErrorMap = {\n    BadModel: function () { return false; },\n    BadRecord: function (error) { return /^Cannot return \\w+ for [\\w-_]+ type/.test(error.message); },\n    ConfigError: function () { return false; },\n    Transient: function (error) { return connectionTimeout(error) || serverError(error); },\n    Unauthorized: function () { return false; },\n};\n/**\n * Get the first error reason of an observable.\n * Allows for error maps to be easily applied to observable errors\n *\n * @param observableError an error from ZenObservable subscribe error callback\n */\nfunction unwrapObservableError(observableError) {\n    var _a = observableError.error, _b = __read((_a === void 0 ? {\n        errors: [],\n    } : _a).errors, 1), error = _b[0];\n    return error;\n}\nexport function getMutationErrorType(error) {\n    return mapErrorToType(mutationErrorMap, error);\n}\nexport function getSubscriptionErrorType(error) {\n    return mapErrorToType(subscriptionErrorMap, error);\n}\nexport function getSyncErrorType(error) {\n    return mapErrorToType(syncErrorMap, error);\n}\n/**\n * Categorizes an error with a broad error type, intended to make\n * customer error handling code simpler.\n * @param errorMap Error names and a list of patterns that indicate them (each pattern as a regex or function)\n * @param error The underying error to categorize.\n */\nexport function mapErrorToType(errorMap, error) {\n    var e_1, _a;\n    var errorTypes = __spread(Object.keys(errorMap));\n    try {\n        for (var errorTypes_1 = __values(errorTypes), errorTypes_1_1 = errorTypes_1.next(); !errorTypes_1_1.done; errorTypes_1_1 = errorTypes_1.next()) {\n            var errorType = errorTypes_1_1.value;\n            var matcher = errorMap[errorType];\n            if (matcher(error)) {\n                return errorType;\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (errorTypes_1_1 && !errorTypes_1_1.done && (_a = errorTypes_1.return)) _a.call(errorTypes_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return 'Unknown';\n}\n//# sourceMappingURL=errorMaps.js.map"]},"metadata":{},"sourceType":"module"}