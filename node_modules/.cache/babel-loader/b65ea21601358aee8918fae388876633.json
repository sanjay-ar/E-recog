{"ast":null,"code":"import { __assign, __read, __spreadArray, __values } from \"tslib\";\nexport var constructStack = function () {\n  var absoluteEntries = [];\n  var relativeEntries = [];\n  var entriesNameSet = new Set();\n\n  var sort = function (entries) {\n    return entries.sort(function (a, b) {\n      return stepWeights[b.step] - stepWeights[a.step] || priorityWeights[b.priority || \"normal\"] - priorityWeights[a.priority || \"normal\"];\n    });\n  };\n\n  var removeByName = function (toRemove) {\n    var isRemoved = false;\n\n    var filterCb = function (entry) {\n      if (entry.name && entry.name === toRemove) {\n        isRemoved = true;\n        entriesNameSet.delete(toRemove);\n        return false;\n      }\n\n      return true;\n    };\n\n    absoluteEntries = absoluteEntries.filter(filterCb);\n    relativeEntries = relativeEntries.filter(filterCb);\n    return isRemoved;\n  };\n\n  var removeByReference = function (toRemove) {\n    var isRemoved = false;\n\n    var filterCb = function (entry) {\n      if (entry.middleware === toRemove) {\n        isRemoved = true;\n        if (entry.name) entriesNameSet.delete(entry.name);\n        return false;\n      }\n\n      return true;\n    };\n\n    absoluteEntries = absoluteEntries.filter(filterCb);\n    relativeEntries = relativeEntries.filter(filterCb);\n    return isRemoved;\n  };\n\n  var cloneTo = function (toStack) {\n    absoluteEntries.forEach(function (entry) {\n      toStack.add(entry.middleware, __assign({}, entry));\n    });\n    relativeEntries.forEach(function (entry) {\n      toStack.addRelativeTo(entry.middleware, __assign({}, entry));\n    });\n    return toStack;\n  };\n\n  var expandRelativeMiddlewareList = function (from) {\n    var expandedMiddlewareList = [];\n    from.before.forEach(function (entry) {\n      if (entry.before.length === 0 && entry.after.length === 0) {\n        expandedMiddlewareList.push(entry);\n      } else {\n        expandedMiddlewareList.push.apply(expandedMiddlewareList, __spreadArray([], __read(expandRelativeMiddlewareList(entry)), false));\n      }\n    });\n    expandedMiddlewareList.push(from);\n    from.after.reverse().forEach(function (entry) {\n      if (entry.before.length === 0 && entry.after.length === 0) {\n        expandedMiddlewareList.push(entry);\n      } else {\n        expandedMiddlewareList.push.apply(expandedMiddlewareList, __spreadArray([], __read(expandRelativeMiddlewareList(entry)), false));\n      }\n    });\n    return expandedMiddlewareList;\n  };\n\n  var getMiddlewareList = function (debug) {\n    if (debug === void 0) {\n      debug = false;\n    }\n\n    var normalizedAbsoluteEntries = [];\n    var normalizedRelativeEntries = [];\n    var normalizedEntriesNameMap = {};\n    absoluteEntries.forEach(function (entry) {\n      var normalizedEntry = __assign(__assign({}, entry), {\n        before: [],\n        after: []\n      });\n\n      if (normalizedEntry.name) normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n      normalizedAbsoluteEntries.push(normalizedEntry);\n    });\n    relativeEntries.forEach(function (entry) {\n      var normalizedEntry = __assign(__assign({}, entry), {\n        before: [],\n        after: []\n      });\n\n      if (normalizedEntry.name) normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n      normalizedRelativeEntries.push(normalizedEntry);\n    });\n    normalizedRelativeEntries.forEach(function (entry) {\n      if (entry.toMiddleware) {\n        var toMiddleware = normalizedEntriesNameMap[entry.toMiddleware];\n\n        if (toMiddleware === undefined) {\n          if (debug) {\n            return;\n          }\n\n          throw new Error(\"\".concat(entry.toMiddleware, \" is not found when adding \").concat(entry.name || \"anonymous\", \" middleware \").concat(entry.relation, \" \").concat(entry.toMiddleware));\n        }\n\n        if (entry.relation === \"after\") {\n          toMiddleware.after.push(entry);\n        }\n\n        if (entry.relation === \"before\") {\n          toMiddleware.before.push(entry);\n        }\n      }\n    });\n    var mainChain = sort(normalizedAbsoluteEntries).map(expandRelativeMiddlewareList).reduce(function (wholeList, expendedMiddlewareList) {\n      wholeList.push.apply(wholeList, __spreadArray([], __read(expendedMiddlewareList), false));\n      return wholeList;\n    }, []);\n    return mainChain;\n  };\n\n  var stack = {\n    add: function (middleware, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var name = options.name,\n          override = options.override;\n\n      var entry = __assign({\n        step: \"initialize\",\n        priority: \"normal\",\n        middleware: middleware\n      }, options);\n\n      if (name) {\n        if (entriesNameSet.has(name)) {\n          if (!override) throw new Error(\"Duplicate middleware name '\".concat(name, \"'\"));\n          var toOverrideIndex = absoluteEntries.findIndex(function (entry) {\n            return entry.name === name;\n          });\n          var toOverride = absoluteEntries[toOverrideIndex];\n\n          if (toOverride.step !== entry.step || toOverride.priority !== entry.priority) {\n            throw new Error(\"\\\"\".concat(name, \"\\\" middleware with \").concat(toOverride.priority, \" priority in \").concat(toOverride.step, \" step cannot be \") + \"overridden by same-name middleware with \".concat(entry.priority, \" priority in \").concat(entry.step, \" step.\"));\n          }\n\n          absoluteEntries.splice(toOverrideIndex, 1);\n        }\n\n        entriesNameSet.add(name);\n      }\n\n      absoluteEntries.push(entry);\n    },\n    addRelativeTo: function (middleware, options) {\n      var name = options.name,\n          override = options.override;\n\n      var entry = __assign({\n        middleware: middleware\n      }, options);\n\n      if (name) {\n        if (entriesNameSet.has(name)) {\n          if (!override) throw new Error(\"Duplicate middleware name '\".concat(name, \"'\"));\n          var toOverrideIndex = relativeEntries.findIndex(function (entry) {\n            return entry.name === name;\n          });\n          var toOverride = relativeEntries[toOverrideIndex];\n\n          if (toOverride.toMiddleware !== entry.toMiddleware || toOverride.relation !== entry.relation) {\n            throw new Error(\"\\\"\".concat(name, \"\\\" middleware \").concat(toOverride.relation, \" \\\"\").concat(toOverride.toMiddleware, \"\\\" middleware cannot be overridden \") + \"by same-name middleware \".concat(entry.relation, \" \\\"\").concat(entry.toMiddleware, \"\\\" middleware.\"));\n          }\n\n          relativeEntries.splice(toOverrideIndex, 1);\n        }\n\n        entriesNameSet.add(name);\n      }\n\n      relativeEntries.push(entry);\n    },\n    clone: function () {\n      return cloneTo(constructStack());\n    },\n    use: function (plugin) {\n      plugin.applyToStack(stack);\n    },\n    remove: function (toRemove) {\n      if (typeof toRemove === \"string\") return removeByName(toRemove);else return removeByReference(toRemove);\n    },\n    removeByTag: function (toRemove) {\n      var isRemoved = false;\n\n      var filterCb = function (entry) {\n        var tags = entry.tags,\n            name = entry.name;\n\n        if (tags && tags.includes(toRemove)) {\n          if (name) entriesNameSet.delete(name);\n          isRemoved = true;\n          return false;\n        }\n\n        return true;\n      };\n\n      absoluteEntries = absoluteEntries.filter(filterCb);\n      relativeEntries = relativeEntries.filter(filterCb);\n      return isRemoved;\n    },\n    concat: function (from) {\n      var cloned = cloneTo(constructStack());\n      cloned.use(from);\n      return cloned;\n    },\n    applyToStack: cloneTo,\n    identify: function () {\n      return getMiddlewareList(true).map(function (mw) {\n        return mw.name + \": \" + (mw.tags || []).join(\",\");\n      });\n    },\n    resolve: function (handler, context) {\n      var e_1, _a;\n\n      try {\n        for (var _b = __values(getMiddlewareList().map(function (entry) {\n          return entry.middleware;\n        }).reverse()), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var middleware = _c.value;\n          handler = middleware(handler, context);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      return handler;\n    }\n  };\n  return stack;\n};\nvar stepWeights = {\n  initialize: 5,\n  serialize: 4,\n  build: 3,\n  finalizeRequest: 2,\n  deserialize: 1\n};\nvar priorityWeights = {\n  high: 3,\n  normal: 2,\n  low: 1\n};","map":{"version":3,"sources":["/Users/sanjayar/Desktop/moody-main/node_modules/@aws-sdk/client-lex-runtime-service/node_modules/@aws-sdk/middleware-stack/dist-es/MiddlewareStack.js"],"names":["__assign","__read","__spreadArray","__values","constructStack","absoluteEntries","relativeEntries","entriesNameSet","Set","sort","entries","a","b","stepWeights","step","priorityWeights","priority","removeByName","toRemove","isRemoved","filterCb","entry","name","delete","filter","removeByReference","middleware","cloneTo","toStack","forEach","add","addRelativeTo","expandRelativeMiddlewareList","from","expandedMiddlewareList","before","length","after","push","apply","reverse","getMiddlewareList","debug","normalizedAbsoluteEntries","normalizedRelativeEntries","normalizedEntriesNameMap","normalizedEntry","toMiddleware","undefined","Error","concat","relation","mainChain","map","reduce","wholeList","expendedMiddlewareList","stack","options","override","has","toOverrideIndex","findIndex","toOverride","splice","clone","use","plugin","applyToStack","remove","removeByTag","tags","includes","cloned","identify","mw","join","resolve","handler","context","e_1","_a","_b","_c","next","done","value","e_1_1","error","return","call","initialize","serialize","build","finalizeRequest","deserialize","high","normal","low"],"mappings":"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","sourcesContent":["import { __assign, __read, __spreadArray, __values } from \"tslib\";\nexport var constructStack = function () {\n    var absoluteEntries = [];\n    var relativeEntries = [];\n    var entriesNameSet = new Set();\n    var sort = function (entries) {\n        return entries.sort(function (a, b) {\n            return stepWeights[b.step] - stepWeights[a.step] ||\n                priorityWeights[b.priority || \"normal\"] - priorityWeights[a.priority || \"normal\"];\n        });\n    };\n    var removeByName = function (toRemove) {\n        var isRemoved = false;\n        var filterCb = function (entry) {\n            if (entry.name && entry.name === toRemove) {\n                isRemoved = true;\n                entriesNameSet.delete(toRemove);\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    var removeByReference = function (toRemove) {\n        var isRemoved = false;\n        var filterCb = function (entry) {\n            if (entry.middleware === toRemove) {\n                isRemoved = true;\n                if (entry.name)\n                    entriesNameSet.delete(entry.name);\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    var cloneTo = function (toStack) {\n        absoluteEntries.forEach(function (entry) {\n            toStack.add(entry.middleware, __assign({}, entry));\n        });\n        relativeEntries.forEach(function (entry) {\n            toStack.addRelativeTo(entry.middleware, __assign({}, entry));\n        });\n        return toStack;\n    };\n    var expandRelativeMiddlewareList = function (from) {\n        var expandedMiddlewareList = [];\n        from.before.forEach(function (entry) {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push.apply(expandedMiddlewareList, __spreadArray([], __read(expandRelativeMiddlewareList(entry)), false));\n            }\n        });\n        expandedMiddlewareList.push(from);\n        from.after.reverse().forEach(function (entry) {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push.apply(expandedMiddlewareList, __spreadArray([], __read(expandRelativeMiddlewareList(entry)), false));\n            }\n        });\n        return expandedMiddlewareList;\n    };\n    var getMiddlewareList = function (debug) {\n        if (debug === void 0) { debug = false; }\n        var normalizedAbsoluteEntries = [];\n        var normalizedRelativeEntries = [];\n        var normalizedEntriesNameMap = {};\n        absoluteEntries.forEach(function (entry) {\n            var normalizedEntry = __assign(__assign({}, entry), { before: [], after: [] });\n            if (normalizedEntry.name)\n                normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n            normalizedAbsoluteEntries.push(normalizedEntry);\n        });\n        relativeEntries.forEach(function (entry) {\n            var normalizedEntry = __assign(__assign({}, entry), { before: [], after: [] });\n            if (normalizedEntry.name)\n                normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n            normalizedRelativeEntries.push(normalizedEntry);\n        });\n        normalizedRelativeEntries.forEach(function (entry) {\n            if (entry.toMiddleware) {\n                var toMiddleware = normalizedEntriesNameMap[entry.toMiddleware];\n                if (toMiddleware === undefined) {\n                    if (debug) {\n                        return;\n                    }\n                    throw new Error(\"\".concat(entry.toMiddleware, \" is not found when adding \").concat(entry.name || \"anonymous\", \" middleware \").concat(entry.relation, \" \").concat(entry.toMiddleware));\n                }\n                if (entry.relation === \"after\") {\n                    toMiddleware.after.push(entry);\n                }\n                if (entry.relation === \"before\") {\n                    toMiddleware.before.push(entry);\n                }\n            }\n        });\n        var mainChain = sort(normalizedAbsoluteEntries)\n            .map(expandRelativeMiddlewareList)\n            .reduce(function (wholeList, expendedMiddlewareList) {\n            wholeList.push.apply(wholeList, __spreadArray([], __read(expendedMiddlewareList), false));\n            return wholeList;\n        }, []);\n        return mainChain;\n    };\n    var stack = {\n        add: function (middleware, options) {\n            if (options === void 0) { options = {}; }\n            var name = options.name, override = options.override;\n            var entry = __assign({ step: \"initialize\", priority: \"normal\", middleware: middleware }, options);\n            if (name) {\n                if (entriesNameSet.has(name)) {\n                    if (!override)\n                        throw new Error(\"Duplicate middleware name '\".concat(name, \"'\"));\n                    var toOverrideIndex = absoluteEntries.findIndex(function (entry) { return entry.name === name; });\n                    var toOverride = absoluteEntries[toOverrideIndex];\n                    if (toOverride.step !== entry.step || toOverride.priority !== entry.priority) {\n                        throw new Error(\"\\\"\".concat(name, \"\\\" middleware with \").concat(toOverride.priority, \" priority in \").concat(toOverride.step, \" step cannot be \") +\n                            \"overridden by same-name middleware with \".concat(entry.priority, \" priority in \").concat(entry.step, \" step.\"));\n                    }\n                    absoluteEntries.splice(toOverrideIndex, 1);\n                }\n                entriesNameSet.add(name);\n            }\n            absoluteEntries.push(entry);\n        },\n        addRelativeTo: function (middleware, options) {\n            var name = options.name, override = options.override;\n            var entry = __assign({ middleware: middleware }, options);\n            if (name) {\n                if (entriesNameSet.has(name)) {\n                    if (!override)\n                        throw new Error(\"Duplicate middleware name '\".concat(name, \"'\"));\n                    var toOverrideIndex = relativeEntries.findIndex(function (entry) { return entry.name === name; });\n                    var toOverride = relativeEntries[toOverrideIndex];\n                    if (toOverride.toMiddleware !== entry.toMiddleware || toOverride.relation !== entry.relation) {\n                        throw new Error(\"\\\"\".concat(name, \"\\\" middleware \").concat(toOverride.relation, \" \\\"\").concat(toOverride.toMiddleware, \"\\\" middleware cannot be overridden \") +\n                            \"by same-name middleware \".concat(entry.relation, \" \\\"\").concat(entry.toMiddleware, \"\\\" middleware.\"));\n                    }\n                    relativeEntries.splice(toOverrideIndex, 1);\n                }\n                entriesNameSet.add(name);\n            }\n            relativeEntries.push(entry);\n        },\n        clone: function () { return cloneTo(constructStack()); },\n        use: function (plugin) {\n            plugin.applyToStack(stack);\n        },\n        remove: function (toRemove) {\n            if (typeof toRemove === \"string\")\n                return removeByName(toRemove);\n            else\n                return removeByReference(toRemove);\n        },\n        removeByTag: function (toRemove) {\n            var isRemoved = false;\n            var filterCb = function (entry) {\n                var tags = entry.tags, name = entry.name;\n                if (tags && tags.includes(toRemove)) {\n                    if (name)\n                        entriesNameSet.delete(name);\n                    isRemoved = true;\n                    return false;\n                }\n                return true;\n            };\n            absoluteEntries = absoluteEntries.filter(filterCb);\n            relativeEntries = relativeEntries.filter(filterCb);\n            return isRemoved;\n        },\n        concat: function (from) {\n            var cloned = cloneTo(constructStack());\n            cloned.use(from);\n            return cloned;\n        },\n        applyToStack: cloneTo,\n        identify: function () {\n            return getMiddlewareList(true).map(function (mw) {\n                return mw.name + \": \" + (mw.tags || []).join(\",\");\n            });\n        },\n        resolve: function (handler, context) {\n            var e_1, _a;\n            try {\n                for (var _b = __values(getMiddlewareList()\n                    .map(function (entry) { return entry.middleware; })\n                    .reverse()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var middleware = _c.value;\n                    handler = middleware(handler, context);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return handler;\n        },\n    };\n    return stack;\n};\nvar stepWeights = {\n    initialize: 5,\n    serialize: 4,\n    build: 3,\n    finalizeRequest: 2,\n    deserialize: 1,\n};\nvar priorityWeights = {\n    high: 3,\n    normal: 2,\n    low: 1,\n};\n"]},"metadata":{},"sourceType":"module"}