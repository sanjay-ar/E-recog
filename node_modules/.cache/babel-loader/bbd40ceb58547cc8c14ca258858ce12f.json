{"ast":null,"code":"/* tslint:disable */\n\n/* eslint-disable */\n// this is an auto generated file. This will be overwritten\nexport const getSpeakerVoiceEmotion =\n/* GraphQL */\n`\n  query GetSpeakerVoiceEmotion($id: ID!) {\n    getSpeakerVoiceEmotion(id: $id) {\n      id\n      timestamp\n      score\n      neutral\n      happy\n      sad\n      angry\n      fearful\n      disgusted\n      surprised\n      meetingID\n      _version\n      _deleted\n      _lastChangedAt\n      createdAt\n      updatedAt\n      owner\n    }\n  }\n`;\nexport const listSpeakerVoiceEmotions =\n/* GraphQL */\n`\n  query ListSpeakerVoiceEmotions(\n    $filter: ModelSpeakerVoiceEmotionFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listSpeakerVoiceEmotions(\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        timestamp\n        score\n        neutral\n        happy\n        sad\n        angry\n        fearful\n        disgusted\n        surprised\n        meetingID\n        _version\n        _deleted\n        _lastChangedAt\n        createdAt\n        updatedAt\n        owner\n      }\n      nextToken\n      startedAt\n    }\n  }\n`;\nexport const syncSpeakerVoiceEmotions =\n/* GraphQL */\n`\n  query SyncSpeakerVoiceEmotions(\n    $filter: ModelSpeakerVoiceEmotionFilterInput\n    $limit: Int\n    $nextToken: String\n    $lastSync: AWSTimestamp\n  ) {\n    syncSpeakerVoiceEmotions(\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n      lastSync: $lastSync\n    ) {\n      items {\n        id\n        timestamp\n        score\n        neutral\n        happy\n        sad\n        angry\n        fearful\n        disgusted\n        surprised\n        meetingID\n        _version\n        _deleted\n        _lastChangedAt\n        createdAt\n        updatedAt\n        owner\n      }\n      nextToken\n      startedAt\n    }\n  }\n`;\nexport const getPublicMeetingInfo =\n/* GraphQL */\n`\n  query GetPublicMeetingInfo($id: ID!) {\n    getPublicMeetingInfo(id: $id) {\n      id\n      name\n      startedAt\n      stoppedAt\n      owner\n      _version\n      _deleted\n      _lastChangedAt\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listPublicMeetingInfos =\n/* GraphQL */\n`\n  query ListPublicMeetingInfos(\n    $filter: ModelPublicMeetingInfoFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listPublicMeetingInfos(\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        name\n        startedAt\n        stoppedAt\n        owner\n        _version\n        _deleted\n        _lastChangedAt\n        createdAt\n        updatedAt\n      }\n      nextToken\n      startedAt\n    }\n  }\n`;\nexport const syncPublicMeetingInfos =\n/* GraphQL */\n`\n  query SyncPublicMeetingInfos(\n    $filter: ModelPublicMeetingInfoFilterInput\n    $limit: Int\n    $nextToken: String\n    $lastSync: AWSTimestamp\n  ) {\n    syncPublicMeetingInfos(\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n      lastSync: $lastSync\n    ) {\n      items {\n        id\n        name\n        startedAt\n        stoppedAt\n        owner\n        _version\n        _deleted\n        _lastChangedAt\n        createdAt\n        updatedAt\n      }\n      nextToken\n      startedAt\n    }\n  }\n`;\nexport const getRating =\n/* GraphQL */\n`\n  query GetRating($id: ID!) {\n    getRating(id: $id) {\n      id\n      overallStars\n      contentStars\n      paceStars\n      owner\n      publicmeetinginfoID\n      _version\n      _deleted\n      _lastChangedAt\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listRatings =\n/* GraphQL */\n`\n  query ListRatings(\n    $filter: ModelRatingFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listRatings(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        overallStars\n        contentStars\n        paceStars\n        owner\n        publicmeetinginfoID\n        _version\n        _deleted\n        _lastChangedAt\n        createdAt\n        updatedAt\n      }\n      nextToken\n      startedAt\n    }\n  }\n`;\nexport const syncRatings =\n/* GraphQL */\n`\n  query SyncRatings(\n    $filter: ModelRatingFilterInput\n    $limit: Int\n    $nextToken: String\n    $lastSync: AWSTimestamp\n  ) {\n    syncRatings(\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n      lastSync: $lastSync\n    ) {\n      items {\n        id\n        overallStars\n        contentStars\n        paceStars\n        owner\n        publicmeetinginfoID\n        _version\n        _deleted\n        _lastChangedAt\n        createdAt\n        updatedAt\n      }\n      nextToken\n      startedAt\n    }\n  }\n`;\nexport const getMeeting =\n/* GraphQL */\n`\n  query GetMeeting($id: ID!) {\n    getMeeting(id: $id) {\n      id\n      name\n      startedAt\n      stoppedAt\n      createdAt\n      updatedAt\n      _version\n      _deleted\n      _lastChangedAt\n      SpeakerVoiceEmotions {\n        items {\n          id\n          timestamp\n          score\n          neutral\n          happy\n          sad\n          angry\n          fearful\n          disgusted\n          surprised\n          meetingID\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n          owner\n        }\n        nextToken\n        startedAt\n      }\n      PublicMeetingInfo {\n        id\n        name\n        startedAt\n        stoppedAt\n        owner\n        _version\n        _deleted\n        _lastChangedAt\n        createdAt\n        updatedAt\n      }\n      owner\n      AudienceFaceExpressions {\n        items {\n          id\n          timestamp\n          score\n          surprised\n          happy\n          neutral\n          sad\n          disgusted\n          fearful\n          angry\n          meetingID\n          createdAt\n          updatedAt\n          _version\n          _deleted\n          _lastChangedAt\n          owner\n        }\n        nextToken\n        startedAt\n      }\n    }\n  }\n`;\nexport const listMeetings =\n/* GraphQL */\n`\n  query ListMeetings(\n    $filter: ModelMeetingFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listMeetings(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        name\n        startedAt\n        stoppedAt\n        createdAt\n        updatedAt\n        _version\n        _deleted\n        _lastChangedAt\n        SpeakerVoiceEmotions {\n          nextToken\n          startedAt\n        }\n        PublicMeetingInfo {\n          id\n          name\n          startedAt\n          stoppedAt\n          owner\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n        owner\n        AudienceFaceExpressions {\n          nextToken\n          startedAt\n        }\n      }\n      nextToken\n      startedAt\n    }\n  }\n`;\nexport const syncMeetings =\n/* GraphQL */\n`\n  query SyncMeetings(\n    $filter: ModelMeetingFilterInput\n    $limit: Int\n    $nextToken: String\n    $lastSync: AWSTimestamp\n  ) {\n    syncMeetings(\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n      lastSync: $lastSync\n    ) {\n      items {\n        id\n        name\n        startedAt\n        stoppedAt\n        createdAt\n        updatedAt\n        _version\n        _deleted\n        _lastChangedAt\n        SpeakerVoiceEmotions {\n          nextToken\n          startedAt\n        }\n        PublicMeetingInfo {\n          id\n          name\n          startedAt\n          stoppedAt\n          owner\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n        owner\n        AudienceFaceExpressions {\n          nextToken\n          startedAt\n        }\n      }\n      nextToken\n      startedAt\n    }\n  }\n`;\nexport const getAudienceFaceExpression =\n/* GraphQL */\n`\n  query GetAudienceFaceExpression($id: ID!) {\n    getAudienceFaceExpression(id: $id) {\n      id\n      timestamp\n      score\n      surprised\n      happy\n      neutral\n      sad\n      disgusted\n      fearful\n      angry\n      meetingID\n      createdAt\n      updatedAt\n      _version\n      _deleted\n      _lastChangedAt\n      owner\n    }\n  }\n`;\nexport const listAudienceFaceExpressions =\n/* GraphQL */\n`\n  query ListAudienceFaceExpressions(\n    $filter: ModelAudienceFaceExpressionFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listAudienceFaceExpressions(\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        timestamp\n        score\n        surprised\n        happy\n        neutral\n        sad\n        disgusted\n        fearful\n        angry\n        meetingID\n        createdAt\n        updatedAt\n        _version\n        _deleted\n        _lastChangedAt\n        owner\n      }\n      nextToken\n      startedAt\n    }\n  }\n`;\nexport const syncAudienceFaceExpressions =\n/* GraphQL */\n`\n  query SyncAudienceFaceExpressions(\n    $filter: ModelAudienceFaceExpressionFilterInput\n    $limit: Int\n    $nextToken: String\n    $lastSync: AWSTimestamp\n  ) {\n    syncAudienceFaceExpressions(\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n      lastSync: $lastSync\n    ) {\n      items {\n        id\n        timestamp\n        score\n        surprised\n        happy\n        neutral\n        sad\n        disgusted\n        fearful\n        angry\n        meetingID\n        createdAt\n        updatedAt\n        _version\n        _deleted\n        _lastChangedAt\n        owner\n      }\n      nextToken\n      startedAt\n    }\n  }\n`;","map":{"version":3,"sources":["/Users/sanjayar/Desktop/moody-main copy 2/src/graphql/queries.ts"],"names":["getSpeakerVoiceEmotion","listSpeakerVoiceEmotions","syncSpeakerVoiceEmotions","getPublicMeetingInfo","listPublicMeetingInfos","syncPublicMeetingInfos","getRating","listRatings","syncRatings","getMeeting","listMeetings","syncMeetings","getAudienceFaceExpression","listAudienceFaceExpressions","syncAudienceFaceExpressions"],"mappings":"AAAA;;AACA;AACA;AAEA,OAAO,MAAMA,sBAAsB;AAAG;AAAe;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtBO;AAuBP,OAAO,MAAMC,wBAAwB;AAAG;AAAe;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlCO;AAmCP,OAAO,MAAMC,wBAAwB;AAAG;AAAe;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApCO;AAqCP,OAAO,MAAMC,oBAAoB;AAAG;AAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfO;AAgBP,OAAO,MAAMC,sBAAsB;AAAG;AAAe;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3BO;AA4BP,OAAO,MAAMC,sBAAsB;AAAG;AAAe;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA7BO;AA8BP,OAAO,MAAMC,SAAS;AAAG;AAAe;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBO;AAiBP,OAAO,MAAMC,WAAW;AAAG;AAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAxBO;AAyBP,OAAO,MAAMC,WAAW;AAAG;AAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA9BO;AA+BP,OAAO,MAAMC,UAAU;AAAG;AAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzEO;AA0EP,OAAO,MAAMC,YAAY;AAAG;AAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3CO;AA4CP,OAAO,MAAMC,YAAY;AAAG;AAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjDO;AAkDP,OAAO,MAAMC,yBAAyB;AAAG;AAAe;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtBO;AAuBP,OAAO,MAAMC,2BAA2B;AAAG;AAAe;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlCO;AAmCP,OAAO,MAAMC,2BAA2B;AAAG;AAAe;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApCO","sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const getSpeakerVoiceEmotion = /* GraphQL */ `\n  query GetSpeakerVoiceEmotion($id: ID!) {\n    getSpeakerVoiceEmotion(id: $id) {\n      id\n      timestamp\n      score\n      neutral\n      happy\n      sad\n      angry\n      fearful\n      disgusted\n      surprised\n      meetingID\n      _version\n      _deleted\n      _lastChangedAt\n      createdAt\n      updatedAt\n      owner\n    }\n  }\n`;\nexport const listSpeakerVoiceEmotions = /* GraphQL */ `\n  query ListSpeakerVoiceEmotions(\n    $filter: ModelSpeakerVoiceEmotionFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listSpeakerVoiceEmotions(\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        timestamp\n        score\n        neutral\n        happy\n        sad\n        angry\n        fearful\n        disgusted\n        surprised\n        meetingID\n        _version\n        _deleted\n        _lastChangedAt\n        createdAt\n        updatedAt\n        owner\n      }\n      nextToken\n      startedAt\n    }\n  }\n`;\nexport const syncSpeakerVoiceEmotions = /* GraphQL */ `\n  query SyncSpeakerVoiceEmotions(\n    $filter: ModelSpeakerVoiceEmotionFilterInput\n    $limit: Int\n    $nextToken: String\n    $lastSync: AWSTimestamp\n  ) {\n    syncSpeakerVoiceEmotions(\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n      lastSync: $lastSync\n    ) {\n      items {\n        id\n        timestamp\n        score\n        neutral\n        happy\n        sad\n        angry\n        fearful\n        disgusted\n        surprised\n        meetingID\n        _version\n        _deleted\n        _lastChangedAt\n        createdAt\n        updatedAt\n        owner\n      }\n      nextToken\n      startedAt\n    }\n  }\n`;\nexport const getPublicMeetingInfo = /* GraphQL */ `\n  query GetPublicMeetingInfo($id: ID!) {\n    getPublicMeetingInfo(id: $id) {\n      id\n      name\n      startedAt\n      stoppedAt\n      owner\n      _version\n      _deleted\n      _lastChangedAt\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listPublicMeetingInfos = /* GraphQL */ `\n  query ListPublicMeetingInfos(\n    $filter: ModelPublicMeetingInfoFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listPublicMeetingInfos(\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        name\n        startedAt\n        stoppedAt\n        owner\n        _version\n        _deleted\n        _lastChangedAt\n        createdAt\n        updatedAt\n      }\n      nextToken\n      startedAt\n    }\n  }\n`;\nexport const syncPublicMeetingInfos = /* GraphQL */ `\n  query SyncPublicMeetingInfos(\n    $filter: ModelPublicMeetingInfoFilterInput\n    $limit: Int\n    $nextToken: String\n    $lastSync: AWSTimestamp\n  ) {\n    syncPublicMeetingInfos(\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n      lastSync: $lastSync\n    ) {\n      items {\n        id\n        name\n        startedAt\n        stoppedAt\n        owner\n        _version\n        _deleted\n        _lastChangedAt\n        createdAt\n        updatedAt\n      }\n      nextToken\n      startedAt\n    }\n  }\n`;\nexport const getRating = /* GraphQL */ `\n  query GetRating($id: ID!) {\n    getRating(id: $id) {\n      id\n      overallStars\n      contentStars\n      paceStars\n      owner\n      publicmeetinginfoID\n      _version\n      _deleted\n      _lastChangedAt\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listRatings = /* GraphQL */ `\n  query ListRatings(\n    $filter: ModelRatingFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listRatings(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        overallStars\n        contentStars\n        paceStars\n        owner\n        publicmeetinginfoID\n        _version\n        _deleted\n        _lastChangedAt\n        createdAt\n        updatedAt\n      }\n      nextToken\n      startedAt\n    }\n  }\n`;\nexport const syncRatings = /* GraphQL */ `\n  query SyncRatings(\n    $filter: ModelRatingFilterInput\n    $limit: Int\n    $nextToken: String\n    $lastSync: AWSTimestamp\n  ) {\n    syncRatings(\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n      lastSync: $lastSync\n    ) {\n      items {\n        id\n        overallStars\n        contentStars\n        paceStars\n        owner\n        publicmeetinginfoID\n        _version\n        _deleted\n        _lastChangedAt\n        createdAt\n        updatedAt\n      }\n      nextToken\n      startedAt\n    }\n  }\n`;\nexport const getMeeting = /* GraphQL */ `\n  query GetMeeting($id: ID!) {\n    getMeeting(id: $id) {\n      id\n      name\n      startedAt\n      stoppedAt\n      createdAt\n      updatedAt\n      _version\n      _deleted\n      _lastChangedAt\n      SpeakerVoiceEmotions {\n        items {\n          id\n          timestamp\n          score\n          neutral\n          happy\n          sad\n          angry\n          fearful\n          disgusted\n          surprised\n          meetingID\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n          owner\n        }\n        nextToken\n        startedAt\n      }\n      PublicMeetingInfo {\n        id\n        name\n        startedAt\n        stoppedAt\n        owner\n        _version\n        _deleted\n        _lastChangedAt\n        createdAt\n        updatedAt\n      }\n      owner\n      AudienceFaceExpressions {\n        items {\n          id\n          timestamp\n          score\n          surprised\n          happy\n          neutral\n          sad\n          disgusted\n          fearful\n          angry\n          meetingID\n          createdAt\n          updatedAt\n          _version\n          _deleted\n          _lastChangedAt\n          owner\n        }\n        nextToken\n        startedAt\n      }\n    }\n  }\n`;\nexport const listMeetings = /* GraphQL */ `\n  query ListMeetings(\n    $filter: ModelMeetingFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listMeetings(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        name\n        startedAt\n        stoppedAt\n        createdAt\n        updatedAt\n        _version\n        _deleted\n        _lastChangedAt\n        SpeakerVoiceEmotions {\n          nextToken\n          startedAt\n        }\n        PublicMeetingInfo {\n          id\n          name\n          startedAt\n          stoppedAt\n          owner\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n        owner\n        AudienceFaceExpressions {\n          nextToken\n          startedAt\n        }\n      }\n      nextToken\n      startedAt\n    }\n  }\n`;\nexport const syncMeetings = /* GraphQL */ `\n  query SyncMeetings(\n    $filter: ModelMeetingFilterInput\n    $limit: Int\n    $nextToken: String\n    $lastSync: AWSTimestamp\n  ) {\n    syncMeetings(\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n      lastSync: $lastSync\n    ) {\n      items {\n        id\n        name\n        startedAt\n        stoppedAt\n        createdAt\n        updatedAt\n        _version\n        _deleted\n        _lastChangedAt\n        SpeakerVoiceEmotions {\n          nextToken\n          startedAt\n        }\n        PublicMeetingInfo {\n          id\n          name\n          startedAt\n          stoppedAt\n          owner\n          _version\n          _deleted\n          _lastChangedAt\n          createdAt\n          updatedAt\n        }\n        owner\n        AudienceFaceExpressions {\n          nextToken\n          startedAt\n        }\n      }\n      nextToken\n      startedAt\n    }\n  }\n`;\nexport const getAudienceFaceExpression = /* GraphQL */ `\n  query GetAudienceFaceExpression($id: ID!) {\n    getAudienceFaceExpression(id: $id) {\n      id\n      timestamp\n      score\n      surprised\n      happy\n      neutral\n      sad\n      disgusted\n      fearful\n      angry\n      meetingID\n      createdAt\n      updatedAt\n      _version\n      _deleted\n      _lastChangedAt\n      owner\n    }\n  }\n`;\nexport const listAudienceFaceExpressions = /* GraphQL */ `\n  query ListAudienceFaceExpressions(\n    $filter: ModelAudienceFaceExpressionFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listAudienceFaceExpressions(\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        timestamp\n        score\n        surprised\n        happy\n        neutral\n        sad\n        disgusted\n        fearful\n        angry\n        meetingID\n        createdAt\n        updatedAt\n        _version\n        _deleted\n        _lastChangedAt\n        owner\n      }\n      nextToken\n      startedAt\n    }\n  }\n`;\nexport const syncAudienceFaceExpressions = /* GraphQL */ `\n  query SyncAudienceFaceExpressions(\n    $filter: ModelAudienceFaceExpressionFilterInput\n    $limit: Int\n    $nextToken: String\n    $lastSync: AWSTimestamp\n  ) {\n    syncAudienceFaceExpressions(\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n      lastSync: $lastSync\n    ) {\n      items {\n        id\n        timestamp\n        score\n        surprised\n        happy\n        neutral\n        sad\n        disgusted\n        fearful\n        angry\n        meetingID\n        createdAt\n        updatedAt\n        _version\n        _deleted\n        _lastChangedAt\n        owner\n      }\n      nextToken\n      startedAt\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}