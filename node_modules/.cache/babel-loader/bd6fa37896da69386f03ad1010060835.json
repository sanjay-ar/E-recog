{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nexport var memoize = function (provider, isExpired, requiresRefresh) {\n  var resolved;\n  var pending;\n  var hasResult;\n  var isConstant = false;\n\n  var coalesceProvider = function () {\n    return __awaiter(void 0, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!pending) {\n              pending = provider();\n            }\n\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1,, 3, 4]);\n\n            return [4, pending];\n\n          case 2:\n            resolved = _a.sent();\n            hasResult = true;\n            isConstant = false;\n            return [3, 4];\n\n          case 3:\n            pending = undefined;\n            return [7];\n\n          case 4:\n            return [2, resolved];\n        }\n      });\n    });\n  };\n\n  if (isExpired === undefined) {\n    return function (options) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!(!hasResult || (options === null || options === void 0 ? void 0 : options.forceRefresh))) return [3, 2];\n              return [4, coalesceProvider()];\n\n            case 1:\n              resolved = _a.sent();\n              _a.label = 2;\n\n            case 2:\n              return [2, resolved];\n          }\n        });\n      });\n    };\n  }\n\n  return function (options) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!(!hasResult || (options === null || options === void 0 ? void 0 : options.forceRefresh))) return [3, 2];\n            return [4, coalesceProvider()];\n\n          case 1:\n            resolved = _a.sent();\n            _a.label = 2;\n\n          case 2:\n            if (isConstant) {\n              return [2, resolved];\n            }\n\n            if (requiresRefresh && !requiresRefresh(resolved)) {\n              isConstant = true;\n              return [2, resolved];\n            }\n\n            if (!isExpired(resolved)) return [3, 4];\n            return [4, coalesceProvider()];\n\n          case 3:\n            _a.sent();\n\n            return [2, resolved];\n\n          case 4:\n            return [2, resolved];\n        }\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/sanjayar/Desktop/moody-main/node_modules/@aws-sdk/util-defaults-mode-browser/node_modules/@aws-sdk/property-provider/dist-es/memoize.js"],"names":["__awaiter","__generator","memoize","provider","isExpired","requiresRefresh","resolved","pending","hasResult","isConstant","coalesceProvider","_a","label","trys","push","sent","undefined","options","forceRefresh"],"mappings":"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","sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nexport var memoize = function (provider, isExpired, requiresRefresh) {\n    var resolved;\n    var pending;\n    var hasResult;\n    var isConstant = false;\n    var coalesceProvider = function () { return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!pending) {\n                        pending = provider();\n                    }\n                    _a.label = 1;\n                case 1:\n                    _a.trys.push([1, , 3, 4]);\n                    return [4, pending];\n                case 2:\n                    resolved = _a.sent();\n                    hasResult = true;\n                    isConstant = false;\n                    return [3, 4];\n                case 3:\n                    pending = undefined;\n                    return [7];\n                case 4: return [2, resolved];\n            }\n        });\n    }); };\n    if (isExpired === undefined) {\n        return function (options) { return __awaiter(void 0, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(!hasResult || (options === null || options === void 0 ? void 0 : options.forceRefresh))) return [3, 2];\n                        return [4, coalesceProvider()];\n                    case 1:\n                        resolved = _a.sent();\n                        _a.label = 2;\n                    case 2: return [2, resolved];\n                }\n            });\n        }); };\n    }\n    return function (options) { return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!(!hasResult || (options === null || options === void 0 ? void 0 : options.forceRefresh))) return [3, 2];\n                    return [4, coalesceProvider()];\n                case 1:\n                    resolved = _a.sent();\n                    _a.label = 2;\n                case 2:\n                    if (isConstant) {\n                        return [2, resolved];\n                    }\n                    if (requiresRefresh && !requiresRefresh(resolved)) {\n                        isConstant = true;\n                        return [2, resolved];\n                    }\n                    if (!isExpired(resolved)) return [3, 4];\n                    return [4, coalesceProvider()];\n                case 3:\n                    _a.sent();\n                    return [2, resolved];\n                case 4: return [2, resolved];\n            }\n        });\n    }); };\n};\n"]},"metadata":{},"sourceType":"module"}