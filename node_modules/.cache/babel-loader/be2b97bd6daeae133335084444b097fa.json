{"ast":null,"code":"import { __asyncGenerator, __await, __awaiter, __generator, __read, __spreadArray } from \"tslib\";\nimport { ListGeofencesCommand } from \"../commands/ListGeofencesCommand\";\nimport { Location } from \"../Location\";\nimport { LocationClient } from \"../LocationClient\";\n\nvar makePagedClientRequest = function (client, input) {\n  var args = [];\n\n  for (var _i = 2; _i < arguments.length; _i++) {\n    args[_i - 2] = arguments[_i];\n  }\n\n  return __awaiter(void 0, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4, client.send.apply(client, __spreadArray([new ListGeofencesCommand(input)], __read(args), false))];\n\n        case 1:\n          return [2, _a.sent()];\n      }\n    });\n  });\n};\n\nvar makePagedRequest = function (client, input) {\n  var args = [];\n\n  for (var _i = 2; _i < arguments.length; _i++) {\n    args[_i - 2] = arguments[_i];\n  }\n\n  return __awaiter(void 0, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4, client.listGeofences.apply(client, __spreadArray([input], __read(args), false))];\n\n        case 1:\n          return [2, _a.sent()];\n      }\n    });\n  });\n};\n\nexport function paginateListGeofences(config, input) {\n  var additionalArguments = [];\n\n  for (var _i = 2; _i < arguments.length; _i++) {\n    additionalArguments[_i - 2] = arguments[_i];\n  }\n\n  return __asyncGenerator(this, arguments, function paginateListGeofences_1() {\n    var token, hasNext, page, prevToken;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          token = config.startingToken || undefined;\n          hasNext = true;\n          _a.label = 1;\n\n        case 1:\n          if (!hasNext) return [3, 9];\n          input.NextToken = token;\n          input[\"MaxResults\"] = config.pageSize;\n          if (!(config.client instanceof Location)) return [3, 3];\n          return [4, __await(makePagedRequest.apply(void 0, __spreadArray([config.client, input], __read(additionalArguments), false)))];\n\n        case 2:\n          page = _a.sent();\n          return [3, 6];\n\n        case 3:\n          if (!(config.client instanceof LocationClient)) return [3, 5];\n          return [4, __await(makePagedClientRequest.apply(void 0, __spreadArray([config.client, input], __read(additionalArguments), false)))];\n\n        case 4:\n          page = _a.sent();\n          return [3, 6];\n\n        case 5:\n          throw new Error(\"Invalid client, expected Location | LocationClient\");\n\n        case 6:\n          return [4, __await(page)];\n\n        case 7:\n          return [4, _a.sent()];\n\n        case 8:\n          _a.sent();\n\n          prevToken = token;\n          token = page.NextToken;\n          hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n          return [3, 1];\n\n        case 9:\n          return [4, __await(undefined)];\n\n        case 10:\n          return [2, _a.sent()];\n      }\n    });\n  });\n}","map":{"version":3,"sources":["/Users/sanjayar/Desktop/moody-main/node_modules/@aws-sdk/client-location/dist-es/pagination/ListGeofencesPaginator.js"],"names":["__asyncGenerator","__await","__awaiter","__generator","__read","__spreadArray","ListGeofencesCommand","Location","LocationClient","makePagedClientRequest","client","input","args","_i","arguments","length","_a","label","send","apply","sent","makePagedRequest","listGeofences","paginateListGeofences","config","additionalArguments","paginateListGeofences_1","token","hasNext","page","prevToken","startingToken","undefined","NextToken","pageSize","Error","stopOnSameToken"],"mappings":"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","sourcesContent":["import { __asyncGenerator, __await, __awaiter, __generator, __read, __spreadArray } from \"tslib\";\nimport { ListGeofencesCommand, } from \"../commands/ListGeofencesCommand\";\nimport { Location } from \"../Location\";\nimport { LocationClient } from \"../LocationClient\";\nvar makePagedClientRequest = function (client, input) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, client.send.apply(client, __spreadArray([new ListGeofencesCommand(input)], __read(args), false))];\n                case 1: return [2, _a.sent()];\n            }\n        });\n    });\n};\nvar makePagedRequest = function (client, input) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, client.listGeofences.apply(client, __spreadArray([input], __read(args), false))];\n                case 1: return [2, _a.sent()];\n            }\n        });\n    });\n};\nexport function paginateListGeofences(config, input) {\n    var additionalArguments = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        additionalArguments[_i - 2] = arguments[_i];\n    }\n    return __asyncGenerator(this, arguments, function paginateListGeofences_1() {\n        var token, hasNext, page, prevToken;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    token = config.startingToken || undefined;\n                    hasNext = true;\n                    _a.label = 1;\n                case 1:\n                    if (!hasNext) return [3, 9];\n                    input.NextToken = token;\n                    input[\"MaxResults\"] = config.pageSize;\n                    if (!(config.client instanceof Location)) return [3, 3];\n                    return [4, __await(makePagedRequest.apply(void 0, __spreadArray([config.client, input], __read(additionalArguments), false)))];\n                case 2:\n                    page = _a.sent();\n                    return [3, 6];\n                case 3:\n                    if (!(config.client instanceof LocationClient)) return [3, 5];\n                    return [4, __await(makePagedClientRequest.apply(void 0, __spreadArray([config.client, input], __read(additionalArguments), false)))];\n                case 4:\n                    page = _a.sent();\n                    return [3, 6];\n                case 5: throw new Error(\"Invalid client, expected Location | LocationClient\");\n                case 6: return [4, __await(page)];\n                case 7: return [4, _a.sent()];\n                case 8:\n                    _a.sent();\n                    prevToken = token;\n                    token = page.NextToken;\n                    hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n                    return [3, 1];\n                case 9: return [4, __await(undefined)];\n                case 10: return [2, _a.sent()];\n            }\n        });\n    });\n}\n"]},"metadata":{},"sourceType":"module"}