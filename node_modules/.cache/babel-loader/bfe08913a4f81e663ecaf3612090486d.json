{"ast":null,"code":"var _jsxFileName = \"/Users/sanjayar/Desktop/moody-main copy 2/src/pages/meeting/Ratings.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../reduxHooks\";\nimport { fetchActiveMeetingRatings, selectActiveMeetingRatings, subscribeToActiveMeetingRatings } from \"../../meetings/ratingsSlice\";\nimport { Typography, makeStyles, Paper } from \"@material-ui/core\";\nimport Loader from \"../../components/Loader\";\nimport { Alert } from \"@material-ui/lab\";\nimport RatingsBarChart from \"./RatingsBarChart\";\nimport { unwrapResult } from \"@reduxjs/toolkit\";\nimport { selectActiveMeetingFeedbackLinkId } from \"../../meetings/meetingsSelectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: \"rgba(44, 62, 80, 0.7)\",\n    backdropFilter: \"blur(10px)\",\n    borderRadius: theme.spacing(2),\n    padding: theme.spacing(4),\n    border: \"1px solid rgba(236, 240, 241, 0.1)\",\n    boxShadow: \"0 8px 32px rgba(0, 0, 0, 0.2)\"\n  },\n  title: {\n    color: \"#ECF0F1\",\n    fontSize: \"2rem\",\n    fontWeight: 600,\n    marginBottom: theme.spacing(4)\n  },\n  chartsContainer: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    gap: theme.spacing(3)\n  },\n  alert: {\n    backgroundColor: \"rgba(52, 73, 94, 0.7)\",\n    backdropFilter: \"blur(5px)\",\n    border: \"1px solid rgba(236, 240, 241, 0.1)\",\n    \"& .MuiAlert-message\": {\n      color: \"#ECF0F1\"\n    }\n  }\n}));\nexport default function Ratings() {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(fetchActiveMeetingRatings());\n  }, [dispatch]);\n  const activeMeetingFeedbackLinkId = useAppSelector(selectActiveMeetingFeedbackLinkId);\n  useEffect(() => {\n    let unsubscribe;\n\n    const subscribeToRatings = async () => {\n      unsubscribe = unwrapResult(await dispatch(subscribeToActiveMeetingRatings()));\n    };\n\n    subscribeToRatings();\n    return () => {\n      if (unsubscribe) {\n        unsubscribe();\n      }\n    };\n  }, [dispatch, // If the feedback link is created after opening the ratings page, the subscription should be run again\n  activeMeetingFeedbackLinkId]);\n  const ratingsLength = useAppSelector(state => selectActiveMeetingRatings(state).length);\n  const loading = useAppSelector(state => state.ratings.loading && state.ratings.ids.length === 0);\n  return loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      className: classes.title,\n      children: [\"Ratings (N=\", ratingsLength, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), ratingsLength === 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      className: classes.alert,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: [\"There are no ratings yet. Create a feedback link after you finished the meeting and send it to your audience. This page will refresh automatically.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Note: Feedback links are only valid for 30 minutes after the meeting has ended.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.chartsContainer,\n      children: [/*#__PURE__*/_jsxDEV(RatingsBarChart, {\n        questionType: \"overallStars\",\n        title: \"Overall experience\",\n        explanation: \"Shows the distribution of the overall experience scored by stars rom 1 to 5 (1=useless, 5=excellent). This is the score your audience gave using the feedback link you sent them.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RatingsBarChart, {\n        questionType: \"paceStars\",\n        title: \"Speaker's pace\",\n        explanation: \"Shows the distribution of the speaker's pace scored by stars from 1 to 5 (1=way too fast / slow, 5=just right). This is the score your audience gave using the feedback link you sent them.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RatingsBarChart, {\n        questionType: \"contentStars\",\n        title: \"Usefulness of content\",\n        explanation: \"Shows the distribution of the usefulness of the presentation's content scored by stars from 1 to 5 (1=useless, 5=excellent). This is the score your audience gave using the feedback link you sent them.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Ratings, \"UxXZs5oTXHhmmTz5xNFseXV+ISY=\", false, function () {\n  return [useStyles, useAppDispatch, useAppSelector, useAppSelector, useAppSelector];\n});\n\n_c = Ratings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ratings\");","map":{"version":3,"sources":["/Users/sanjayar/Desktop/moody-main copy 2/src/pages/meeting/Ratings.tsx"],"names":["useEffect","useAppDispatch","useAppSelector","fetchActiveMeetingRatings","selectActiveMeetingRatings","subscribeToActiveMeetingRatings","Typography","makeStyles","Paper","Loader","Alert","RatingsBarChart","unwrapResult","selectActiveMeetingFeedbackLinkId","useStyles","theme","root","backgroundColor","backdropFilter","borderRadius","spacing","padding","border","boxShadow","title","color","fontSize","fontWeight","marginBottom","chartsContainer","display","flexWrap","gap","alert","Ratings","classes","dispatch","activeMeetingFeedbackLinkId","unsubscribe","subscribeToRatings","ratingsLength","state","length","loading","ratings","ids"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,kBAA/C;AACA,SACEC,yBADF,EAEEC,0BAFF,EAGEC,+BAHF,QAIO,6BAJP;AAKA,SAAcC,UAAd,EAA0BC,UAA1B,EAAsCC,KAAtC,QAAmD,mBAAnD;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,iCAAT,QAAkD,kCAAlD;;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAAEQ,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,eAAe,EAAE,uBADb;AAEJC,IAAAA,cAAc,EAAE,YAFZ;AAGJC,IAAAA,YAAY,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CAHV;AAIJC,IAAAA,OAAO,EAAEN,KAAK,CAACK,OAAN,CAAc,CAAd,CAJL;AAKJE,IAAAA,MAAM,EAAE,oCALJ;AAMJC,IAAAA,SAAS,EAAE;AANP,GADiC;AASvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,SADF;AAELC,IAAAA,QAAQ,EAAE,MAFL;AAGLC,IAAAA,UAAU,EAAE,GAHP;AAILC,IAAAA,YAAY,EAAEb,KAAK,CAACK,OAAN,CAAc,CAAd;AAJT,GATgC;AAevCS,EAAAA,eAAe,EAAE;AACfC,IAAAA,OAAO,EAAE,MADM;AAEfC,IAAAA,QAAQ,EAAE,MAFK;AAGfC,IAAAA,GAAG,EAAEjB,KAAK,CAACK,OAAN,CAAc,CAAd;AAHU,GAfsB;AAoBvCa,EAAAA,KAAK,EAAE;AACLhB,IAAAA,eAAe,EAAE,uBADZ;AAELC,IAAAA,cAAc,EAAE,WAFX;AAGLI,IAAAA,MAAM,EAAE,oCAHH;AAIL,2BAAuB;AACrBG,MAAAA,KAAK,EAAE;AADc;AAJlB;AApBgC,CAAZ,CAAD,CAA5B;AA8BA,eAAe,SAASS,OAAT,GAAgC;AAAA;;AAC7C,QAAMC,OAAO,GAAGrB,SAAS,EAAzB;AACA,QAAMsB,QAAQ,GAAGnC,cAAc,EAA/B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdoC,IAAAA,QAAQ,CAACjC,yBAAyB,EAA1B,CAAR;AACD,GAFQ,EAEN,CAACiC,QAAD,CAFM,CAAT;AAIA,QAAMC,2BAA2B,GAAGnC,cAAc,CAChDW,iCADgD,CAAlD;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIsC,WAAJ;;AACA,UAAMC,kBAAkB,GAAG,YAAY;AACrCD,MAAAA,WAAW,GAAG1B,YAAY,CACxB,MAAMwB,QAAQ,CAAC/B,+BAA+B,EAAhC,CADU,CAA1B;AAGD,KAJD;;AAKAkC,IAAAA,kBAAkB;AAClB,WAAO,MAAM;AACX,UAAID,WAAJ,EAAiB;AACfA,QAAAA,WAAW;AACZ;AACF,KAJD;AAKD,GAbQ,EAaN,CACDF,QADC,EAED;AACAC,EAAAA,2BAHC,CAbM,CAAT;AAmBA,QAAMG,aAAa,GAAGtC,cAAc,CACjCuC,KAAD,IAAWrC,0BAA0B,CAACqC,KAAD,CAA1B,CAAkCC,MADX,CAApC;AAGA,QAAMC,OAAO,GAAGzC,cAAc,CAC3BuC,KAAD,IAAWA,KAAK,CAACG,OAAN,CAAcD,OAAd,IAAyBF,KAAK,CAACG,OAAN,CAAcC,GAAd,CAAkBH,MAAlB,KAA6B,CADrC,CAA9B;AAIA,SAAOC,OAAO,gBACZ,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UADY,gBAGZ,QAAC,KAAD;AAAO,IAAA,SAAS,EAAER,OAAO,CAACnB,IAA1B;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,SAAS,EAAEmB,OAAO,CAACX,KAA5C;AAAA,gCACcgB,aADd;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIGA,aAAa,KAAK,CAAlB,gBACC,QAAC,KAAD;AAAO,MAAA,QAAQ,EAAC,MAAhB;AAAuB,MAAA,SAAS,EAAEL,OAAO,CAACF,KAA1C;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAAA,uLAIE;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,gBAcC;AAAK,MAAA,SAAS,EAAEE,OAAO,CAACN,eAAxB;AAAA,8BACE,QAAC,eAAD;AACE,QAAA,YAAY,EAAC,cADf;AAEE,QAAA,KAAK,EAAC,oBAFR;AAGE,QAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,eAAD;AACE,QAAA,YAAY,EAAC,WADf;AAEE,QAAA,KAAK,EAAC,gBAFR;AAGE,QAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,cANF,eAWE,QAAC,eAAD;AACE,QAAA,YAAY,EAAC,cADf;AAEE,QAAA,KAAK,EAAC,uBAFR;AAGE,QAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AAyCD;;GA/EuBK,O;UACNpB,S,EACCb,c,EAMmBC,c,EAuBdA,c,EAGNA,c;;;KAlCMgC,O","sourcesContent":["import { useEffect } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../reduxHooks\";\nimport {\n  fetchActiveMeetingRatings,\n  selectActiveMeetingRatings,\n  subscribeToActiveMeetingRatings,\n} from \"../../meetings/ratingsSlice\";\nimport { Box, Typography, makeStyles, Paper } from \"@material-ui/core\";\nimport Loader from \"../../components/Loader\";\nimport { Alert } from \"@material-ui/lab\";\nimport RatingsBarChart from \"./RatingsBarChart\";\nimport { unwrapResult } from \"@reduxjs/toolkit\";\nimport { selectActiveMeetingFeedbackLinkId } from \"../../meetings/meetingsSelectors\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: \"rgba(44, 62, 80, 0.7)\",\n    backdropFilter: \"blur(10px)\",\n    borderRadius: theme.spacing(2),\n    padding: theme.spacing(4),\n    border: \"1px solid rgba(236, 240, 241, 0.1)\",\n    boxShadow: \"0 8px 32px rgba(0, 0, 0, 0.2)\",\n  },\n  title: {\n    color: \"#ECF0F1\",\n    fontSize: \"2rem\",\n    fontWeight: 600,\n    marginBottom: theme.spacing(4),\n  },\n  chartsContainer: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    gap: theme.spacing(3),\n  },\n  alert: {\n    backgroundColor: \"rgba(52, 73, 94, 0.7)\",\n    backdropFilter: \"blur(5px)\",\n    border: \"1px solid rgba(236, 240, 241, 0.1)\",\n    \"& .MuiAlert-message\": {\n      color: \"#ECF0F1\",\n    },\n  },\n}));\n\nexport default function Ratings(): JSX.Element {\n  const classes = useStyles();\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(fetchActiveMeetingRatings());\n  }, [dispatch]);\n\n  const activeMeetingFeedbackLinkId = useAppSelector(\n    selectActiveMeetingFeedbackLinkId\n  );\n\n  useEffect(() => {\n    let unsubscribe: () => void;\n    const subscribeToRatings = async () => {\n      unsubscribe = unwrapResult(\n        await dispatch(subscribeToActiveMeetingRatings())\n      );\n    };\n    subscribeToRatings();\n    return () => {\n      if (unsubscribe) {\n        unsubscribe();\n      }\n    };\n  }, [\n    dispatch,\n    // If the feedback link is created after opening the ratings page, the subscription should be run again\n    activeMeetingFeedbackLinkId,\n  ]);\n\n  const ratingsLength = useAppSelector(\n    (state) => selectActiveMeetingRatings(state).length\n  );\n  const loading = useAppSelector(\n    (state) => state.ratings.loading && state.ratings.ids.length === 0\n  );\n\n  return loading ? (\n    <Loader />\n  ) : (\n    <Paper className={classes.root}>\n      <Typography variant=\"h3\" className={classes.title}>\n        Ratings (N={ratingsLength})\n      </Typography>\n      {ratingsLength === 0 ? (\n        <Alert severity=\"info\" className={classes.alert}>\n          <Typography variant=\"body1\">\n            There are no ratings yet. Create a feedback link after you finished\n            the meeting and send it to your audience. This page will refresh\n            automatically.\n            <br />\n            <strong>\n              Note: Feedback links are only valid for 30 minutes after the\n              meeting has ended.\n            </strong>\n          </Typography>\n        </Alert>\n      ) : (\n        <div className={classes.chartsContainer}>\n          <RatingsBarChart\n            questionType=\"overallStars\"\n            title=\"Overall experience\"\n            explanation=\"Shows the distribution of the overall experience scored by stars rom 1 to 5 (1=useless, 5=excellent). This is the score your audience gave using the feedback link you sent them.\"\n          />\n          <RatingsBarChart\n            questionType=\"paceStars\"\n            title=\"Speaker's pace\"\n            explanation=\"Shows the distribution of the speaker's pace scored by stars from 1 to 5 (1=way too fast / slow, 5=just right). This is the score your audience gave using the feedback link you sent them.\"\n          />\n          <RatingsBarChart\n            questionType=\"contentStars\"\n            title=\"Usefulness of content\"\n            explanation=\"Shows the distribution of the usefulness of the presentation's content scored by stars from 1 to 5 (1=useless, 5=excellent). This is the score your audience gave using the feedback link you sent them.\"\n          />\n        </div>\n      )}\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}