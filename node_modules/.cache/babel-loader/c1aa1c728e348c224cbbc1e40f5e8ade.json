{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nexport var serializerMiddleware = function (options, serializer) {\n  return function (next, context) {\n    return function (args) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var endpoint, request;\n\n        var _a;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              endpoint = ((_a = context.endpointV2) === null || _a === void 0 ? void 0 : _a.url) && options.urlParser ? function () {\n                return __awaiter(void 0, void 0, void 0, function () {\n                  return __generator(this, function (_a) {\n                    return [2, options.urlParser(context.endpointV2.url)];\n                  });\n                });\n              } : options.endpoint;\n\n              if (!endpoint) {\n                throw new Error(\"No valid endpoint provider available.\");\n              }\n\n              return [4, serializer(args.input, __assign(__assign({}, options), {\n                endpoint: endpoint\n              }))];\n\n            case 1:\n              request = _b.sent();\n              return [2, next(__assign(__assign({}, args), {\n                request: request\n              }))];\n          }\n        });\n      });\n    };\n  };\n};","map":{"version":3,"sources":["/Users/sanjayar/Desktop/moody-main copy/node_modules/@aws-sdk/client-lex-runtime-v2/node_modules/@aws-sdk/middleware-serde/dist-es/serializerMiddleware.js"],"names":["__assign","__awaiter","__generator","serializerMiddleware","options","serializer","next","context","args","endpoint","request","_a","_b","label","endpointV2","url","urlParser","Error","input","sent"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,OAAO,IAAIC,oBAAoB,GAAG,UAAUC,OAAV,EAAmBC,UAAnB,EAA+B;AAC7D,SAAO,UAAUC,IAAV,EAAgBC,OAAhB,EAAyB;AAC5B,WAAO,UAAUC,IAAV,EAAgB;AAAE,aAAOP,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;AAC1E,YAAIQ,QAAJ,EAAcC,OAAd;;AACA,YAAIC,EAAJ;;AACA,eAAOT,WAAW,CAAC,IAAD,EAAO,UAAUU,EAAV,EAAc;AACnC,kBAAQA,EAAE,CAACC,KAAX;AACI,iBAAK,CAAL;AACIJ,cAAAA,QAAQ,GAAG,CAAC,CAACE,EAAE,GAAGJ,OAAO,CAACO,UAAd,MAA8B,IAA9B,IAAsCH,EAAE,KAAK,KAAK,CAAlD,GAAsD,KAAK,CAA3D,GAA+DA,EAAE,CAACI,GAAnE,KAA2EX,OAAO,CAACY,SAAnF,GACL,YAAY;AAAE,uBAAOf,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;AAAE,yBAAOC,WAAW,CAAC,IAAD,EAAO,UAAUS,EAAV,EAAc;AAC1G,2BAAO,CAAC,CAAD,EAAIP,OAAO,CAACY,SAAR,CAAkBT,OAAO,CAACO,UAAR,CAAmBC,GAArC,CAAJ,CAAP;AACH,mBAFwF,CAAlB;AAElE,iBAF2B,CAAhB;AAEP,eAHF,GAILX,OAAO,CAACK,QAJd;;AAKA,kBAAI,CAACA,QAAL,EAAe;AACX,sBAAM,IAAIQ,KAAJ,CAAU,uCAAV,CAAN;AACH;;AACD,qBAAO,CAAC,CAAD,EAAIZ,UAAU,CAACG,IAAI,CAACU,KAAN,EAAalB,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKI,OAAL,CAAT,EAAwB;AAAEK,gBAAAA,QAAQ,EAAEA;AAAZ,eAAxB,CAArB,CAAd,CAAP;;AACJ,iBAAK,CAAL;AACIC,cAAAA,OAAO,GAAGE,EAAE,CAACO,IAAH,EAAV;AACA,qBAAO,CAAC,CAAD,EAAIb,IAAI,CAACN,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKQ,IAAL,CAAT,EAAqB;AAAEE,gBAAAA,OAAO,EAAEA;AAAX,eAArB,CAAT,CAAR,CAAP;AAbR;AAeH,SAhBiB,CAAlB;AAiBH,OApBwC,CAAhB;AAoBpB,KApBL;AAqBH,GAtBD;AAuBH,CAxBM","sourcesContent":["import { __assign, __awaiter, __generator } from \"tslib\";\nexport var serializerMiddleware = function (options, serializer) {\n    return function (next, context) {\n        return function (args) { return __awaiter(void 0, void 0, void 0, function () {\n            var endpoint, request;\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        endpoint = ((_a = context.endpointV2) === null || _a === void 0 ? void 0 : _a.url) && options.urlParser\n                            ? function () { return __awaiter(void 0, void 0, void 0, function () { return __generator(this, function (_a) {\n                                return [2, options.urlParser(context.endpointV2.url)];\n                            }); }); }\n                            : options.endpoint;\n                        if (!endpoint) {\n                            throw new Error(\"No valid endpoint provider available.\");\n                        }\n                        return [4, serializer(args.input, __assign(__assign({}, options), { endpoint: endpoint }))];\n                    case 1:\n                        request = _b.sent();\n                        return [2, next(__assign(__assign({}, args), { request: request }))];\n                }\n            });\n        }); };\n    };\n};\n"]},"metadata":{},"sourceType":"module"}