{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n};\n\nimport { ConsoleLogger as Logger } from '../Logger/ConsoleLogger';\nvar logger = new Logger('Util');\n\nvar NonRetryableError =\n/** @class */\nfunction (_super) {\n  __extends(NonRetryableError, _super);\n\n  function NonRetryableError(message) {\n    var _this = _super.call(this, message) || this;\n\n    _this.nonRetryable = true;\n    return _this;\n  }\n\n  return NonRetryableError;\n}(Error);\n\nexport { NonRetryableError };\n\nvar isNonRetryableError = function (obj) {\n  var key = 'nonRetryable';\n  return obj && obj[key];\n};\n/**\n * @private\n * Internal use of Amplify only\n */\n\n\nexport function retry(functionToRetry, args, delayFn, onTerminate) {\n  return __awaiter(this, void 0, void 0, function () {\n    var _this = this;\n\n    return __generator(this, function (_a) {\n      if (typeof functionToRetry !== 'function') {\n        throw Error('functionToRetry must be a function');\n      }\n\n      return [2\n      /*return*/\n      , new Promise(function (resolve, reject) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var attempt, terminated, timeout, wakeUp, lastError, _loop_1, state_1;\n\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                attempt = 0;\n                terminated = false;\n\n                wakeUp = function () {};\n\n                onTerminate && onTerminate.then(function () {\n                  // signal not to try anymore.\n                  terminated = true; // stop sleeping if we're sleeping.\n\n                  clearTimeout(timeout);\n                  wakeUp();\n                });\n\n                _loop_1 = function () {\n                  var _a, _b, err_1, retryIn_1;\n\n                  return __generator(this, function (_c) {\n                    switch (_c.label) {\n                      case 0:\n                        attempt++;\n                        logger.debug(functionToRetry.name + \" attempt #\" + attempt + \" with this vars: \" + JSON.stringify(args));\n                        _c.label = 1;\n\n                      case 1:\n                        _c.trys.push([1, 3,, 7]);\n\n                        _a = {};\n                        _b = resolve;\n                        return [4\n                        /*yield*/\n                        , functionToRetry.apply(void 0, __spread(args))];\n\n                      case 2:\n                        return [2\n                        /*return*/\n                        , (_a.value = _b.apply(void 0, [_c.sent()]), _a)];\n\n                      case 3:\n                        err_1 = _c.sent();\n                        lastError = err_1;\n                        logger.debug(\"error on \" + functionToRetry.name, err_1);\n\n                        if (isNonRetryableError(err_1)) {\n                          logger.debug(functionToRetry.name + \" non retryable error\", err_1);\n                          return [2\n                          /*return*/\n                          , {\n                            value: reject(err_1)\n                          }];\n                        }\n\n                        retryIn_1 = delayFn(attempt, args, err_1);\n                        logger.debug(functionToRetry.name + \" retrying in \" + retryIn_1 + \" ms\");\n                        if (!(retryIn_1 === false || terminated)) return [3\n                        /*break*/\n                        , 4];\n                        return [2\n                        /*return*/\n                        , {\n                          value: reject(err_1)\n                        }];\n\n                      case 4:\n                        return [4\n                        /*yield*/\n                        , new Promise(function (r) {\n                          wakeUp = r; // export wakeUp for onTerminate handling\n\n                          timeout = setTimeout(wakeUp, retryIn_1);\n                        })];\n\n                      case 5:\n                        _c.sent();\n\n                        _c.label = 6;\n\n                      case 6:\n                        return [3\n                        /*break*/\n                        , 7];\n\n                      case 7:\n                        return [2\n                        /*return*/\n                        ];\n                    }\n                  });\n                };\n\n                _a.label = 1;\n\n              case 1:\n                if (!!terminated) return [3\n                /*break*/\n                , 3];\n                return [5\n                /*yield**/\n                , _loop_1()];\n\n              case 2:\n                state_1 = _a.sent();\n                if (typeof state_1 === \"object\") return [2\n                /*return*/\n                , state_1.value];\n                return [3\n                /*break*/\n                , 1];\n\n              case 3:\n                // reached if terminated while waiting for a timer.\n                reject(lastError);\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      })];\n    });\n  });\n}\nvar MAX_DELAY_MS = 5 * 60 * 1000;\n/**\n * @private\n * Internal use of Amplify only\n */\n\nexport function jitteredBackoff(maxDelayMs) {\n  if (maxDelayMs === void 0) {\n    maxDelayMs = MAX_DELAY_MS;\n  }\n\n  var BASE_TIME_MS = 100;\n  var JITTER_FACTOR = 100;\n  return function (attempt) {\n    var delay = Math.pow(2, attempt) * BASE_TIME_MS + JITTER_FACTOR * Math.random();\n    return delay > maxDelayMs ? false : delay;\n  };\n}\n/**\n * @private\n * Internal use of Amplify only\n */\n\nexport var jitteredExponentialRetry = function (functionToRetry, args, maxDelayMs, onTerminate) {\n  if (maxDelayMs === void 0) {\n    maxDelayMs = MAX_DELAY_MS;\n  }\n\n  return retry(functionToRetry, args, jitteredBackoff(maxDelayMs), onTerminate);\n};","map":{"version":3,"sources":["../../src/Util/Retry.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nimport { ConsoleLogger as Logger } from '../Logger/ConsoleLogger';\nvar logger = new Logger('Util');\nvar NonRetryableError = /** @class */ (function (_super) {\n    __extends(NonRetryableError, _super);\n    function NonRetryableError(message) {\n        var _this = _super.call(this, message) || this;\n        _this.nonRetryable = true;\n        return _this;\n    }\n    return NonRetryableError;\n}(Error));\nexport { NonRetryableError };\nvar isNonRetryableError = function (obj) {\n    var key = 'nonRetryable';\n    return obj && obj[key];\n};\n/**\n * @private\n * Internal use of Amplify only\n */\nexport function retry(functionToRetry, args, delayFn, onTerminate) {\n    return __awaiter(this, void 0, void 0, function () {\n        var _this = this;\n        return __generator(this, function (_a) {\n            if (typeof functionToRetry !== 'function') {\n                throw Error('functionToRetry must be a function');\n            }\n            return [2 /*return*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\n                    var attempt, terminated, timeout, wakeUp, lastError, _loop_1, state_1;\n                    return __generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0:\n                                attempt = 0;\n                                terminated = false;\n                                wakeUp = function () { };\n                                onTerminate &&\n                                    onTerminate.then(function () {\n                                        // signal not to try anymore.\n                                        terminated = true;\n                                        // stop sleeping if we're sleeping.\n                                        clearTimeout(timeout);\n                                        wakeUp();\n                                    });\n                                _loop_1 = function () {\n                                    var _a, _b, err_1, retryIn_1;\n                                    return __generator(this, function (_c) {\n                                        switch (_c.label) {\n                                            case 0:\n                                                attempt++;\n                                                logger.debug(functionToRetry.name + \" attempt #\" + attempt + \" with this vars: \" + JSON.stringify(args));\n                                                _c.label = 1;\n                                            case 1:\n                                                _c.trys.push([1, 3, , 7]);\n                                                _a = {};\n                                                _b = resolve;\n                                                return [4 /*yield*/, functionToRetry.apply(void 0, __spread(args))];\n                                            case 2: return [2 /*return*/, (_a.value = _b.apply(void 0, [_c.sent()]), _a)];\n                                            case 3:\n                                                err_1 = _c.sent();\n                                                lastError = err_1;\n                                                logger.debug(\"error on \" + functionToRetry.name, err_1);\n                                                if (isNonRetryableError(err_1)) {\n                                                    logger.debug(functionToRetry.name + \" non retryable error\", err_1);\n                                                    return [2 /*return*/, { value: reject(err_1) }];\n                                                }\n                                                retryIn_1 = delayFn(attempt, args, err_1);\n                                                logger.debug(functionToRetry.name + \" retrying in \" + retryIn_1 + \" ms\");\n                                                if (!(retryIn_1 === false || terminated)) return [3 /*break*/, 4];\n                                                return [2 /*return*/, { value: reject(err_1) }];\n                                            case 4: return [4 /*yield*/, new Promise(function (r) {\n                                                    wakeUp = r; // export wakeUp for onTerminate handling\n                                                    timeout = setTimeout(wakeUp, retryIn_1);\n                                                })];\n                                            case 5:\n                                                _c.sent();\n                                                _c.label = 6;\n                                            case 6: return [3 /*break*/, 7];\n                                            case 7: return [2 /*return*/];\n                                        }\n                                    });\n                                };\n                                _a.label = 1;\n                            case 1:\n                                if (!!terminated) return [3 /*break*/, 3];\n                                return [5 /*yield**/, _loop_1()];\n                            case 2:\n                                state_1 = _a.sent();\n                                if (typeof state_1 === \"object\")\n                                    return [2 /*return*/, state_1.value];\n                                return [3 /*break*/, 1];\n                            case 3:\n                                // reached if terminated while waiting for a timer.\n                                reject(lastError);\n                                return [2 /*return*/];\n                        }\n                    });\n                }); })];\n        });\n    });\n}\nvar MAX_DELAY_MS = 5 * 60 * 1000;\n/**\n * @private\n * Internal use of Amplify only\n */\nexport function jitteredBackoff(maxDelayMs) {\n    if (maxDelayMs === void 0) { maxDelayMs = MAX_DELAY_MS; }\n    var BASE_TIME_MS = 100;\n    var JITTER_FACTOR = 100;\n    return function (attempt) {\n        var delay = Math.pow(2, attempt) * BASE_TIME_MS + JITTER_FACTOR * Math.random();\n        return delay > maxDelayMs ? false : delay;\n    };\n}\n/**\n * @private\n * Internal use of Amplify only\n */\nexport var jitteredExponentialRetry = function (functionToRetry, args, maxDelayMs, onTerminate) {\n    if (maxDelayMs === void 0) { maxDelayMs = MAX_DELAY_MS; }\n    return retry(functionToRetry, args, jitteredBackoff(maxDelayMs), onTerminate);\n};\n//# sourceMappingURL=Retry.js.map"]},"metadata":{},"sourceType":"module"}