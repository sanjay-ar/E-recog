{"ast":null,"code":"export default class ScreenCaptureService {\n  constructor() {\n    this._mediaStream = null;\n    this._videoEl = null;\n  }\n\n  async startCapturing(audio = false) {\n    this._mediaStream = await navigator.mediaDevices.getDisplayMedia({\n      audio\n    });\n  }\n\n  stopCapturing() {\n    if (!this._mediaStream) {\n      return console.info(\"No media stream to stop found. Ignoring method call.\");\n    }\n\n    this._mediaStream.getTracks().forEach(track => {\n      track.stop();\n    });\n\n    this._mediaStream = null;\n\n    if (this._videoEl) {\n      this._videoEl.srcObject = null;\n    }\n  }\n\n  attachStreamToVideo(videoEl) {\n    this._videoEl = videoEl;\n    this._videoEl.srcObject = this._mediaStream;\n    return this._videoEl.play();\n  }\n\n  get mediaStream() {\n    if (this._mediaStream && this._mediaStream.getTracks().length > 0) {\n      return this._mediaStream;\n    }\n\n    throw new Error(\"No media stream is registered. Did you start the screen capturing?\");\n  }\n\n}","map":{"version":3,"sources":["/Users/sanjayar/Desktop/moody-main copy/src/media/ScreenCaptureService.ts"],"names":["ScreenCaptureService","_mediaStream","_videoEl","startCapturing","audio","navigator","mediaDevices","getDisplayMedia","stopCapturing","console","info","getTracks","forEach","track","stop","srcObject","attachStreamToVideo","videoEl","play","mediaStream","length","Error"],"mappings":"AAAA,eAAe,MAAMA,oBAAN,CAA2B;AAAA;AAAA,SAChCC,YADgC,GACG,IADH;AAAA,SAEhCC,QAFgC,GAEI,IAFJ;AAAA;;AAIb,QAAdC,cAAc,CAACC,KAAc,GAAG,KAAlB,EAAwC;AACjE,SAAKH,YAAL,GAAoB,MAAOI,SAAS,CAACC,YAAX,CAAgCC,eAAhC,CAAgD;AACxEH,MAAAA;AADwE,KAAhD,CAA1B;AAGD;;AAEMI,EAAAA,aAAa,GAAS;AAC3B,QAAI,CAAC,KAAKP,YAAV,EAAwB;AACtB,aAAOQ,OAAO,CAACC,IAAR,CACL,sDADK,CAAP;AAGD;;AAED,SAAKT,YAAL,CAAkBU,SAAlB,GAA8BC,OAA9B,CAAuCC,KAAD,IAAW;AAC/CA,MAAAA,KAAK,CAACC,IAAN;AACD,KAFD;;AAIA,SAAKb,YAAL,GAAoB,IAApB;;AACA,QAAI,KAAKC,QAAT,EAAmB;AACjB,WAAKA,QAAL,CAAca,SAAd,GAA0B,IAA1B;AACD;AACF;;AAEMC,EAAAA,mBAAmB,CAACC,OAAD,EAA2C;AACnE,SAAKf,QAAL,GAAgBe,OAAhB;AACA,SAAKf,QAAL,CAAca,SAAd,GAA0B,KAAKd,YAA/B;AACA,WAAO,KAAKC,QAAL,CAAcgB,IAAd,EAAP;AACD;;AAEqB,MAAXC,WAAW,GAAgB;AACpC,QAAI,KAAKlB,YAAL,IAAqB,KAAKA,YAAL,CAAkBU,SAAlB,GAA8BS,MAA9B,GAAuC,CAAhE,EAAmE;AACjE,aAAO,KAAKnB,YAAZ;AACD;;AAED,UAAM,IAAIoB,KAAJ,CACJ,oEADI,CAAN;AAGD;;AAzCuC","sourcesContent":["export default class ScreenCaptureService {\n  private _mediaStream: MediaStream | null = null;\n  private _videoEl: HTMLVideoElement | null = null;\n\n  public async startCapturing(audio: boolean = false): Promise<void> {\n    this._mediaStream = await (navigator.mediaDevices as any).getDisplayMedia({\n      audio,\n    });\n  }\n\n  public stopCapturing(): void {\n    if (!this._mediaStream) {\n      return console.info(\n        \"No media stream to stop found. Ignoring method call.\"\n      );\n    }\n\n    this._mediaStream.getTracks().forEach((track) => {\n      track.stop();\n    });\n\n    this._mediaStream = null;\n    if (this._videoEl) {\n      this._videoEl.srcObject = null;\n    }\n  }\n\n  public attachStreamToVideo(videoEl: HTMLVideoElement): Promise<void> {\n    this._videoEl = videoEl;\n    this._videoEl.srcObject = this._mediaStream;\n    return this._videoEl.play();\n  }\n\n  public get mediaStream(): MediaStream {\n    if (this._mediaStream && this._mediaStream.getTracks().length > 0) {\n      return this._mediaStream;\n    }\n\n    throw new Error(\n      \"No media stream is registered. Did you start the screen capturing?\"\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}