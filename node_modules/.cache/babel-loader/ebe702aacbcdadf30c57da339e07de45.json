{"ast":null,"code":"var _jsxFileName = \"/Users/sanjayar/Desktop/moody-main copy 2/src/pages/meeting/RatingsBarChart.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, IconButton, Paper, Popover, Typography, useTheme, makeStyles } from \"@material-ui/core\";\nimport { useAppSelector } from \"../../reduxHooks\";\nimport { useState } from \"react\";\nimport { InfoOutlined } from \"@material-ui/icons\";\nimport Plot from \"react-plotly.js\";\nimport { selectActiveMeetingRatings } from \"../../meetings/ratingsSlice\";\nimport { range } from \"lodash-es\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: \"rgba(52, 73, 94, 0.5)\",\n    backdropFilter: \"blur(5px)\",\n    borderRadius: theme.spacing(1.5),\n    border: \"1px solid rgba(236, 240, 241, 0.1)\",\n    transition: \"all 0.3s ease-in-out\",\n    flex: \"1 1 calc(50% - 12px)\",\n    minWidth: \"300px\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(52, 73, 94, 0.7)\",\n      transform: \"translateY(-2px)\",\n      boxShadow: \"0 5px 15px rgba(0, 0, 0, 0.2)\"\n    }\n  },\n  infoButton: {\n    color: \"rgba(236, 240, 241, 0.7)\",\n    padding: theme.spacing(1),\n    \"&:hover\": {\n      backgroundColor: \"rgba(236, 240, 241, 0.1)\"\n    }\n  },\n  popover: {\n    \"& .MuiPopover-paper\": {\n      backgroundColor: \"rgba(44, 62, 80, 0.95)\",\n      backdropFilter: \"blur(10px)\",\n      border: \"1px solid rgba(236, 240, 241, 0.1)\",\n      borderRadius: theme.spacing(1),\n      maxWidth: 300\n    }\n  },\n  popoverText: {\n    color: \"#ECF0F1\"\n  }\n}));\nexport default function RatingsBarChart({\n  questionType,\n  title,\n  explanation\n}) {\n  _s();\n\n  const theme = useTheme();\n  const classes = useStyles();\n  const ratings = useAppSelector(selectActiveMeetingRatings); // Popover\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleOpenPopover = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClosePopover = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      position: \"relative\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        zIndex: 1,\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          className: classes.infoButton,\n          onClick: handleOpenPopover,\n          size: \"small\",\n          children: /*#__PURE__*/_jsxDEV(InfoOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Popover, {\n          open: open,\n          anchorEl: anchorEl,\n          onClose: handleClosePopover,\n          className: classes.popover,\n          anchorOrigin: {\n            vertical: \"bottom\",\n            horizontal: \"center\"\n          },\n          transformOrigin: {\n            vertical: \"top\",\n            horizontal: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            p: 2,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              className: classes.popoverText,\n              children: explanation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Plot, {\n      config: {\n        displayModeBar: false\n      },\n      layout: {\n        title: {\n          text: title,\n          font: {\n            family: theme.typography.fontFamily,\n            size: 18,\n            color: \"#ECF0F1\"\n          },\n          y: 0.9\n        },\n        paper_bgcolor: \"transparent\",\n        plot_bgcolor: \"transparent\",\n        hovermode: false,\n        width: 605,\n        height: 375,\n        margin: {\n          l: 40,\n          r: 30,\n          t: 50,\n          b: 70\n        },\n        font: {\n          family: theme.typography.fontFamily,\n          color: \"#ECF0F1\",\n          size: 14\n        },\n        yaxis: {\n          tickformat: \",d\",\n          rangemode: \"nonnegative\",\n          gridcolor: \"rgba(236, 240, 241, 0.1)\",\n          zerolinecolor: \"rgba(236, 240, 241, 0.1)\"\n        },\n        xaxis: {\n          gridcolor: \"rgba(236, 240, 241, 0.1)\",\n          zerolinecolor: \"rgba(236, 240, 241, 0.1)\"\n        },\n        showlegend: false,\n        transition: {\n          duration: 500,\n          easing: \"cubic-in-out\"\n        }\n      },\n      data: [{\n        x: range(1, 6).map(i => range(1, i).reduce(prev => prev + \"⭐\", \"⭐\")),\n        y: range(1, 6).map(i => ratings.filter(r => r[questionType] === i).length),\n        marker: {\n          color: \"rgba(52, 152, 219, 0.7)\",\n          line: {\n            color: \"rgba(52, 152, 219, 0.9)\",\n            width: 1\n          }\n        },\n        type: \"bar\",\n        hoverinfo: \"y\"\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RatingsBarChart, \"UW/QwrJXTIRklG94oRMitadgobY=\", false, function () {\n  return [useTheme, useStyles, useAppSelector];\n});\n\n_c = RatingsBarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"RatingsBarChart\");","map":{"version":3,"sources":["/Users/sanjayar/Desktop/moody-main copy 2/src/pages/meeting/RatingsBarChart.tsx"],"names":["Box","IconButton","Paper","Popover","Typography","useTheme","makeStyles","useAppSelector","useState","InfoOutlined","Plot","selectActiveMeetingRatings","range","useStyles","theme","root","backgroundColor","backdropFilter","borderRadius","spacing","border","transition","flex","minWidth","transform","boxShadow","infoButton","color","padding","popover","maxWidth","popoverText","RatingsBarChart","questionType","title","explanation","classes","ratings","anchorEl","setAnchorEl","handleOpenPopover","event","currentTarget","handleClosePopover","open","Boolean","vertical","horizontal","displayModeBar","text","font","family","typography","fontFamily","size","y","paper_bgcolor","plot_bgcolor","hovermode","width","height","margin","l","r","t","b","yaxis","tickformat","rangemode","gridcolor","zerolinecolor","xaxis","showlegend","duration","easing","x","map","i","reduce","prev","filter","length","marker","line","type","hoverinfo"],"mappings":"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","sourcesContent":["import {\n  Box,\n  IconButton,\n  Paper,\n  Popover,\n  Typography,\n  useTheme,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { Rating } from \"../../models\";\nimport { useAppSelector } from \"../../reduxHooks\";\nimport { useState } from \"react\";\nimport { InfoOutlined } from \"@material-ui/icons\";\nimport Plot from \"react-plotly.js\";\nimport { selectActiveMeetingRatings } from \"../../meetings/ratingsSlice\";\nimport { range } from \"lodash-es\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: \"rgba(52, 73, 94, 0.5)\",\n    backdropFilter: \"blur(5px)\",\n    borderRadius: theme.spacing(1.5),\n    border: \"1px solid rgba(236, 240, 241, 0.1)\",\n    transition: \"all 0.3s ease-in-out\",\n    flex: \"1 1 calc(50% - 12px)\",\n    minWidth: \"300px\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(52, 73, 94, 0.7)\",\n      transform: \"translateY(-2px)\",\n      boxShadow: \"0 5px 15px rgba(0, 0, 0, 0.2)\",\n    },\n  },\n  infoButton: {\n    color: \"rgba(236, 240, 241, 0.7)\",\n    padding: theme.spacing(1),\n    \"&:hover\": {\n      backgroundColor: \"rgba(236, 240, 241, 0.1)\",\n    },\n  },\n  popover: {\n    \"& .MuiPopover-paper\": {\n      backgroundColor: \"rgba(44, 62, 80, 0.95)\",\n      backdropFilter: \"blur(10px)\",\n      border: \"1px solid rgba(236, 240, 241, 0.1)\",\n      borderRadius: theme.spacing(1),\n      maxWidth: 300,\n    },\n  },\n  popoverText: {\n    color: \"#ECF0F1\",\n  },\n}));\n\ntype RatingsBarChartProps = {\n  questionType: \"overallStars\" | \"contentStars\" | \"paceStars\";\n  title: string;\n  explanation: string;\n};\n\nexport default function RatingsBarChart({\n  questionType,\n  title,\n  explanation,\n}: RatingsBarChartProps): JSX.Element {\n  const theme = useTheme();\n  const classes = useStyles();\n  const ratings: Rating[] = useAppSelector(selectActiveMeetingRatings);\n\n  // Popover\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n\n  const handleOpenPopover = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClosePopover = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <Paper className={classes.root}>\n      <Box position=\"relative\">\n        <Box position=\"absolute\" top={0} right={0} zIndex={1}>\n          <IconButton\n            className={classes.infoButton}\n            onClick={handleOpenPopover}\n            size=\"small\"\n          >\n            <InfoOutlined />\n          </IconButton>\n          <Popover\n            open={open}\n            anchorEl={anchorEl}\n            onClose={handleClosePopover}\n            className={classes.popover}\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"center\",\n            }}\n            transformOrigin={{\n              vertical: \"top\",\n              horizontal: \"center\",\n            }}\n          >\n            <Box p={2}>\n              <Typography variant=\"body2\" className={classes.popoverText}>\n                {explanation}\n              </Typography>\n            </Box>\n          </Popover>\n        </Box>\n      </Box>\n      <Plot\n        config={{\n          displayModeBar: false,\n        }}\n        layout={{\n          title: {\n            text: title,\n            font: {\n              family: theme.typography.fontFamily,\n              size: 18,\n              color: \"#ECF0F1\",\n            },\n            y: 0.9,\n          },\n          paper_bgcolor: \"transparent\",\n          plot_bgcolor: \"transparent\",\n          hovermode: false,\n          width: 605,\n          height: 375,\n          margin: {\n            l: 40,\n            r: 30,\n            t: 50,\n            b: 70,\n          },\n          font: {\n            family: theme.typography.fontFamily,\n            color: \"#ECF0F1\",\n            size: 14,\n          },\n          yaxis: {\n            tickformat: \",d\",\n            rangemode: \"nonnegative\",\n            gridcolor: \"rgba(236, 240, 241, 0.1)\",\n            zerolinecolor: \"rgba(236, 240, 241, 0.1)\",\n          },\n          xaxis: {\n            gridcolor: \"rgba(236, 240, 241, 0.1)\",\n            zerolinecolor: \"rgba(236, 240, 241, 0.1)\",\n          },\n          showlegend: false,\n          transition: {\n            duration: 500,\n            easing: \"cubic-in-out\",\n          },\n        }}\n        data={[\n          {\n            x: range(1, 6).map((i) =>\n              range(1, i).reduce((prev) => prev + \"⭐\", \"⭐\")\n            ),\n            y: range(1, 6).map(\n              (i) => ratings.filter((r) => r[questionType] === i).length\n            ),\n            marker: {\n              color: \"rgba(52, 152, 219, 0.7)\",\n              line: {\n                color: \"rgba(52, 152, 219, 0.9)\",\n                width: 1,\n              },\n            },\n            type: \"bar\",\n            hoverinfo: \"y\",\n          },\n        ]}\n      />\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}