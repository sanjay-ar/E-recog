"use strict";
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var client_cognito_identity_1 = require("@aws-sdk/client-cognito-identity");
var Platform_1 = require("../Platform");
/**
 * Returns a CognitoIdentityClient with middleware
 * @param {CognitoIdentityClientConfig} config
 * @return {CognitoIdentityClient}
 */
function createCognitoIdentityClient(config) {
    var client = new client_cognito_identity_1.CognitoIdentityClient({
        region: config.region,
        customUserAgent: Platform_1.getAmplifyUserAgent(),
    });
    client.middlewareStack.add(function (next, _) { return function (args) {
        return next(middlewareArgs(args));
    }; }, {
        step: 'build',
        name: 'cacheControlMiddleWare',
    });
    return client;
}
exports.createCognitoIdentityClient = createCognitoIdentityClient;
function middlewareArgs(args) {
    return __assign(__assign({}, args), { request: __assign(__assign({}, args.request), { headers: __assign(__assign({}, args.request.headers), { 'cache-control': 'no-store' }) }) });
}
exports.middlewareArgs = middlewareArgs;
//# sourceMappingURL=CognitoIdentityClient.js.map